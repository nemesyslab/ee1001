

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Apr 15 02:20:28 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	dabs	1,0x7E,2
    23  0000                     	;# 
    24  0001                     	;# 
    25  0002                     	;# 
    26  0003                     	;# 
    27  0004                     	;# 
    28  0005                     	;# 
    29  0006                     	;# 
    30  0007                     	;# 
    31  0008                     	;# 
    32  0009                     	;# 
    33  000A                     	;# 
    34  000B                     	;# 
    35  000C                     	;# 
    36  000D                     	;# 
    37  000E                     	;# 
    38  000E                     	;# 
    39  000F                     	;# 
    40  0010                     	;# 
    41  0011                     	;# 
    42  0012                     	;# 
    43  0013                     	;# 
    44  0014                     	;# 
    45  0015                     	;# 
    46  0015                     	;# 
    47  0016                     	;# 
    48  0017                     	;# 
    49  0018                     	;# 
    50  0019                     	;# 
    51  001A                     	;# 
    52  001B                     	;# 
    53  001B                     	;# 
    54  001C                     	;# 
    55  001D                     	;# 
    56  001E                     	;# 
    57  001F                     	;# 
    58  0081                     	;# 
    59  0085                     	;# 
    60  0086                     	;# 
    61  0087                     	;# 
    62  0088                     	;# 
    63  0089                     	;# 
    64  008C                     	;# 
    65  008D                     	;# 
    66  008E                     	;# 
    67  0091                     	;# 
    68  0092                     	;# 
    69  0093                     	;# 
    70  0094                     	;# 
    71  0098                     	;# 
    72  0099                     	;# 
    73  009C                     	;# 
    74  009D                     	;# 
    75  009E                     	;# 
    76  009F                     	;# 
    77  010C                     	;# 
    78  010D                     	;# 
    79  010E                     	;# 
    80  010F                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  001F                     _ADCON0	set	31
    84  001F                     _ADCON0bits	set	31
    85  001E                     _ADRESH	set	30
    86  000B                     _INTCON	set	11
    87  0006                     _PORTBbits	set	6
    88  009F                     _ADCON1	set	159
    89  009E                     _ADRESL	set	158
    90  009C                     _CMCON	set	156
    91  0085                     _TRISA	set	133
    92  0086                     _TRISBbits	set	134
    93                           
    94                           	psect	strings
    95  0003                     __pstrings:	
    96  0003                     stringtab:	
    97  0003                     __stringtab:	
    98  0003                     stringcode:	
    99                           ;	String table - string pointers are 1 byte each
   100                           
   101  0003                     stringdir:	
   102  0003  3000               	movlw	high stringdir
   103  0004  008A               	movwf	10
   104  0005  0804               	movf	4,w
   105  0006  0A84               	incf	4,f
   106  0007  0782               	addwf	2,f
   107  0008                     __stringbase:	
   108  0008  3400               	retlw	0
   109  0009                     __end_of__stringtab:	
   110  0009                     __stringdata:	
   111  0009                     STR_1:	
   112  0009  346D               	retlw	109	;'m'
   113  000A  3469               	retlw	105	;'i'
   114  000B  346B               	retlw	107	;'k'
   115  000C  3472               	retlw	114	;'r'
   116  000D  346F               	retlw	111	;'o'
   117  000E  3445               	retlw	69	;'E'
   118  000F  346C               	retlw	108	;'l'
   119  0010  3465               	retlw	101	;'e'
   120  0011  346B               	retlw	107	;'k'
   121  0012  3474               	retlw	116	;'t'
   122  0013  3472               	retlw	114	;'r'
   123  0014  346F               	retlw	111	;'o'
   124  0015  346E               	retlw	110	;'n'
   125  0016  3469               	retlw	105	;'i'
   126  0017  346B               	retlw	107	;'k'
   127  0018  3461               	retlw	97	;'a'
   128  0019  3400               	retlw	0
   129  001A                     STR_2:	
   130  001A  344C               	retlw	76	;'L'
   131  001B  3443               	retlw	67	;'C'
   132  001C  3444               	retlw	68	;'D'
   133  001D  3420               	retlw	32	;' '
   134  001E  3465               	retlw	101	;'e'
   135  001F  3478               	retlw	120	;'x'
   136  0020  3461               	retlw	97	;'a'
   137  0021  346D               	retlw	109	;'m'
   138  0022  3470               	retlw	112	;'p'
   139  0023  346C               	retlw	108	;'l'
   140  0024  3465               	retlw	101	;'e'
   141  0025  3400               	retlw	0
   142  0026                     STR_3:	
   143  0026  3476               	retlw	118	;'v'
   144  0027  346F               	retlw	111	;'o'
   145  0028  346C               	retlw	108	;'l'
   146  0029  3474               	retlw	116	;'t'
   147  002A  3461               	retlw	97	;'a'
   148  002B  3467               	retlw	103	;'g'
   149  002C  3465               	retlw	101	;'e'
   150  002D  343A               	retlw	58	;':'
   151  002E  3400               	retlw	0
   152  002F                     __end_of__stringdata:	
   153                           
   154                           ; #config settings
   155  0000                     
   156                           	psect	cinit
   157  07F4                     start_initialization:	
   158  07F4                     __initialization:	
   159                           
   160                           ; Clear objects allocated to COMMON
   161  07F4  01FD               	clrf	__pbssCOMMON& (0+127)
   162                           
   163                           ; Clear objects allocated to BANK0
   164  07F5  01B1               	clrf	__pbssBANK0& (0+127)
   165  07F6  01B2               	clrf	(__pbssBANK0+1)& (0+127)
   166  07F7  01B3               	clrf	(__pbssBANK0+2)& (0+127)
   167  07F8  01B4               	clrf	(__pbssBANK0+3)& (0+127)
   168  07F9  01B5               	clrf	(__pbssBANK0+4)& (0+127)
   169  07FA  01B6               	clrf	(__pbssBANK0+5)& (0+127)
   170  07FB  01B7               	clrf	(__pbssBANK0+6)& (0+127)
   171  07FC                     end_of_initialization:	
   172                           ;End of C runtime variable initialization code
   173                           
   174  07FC                     __end_of__initialization:	
   175  07FC  0183               	clrf	3
   176  07FD  120A  118A  2E8D   	ljmp	_main	;jump to C main() function
   177                           
   178                           	psect	bssCOMMON
   179  007D                     __pbssCOMMON:	
   180  007D                     _ch:	
   181  007D                     	ds	1
   182                           
   183                           	psect	bssBANK0
   184  0031                     __pbssBANK0:	
   185  0031                     _tlong:	
   186  0031                     	ds	4
   187  0035                     _adc_rd:	
   188  0035                     	ds	2
   189  0037                     _text:	
   190  0037                     	ds	1
   191                           
   192                           	psect	cstackCOMMON
   193  0070                     __pcstackCOMMON:	
   194  0070                     ?_Lcd_Cmd:	
   195  0070                     ?_Lcd_Chr_CP:	
   196                           ; 0 bytes @ 0x0
   197                           
   198  0070                     ?_Delay_5us:	
   199                           ; 0 bytes @ 0x0
   200                           
   201  0070                     ??_Delay_5us:	
   202                           ; 0 bytes @ 0x0
   203                           
   204  0070                     ?_Delay_5500us:	
   205                           ; 0 bytes @ 0x0
   206                           
   207  0070                     ??_Delay_5500us:	
   208                           ; 0 bytes @ 0x0
   209                           
   210  0070                     ?_Lcd_Init:	
   211                           ; 0 bytes @ 0x0
   212                           
   213  0070                     ?_ADCInit:	
   214                           ; 0 bytes @ 0x0
   215                           
   216  0070                     ??_ADCInit:	
   217                           ; 0 bytes @ 0x0
   218                           
   219  0070                     ?_main:	
   220                           ; 0 bytes @ 0x0
   221                           
   222  0070                     ?___aldiv:	
   223                           ; 2 bytes @ 0x0
   224                           
   225  0070                     ?___lmul:	
   226                           ; 4 bytes @ 0x0
   227                           
   228  0070                     ___aldiv@divisor:	
   229                           ; 4 bytes @ 0x0
   230                           
   231  0070                     ___lmul@multiplier:	
   232                           ; 4 bytes @ 0x0
   233                           
   234                           
   235                           ; 4 bytes @ 0x0
   236  0070                     	ds	2
   237  0072                     ??_Lcd_Cmd:	
   238  0072                     ??_Lcd_Chr_CP:	
   239                           ; 0 bytes @ 0x2
   240                           
   241                           
   242                           ; 0 bytes @ 0x2
   243  0072                     	ds	2
   244  0074                     Lcd_Chr_CP@Chr_CP:	
   245  0074                     Lcd_Cmd@Cmd:	
   246                           ; 1 bytes @ 0x4
   247                           
   248  0074                     ___aldiv@dividend:	
   249                           ; 1 bytes @ 0x4
   250                           
   251  0074                     ___lmul@multiplicand:	
   252                           ; 4 bytes @ 0x4
   253                           
   254                           
   255                           ; 4 bytes @ 0x4
   256  0074                     	ds	1
   257  0075                     ??_Lcd_Init:	
   258  0075                     ?_Lcd_Out:	
   259                           ; 0 bytes @ 0x5
   260                           
   261  0075                     ?_Lcd_Chr:	
   262                           ; 0 bytes @ 0x5
   263                           
   264  0075                     Lcd_Out@x:	
   265                           ; 0 bytes @ 0x5
   266                           
   267  0075                     Lcd_Chr@x:	
   268                           ; 1 bytes @ 0x5
   269                           
   270                           
   271                           ; 1 bytes @ 0x5
   272  0075                     	ds	1
   273  0076                     Lcd_Init@data:	
   274  0076                     Lcd_Out@buffer:	
   275                           ; 1 bytes @ 0x6
   276                           
   277  0076                     Lcd_Chr@Chr:	
   278                           ; 1 bytes @ 0x6
   279                           
   280                           
   281                           ; 1 bytes @ 0x6
   282  0076                     	ds	1
   283  0077                     ??_Lcd_Out:	
   284  0077                     ??_Lcd_Chr:	
   285                           ; 0 bytes @ 0x7
   286                           
   287                           
   288                           ; 0 bytes @ 0x7
   289  0077                     	ds	1
   290  0078                     ??___aldiv:	
   291  0078                     ??___lmul:	
   292                           ; 0 bytes @ 0x8
   293                           
   294  0078                     Lcd_Out@y:	
   295                           ; 0 bytes @ 0x8
   296                           
   297  0078                     Lcd_Chr@y:	
   298                           ; 1 bytes @ 0x8
   299                           
   300                           
   301                           ; 1 bytes @ 0x8
   302  0078                     	ds	1
   303  0079                     ??___almod:	
   304  0079                     Lcd_Out@data:	
   305                           ; 0 bytes @ 0x9
   306                           
   307  0079                     Lcd_Chr@data:	
   308                           ; 1 bytes @ 0x9
   309                           
   310  0079                     ___lmul@product:	
   311                           ; 1 bytes @ 0x9
   312                           
   313                           
   314                           ; 4 bytes @ 0x9
   315  0079                     	ds	1
   316  007A                     ___almod@counter:	
   317                           
   318                           ; 1 bytes @ 0xA
   319  007A                     	ds	1
   320  007B                     ___almod@sign:	
   321                           
   322                           ; 1 bytes @ 0xB
   323  007B                     	ds	2
   324                           
   325                           	psect	cstackBANK0
   326  0020                     __pcstackBANK0:	
   327  0020                     ___aldiv@counter:	
   328                           
   329                           ; 1 bytes @ 0x0
   330  0020                     	ds	1
   331  0021                     ___aldiv@sign:	
   332                           
   333                           ; 1 bytes @ 0x1
   334  0021                     	ds	1
   335  0022                     ___aldiv@quotient:	
   336                           
   337                           ; 4 bytes @ 0x2
   338  0022                     	ds	4
   339  0026                     ?___almod:	
   340  0026                     ___almod@divisor:	
   341                           ; 4 bytes @ 0x6
   342                           
   343                           
   344                           ; 4 bytes @ 0x6
   345  0026                     	ds	4
   346  002A                     ___almod@dividend:	
   347                           
   348                           ; 4 bytes @ 0xA
   349  002A                     	ds	4
   350  002E                     ??_main:	
   351                           
   352                           ; 0 bytes @ 0xE
   353  002E                     	ds	3
   354                           
   355                           	psect	maintext
   356  068D                     __pmaintext:	
   357 ;;
   358 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   359 ;;
   360 ;; *************** function _main *****************
   361 ;; Defined at:
   362 ;;		line 39 in file "main.c"
   363 ;; Parameters:    Size  Location     Type
   364 ;;		None
   365 ;; Auto vars:     Size  Location     Type
   366 ;;		None
   367 ;; Return value:  Size  Location     Type
   368 ;;                  2   92[COMMON] int 
   369 ;; Registers used:
   370 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   371 ;; Tracked objects:
   372 ;;		On entry : 17F/0
   373 ;;		On exit  : 0/0
   374 ;;		Unchanged: 0/0
   375 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   376 ;;      Params:         0       0       0       0       0
   377 ;;      Locals:         0       0       0       0       0
   378 ;;      Temps:          0       3       0       0       0
   379 ;;      Totals:         0       3       0       0       0
   380 ;;Total ram usage:        3 bytes
   381 ;; Hardware stack levels required when called:    3
   382 ;; This function calls:
   383 ;;		_ADCInit
   384 ;;		_Lcd_Chr
   385 ;;		_Lcd_Chr_CP
   386 ;;		_Lcd_Cmd
   387 ;;		_Lcd_Init
   388 ;;		_Lcd_Out
   389 ;;		___aldiv
   390 ;;		___almod
   391 ;;		___lmul
   392 ;; This function is called by:
   393 ;;		Startup code after reset
   394 ;; This function uses a non-reentrant model
   395 ;;
   396                           
   397                           
   398                           ;psect for function _main
   399  068D                     _main:	
   400                           
   401                           ;main.c: 40: INTCON = 0;
   402                           
   403                           ;incstack = 0
   404                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   405  068D  018B               	clrf	11	;volatile
   406                           
   407                           ;main.c: 41: CMCON = 0x07;
   408  068E  3007               	movlw	7
   409  068F  1683               	bsf	3,5	;RP0=1, select bank1
   410  0690  1303               	bcf	3,6	;RP1=0, select bank1
   411  0691  009C               	movwf	28	;volatile
   412                           
   413                           ;main.c: 43: TRISA = 0x04;
   414  0692  3004               	movlw	4
   415  0693  0085               	movwf	5	;volatile
   416                           
   417                           ;main.c: 45: ADCInit();
   418  0694  120A  118A  22CE   	fcall	_ADCInit
      +       120A  118A         
   419                           
   420                           ;main.c: 47: Lcd_Init();
   421  0699  120A  118A  249B   	fcall	_Lcd_Init
      +       120A  118A         
   422                           
   423                           ;main.c: 48: Lcd_Cmd(12);
   424  069E  300C               	movlw	12
   425  069F  120A  118A  253C   	fcall	_Lcd_Cmd
      +       120A  118A         
   426                           
   427                           ;main.c: 49: Lcd_Cmd(1);
   428  06A4  3001               	movlw	1
   429  06A5  120A  118A  253C   	fcall	_Lcd_Cmd
      +       120A  118A         
   430                           
   431                           ;main.c: 51: text = "mikroElektronika";
   432  06AA  3001               	movlw	(STR_1-__stringbase)& (0+255)
   433  06AB  1283               	bcf	3,5	;RP0=0, select bank0
   434  06AC  1303               	bcf	3,6	;RP1=0, select bank0
   435  06AD  00AE               	movwf	??_main
   436  06AE  082E               	movf	??_main,w
   437  06AF  00B7               	movwf	_text
   438                           
   439                           ;main.c: 52: Lcd_Out(1,1,text);
   440  06B0  01F5               	clrf	Lcd_Out@x
   441  06B1  0AF5               	incf	Lcd_Out@x,f
   442  06B2  0837               	movf	_text,w
   443  06B3  00AE               	movwf	??_main
   444  06B4  082E               	movf	??_main,w
   445  06B5  00F6               	movwf	Lcd_Out@buffer
   446  06B6  3001               	movlw	1
   447  06B7  120A  118A  2353   	fcall	_Lcd_Out
      +       120A  118A         
   448                           
   449                           ;main.c: 53: text = "LCD example";
   450  06BC  3012               	movlw	(STR_2-__stringbase)& (0+255)
   451  06BD  1283               	bcf	3,5	;RP0=0, select bank0
   452  06BE  1303               	bcf	3,6	;RP1=0, select bank0
   453  06BF  00AE               	movwf	??_main
   454  06C0  082E               	movf	??_main,w
   455  06C1  00B7               	movwf	_text
   456                           
   457                           ;main.c: 54: Lcd_Out(2,1,text);
   458  06C2  01F5               	clrf	Lcd_Out@x
   459  06C3  0AF5               	incf	Lcd_Out@x,f
   460  06C4  0837               	movf	_text,w
   461  06C5  00AE               	movwf	??_main
   462  06C6  082E               	movf	??_main,w
   463  06C7  00F6               	movwf	Lcd_Out@buffer
   464  06C8  3002               	movlw	2
   465  06C9  120A  118A  2353   	fcall	_Lcd_Out
      +       120A  118A         
   466                           
   467                           ;main.c: 56: _delay((unsigned long)((2000)*(8000000/4000.0)));
   468  06CE  3015               	movlw	21
   469  06CF  1283               	bcf	3,5	;RP0=0, select bank0
   470  06D0  1303               	bcf	3,6	;RP1=0, select bank0
   471  06D1  00B0               	movwf	??_main+2
   472  06D2  304B               	movlw	75
   473  06D3  00AF               	movwf	??_main+1
   474  06D4  30D1               	movlw	209
   475  06D5  00AE               	movwf	??_main
   476  06D6                     u837:	
   477  06D6  0BAE               	decfsz	??_main,f
   478  06D7  2ED6               	goto	u837
   479  06D8  0BAF               	decfsz	??_main+1,f
   480  06D9  2ED6               	goto	u837
   481  06DA  0BB0               	decfsz	??_main+2,f
   482  06DB  2ED6               	goto	u837
   483  06DC  0000               	nop
   484                           
   485                           ;main.c: 57: text = "voltage:";
   486  06DD  301E               	movlw	(STR_3-__stringbase)& (0+255)
   487  06DE  1283               	bcf	3,5	;RP0=0, select bank0
   488  06DF  1303               	bcf	3,6	;RP1=0, select bank0
   489  06E0  00AE               	movwf	??_main
   490  06E1  082E               	movf	??_main,w
   491  06E2  00B7               	movwf	_text
   492  06E3                     l1316:	
   493                           ;main.c: 58: while (1) {
   494                           
   495                           
   496                           ;main.c: 59: ADCON0bits.GO = 1;
   497  06E3  1283               	bcf	3,5	;RP0=0, select bank0
   498  06E4  1303               	bcf	3,6	;RP1=0, select bank0
   499  06E5  151F               	bsf	31,2	;volatile
   500  06E6                     l94:	
   501                           ;main.c: 60: while(ADCON0bits.nDONE) continue;
   502                           
   503  06E6  191F               	btfsc	31,2	;volatile
   504  06E7  2EE6               	goto	l94
   505                           
   506                           ;main.c: 62: adc_rd = (ADRESH<<8) + ADRESL;
   507  06E8  081E               	movf	30,w	;volatile
   508  06E9  01B6               	clrf	_adc_rd+1
   509  06EA  07B6               	addwf	_adc_rd+1,f
   510  06EB  1683               	bsf	3,5	;RP0=1, select bank1
   511  06EC  1303               	bcf	3,6	;RP1=0, select bank1
   512  06ED  081E               	movf	30,w	;volatile
   513  06EE  1283               	bcf	3,5	;RP0=0, select bank0
   514  06EF  1303               	bcf	3,6	;RP1=0, select bank0
   515  06F0  01B5               	clrf	_adc_rd
   516  06F1  07B5               	addwf	_adc_rd,f
   517                           
   518                           ;main.c: 63: Lcd_Out(2,1,text);
   519  06F2  01F5               	clrf	Lcd_Out@x
   520  06F3  0AF5               	incf	Lcd_Out@x,f
   521  06F4  0837               	movf	_text,w
   522  06F5  00AE               	movwf	??_main
   523  06F6  082E               	movf	??_main,w
   524  06F7  00F6               	movwf	Lcd_Out@buffer
   525  06F8  3002               	movlw	2
   526  06F9  120A  118A  2353   	fcall	_Lcd_Out
      +       120A  118A         
   527                           
   528                           ;main.c: 65: tlong = (long)adc_rd * 5000;
   529  06FE  1283               	bcf	3,5	;RP0=0, select bank0
   530  06FF  1303               	bcf	3,6	;RP1=0, select bank0
   531  0700  0835               	movf	_adc_rd,w
   532  0701  00F0               	movwf	___lmul@multiplier
   533  0702  0836               	movf	_adc_rd+1,w
   534  0703  00F1               	movwf	___lmul@multiplier+1
   535  0704  01F2               	clrf	___lmul@multiplier+2
   536  0705  01F3               	clrf	___lmul@multiplier+3
   537  0706  3000               	movlw	0
   538  0707  00F7               	movwf	___lmul@multiplicand+3
   539  0708  3000               	movlw	0
   540  0709  00F6               	movwf	___lmul@multiplicand+2
   541  070A  3013               	movlw	19
   542  070B  00F5               	movwf	___lmul@multiplicand+1
   543  070C  3088               	movlw	136
   544  070D  00F4               	movwf	___lmul@multiplicand
   545  070E  120A  118A  2314   	fcall	___lmul
      +       120A  118A         
   546  0713  0873               	movf	?___lmul+3,w
   547  0714  1283               	bcf	3,5	;RP0=0, select bank0
   548  0715  1303               	bcf	3,6	;RP1=0, select bank0
   549  0716  00B4               	movwf	_tlong+3
   550  0717  0872               	movf	?___lmul+2,w
   551  0718  00B3               	movwf	_tlong+2
   552  0719  0871               	movf	?___lmul+1,w
   553  071A  00B2               	movwf	_tlong+1
   554  071B  0870               	movf	?___lmul,w
   555  071C  00B1               	movwf	_tlong
   556                           
   557                           ;main.c: 66: tlong = tlong / 1021;
   558  071D  3000               	movlw	0
   559  071E  00F3               	movwf	___aldiv@divisor+3
   560  071F  3000               	movlw	0
   561  0720  00F2               	movwf	___aldiv@divisor+2
   562  0721  3003               	movlw	3
   563  0722  00F1               	movwf	___aldiv@divisor+1
   564  0723  30FD               	movlw	253
   565  0724  00F0               	movwf	___aldiv@divisor
   566  0725  0834               	movf	_tlong+3,w
   567  0726  00F7               	movwf	___aldiv@dividend+3
   568  0727  0833               	movf	_tlong+2,w
   569  0728  00F6               	movwf	___aldiv@dividend+2
   570  0729  0832               	movf	_tlong+1,w
   571  072A  00F5               	movwf	___aldiv@dividend+1
   572  072B  0831               	movf	_tlong,w
   573  072C  00F4               	movwf	___aldiv@dividend
   574  072D  120A  118A  240C   	fcall	___aldiv
      +       120A  118A         
   575  0732  0873               	movf	?___aldiv+3,w
   576  0733  1283               	bcf	3,5	;RP0=0, select bank0
   577  0734  1303               	bcf	3,6	;RP1=0, select bank0
   578  0735  00B4               	movwf	_tlong+3
   579  0736  0872               	movf	?___aldiv+2,w
   580  0737  00B3               	movwf	_tlong+2
   581  0738  0871               	movf	?___aldiv+1,w
   582  0739  00B2               	movwf	_tlong+1
   583  073A  0870               	movf	?___aldiv,w
   584  073B  00B1               	movwf	_tlong
   585                           
   586                           ;main.c: 68: ch = tlong / 1000;
   587  073C  3000               	movlw	0
   588  073D  00F3               	movwf	___aldiv@divisor+3
   589  073E  3000               	movlw	0
   590  073F  00F2               	movwf	___aldiv@divisor+2
   591  0740  3003               	movlw	3
   592  0741  00F1               	movwf	___aldiv@divisor+1
   593  0742  30E8               	movlw	232
   594  0743  00F0               	movwf	___aldiv@divisor
   595  0744  0834               	movf	_tlong+3,w
   596  0745  00F7               	movwf	___aldiv@dividend+3
   597  0746  0833               	movf	_tlong+2,w
   598  0747  00F6               	movwf	___aldiv@dividend+2
   599  0748  0832               	movf	_tlong+1,w
   600  0749  00F5               	movwf	___aldiv@dividend+1
   601  074A  0831               	movf	_tlong,w
   602  074B  00F4               	movwf	___aldiv@dividend
   603  074C  120A  118A  240C   	fcall	___aldiv
      +       120A  118A         
   604  0751  0870               	movf	?___aldiv,w
   605  0752  1283               	bcf	3,5	;RP0=0, select bank0
   606  0753  1303               	bcf	3,6	;RP1=0, select bank0
   607  0754  00AE               	movwf	??_main
   608  0755  082E               	movf	??_main,w
   609  0756  00FD               	movwf	_ch
   610                           
   611                           ;main.c: 69: Lcd_Chr(2,9,48+ch);
   612  0757  3009               	movlw	9
   613  0758  00AE               	movwf	??_main
   614  0759  082E               	movf	??_main,w
   615  075A  00F5               	movwf	Lcd_Chr@x
   616  075B  087D               	movf	_ch,w
   617  075C  3E30               	addlw	48
   618  075D  00AF               	movwf	??_main+1
   619  075E  082F               	movf	??_main+1,w
   620  075F  00F6               	movwf	Lcd_Chr@Chr
   621  0760  3002               	movlw	2
   622  0761  120A  118A  22EA   	fcall	_Lcd_Chr
      +       120A  118A         
   623                           
   624                           ;main.c: 70: Lcd_Chr_CP('.');
   625  0766  302E               	movlw	46
   626  0767  120A  118A  25E2   	fcall	_Lcd_Chr_CP
      +       120A  118A         
   627                           
   628                           ;main.c: 72: ch = (tlong / 100) % 10;
   629  076C  3000               	movlw	0
   630  076D  1283               	bcf	3,5	;RP0=0, select bank0
   631  076E  1303               	bcf	3,6	;RP1=0, select bank0
   632  076F  00A9               	movwf	___almod@divisor+3
   633  0770  3000               	movlw	0
   634  0771  00A8               	movwf	___almod@divisor+2
   635  0772  3000               	movlw	0
   636  0773  00A7               	movwf	___almod@divisor+1
   637  0774  300A               	movlw	10
   638  0775  00A6               	movwf	___almod@divisor
   639  0776  3000               	movlw	0
   640  0777  00F3               	movwf	___aldiv@divisor+3
   641  0778  3000               	movlw	0
   642  0779  00F2               	movwf	___aldiv@divisor+2
   643  077A  3000               	movlw	0
   644  077B  00F1               	movwf	___aldiv@divisor+1
   645  077C  3064               	movlw	100
   646  077D  00F0               	movwf	___aldiv@divisor
   647  077E  0834               	movf	_tlong+3,w
   648  077F  00F7               	movwf	___aldiv@dividend+3
   649  0780  0833               	movf	_tlong+2,w
   650  0781  00F6               	movwf	___aldiv@dividend+2
   651  0782  0832               	movf	_tlong+1,w
   652  0783  00F5               	movwf	___aldiv@dividend+1
   653  0784  0831               	movf	_tlong,w
   654  0785  00F4               	movwf	___aldiv@dividend
   655  0786  120A  118A  240C   	fcall	___aldiv
      +       120A  118A         
   656  078B  0873               	movf	?___aldiv+3,w
   657  078C  1283               	bcf	3,5	;RP0=0, select bank0
   658  078D  1303               	bcf	3,6	;RP1=0, select bank0
   659  078E  00AD               	movwf	___almod@dividend+3
   660  078F  0872               	movf	?___aldiv+2,w
   661  0790  00AC               	movwf	___almod@dividend+2
   662  0791  0871               	movf	?___aldiv+1,w
   663  0792  00AB               	movwf	___almod@dividend+1
   664  0793  0870               	movf	?___aldiv,w
   665  0794  00AA               	movwf	___almod@dividend
   666  0795  120A  118A  2393   	fcall	___almod
      +       120A  118A         
   667  079A  1283               	bcf	3,5	;RP0=0, select bank0
   668  079B  1303               	bcf	3,6	;RP1=0, select bank0
   669  079C  0826               	movf	?___almod,w
   670  079D  00AE               	movwf	??_main
   671  079E  082E               	movf	??_main,w
   672  079F  00FD               	movwf	_ch
   673                           
   674                           ;main.c: 73: Lcd_Chr_CP(48+ch);
   675  07A0  087D               	movf	_ch,w
   676  07A1  3E30               	addlw	48
   677  07A2  120A  118A  25E2   	fcall	_Lcd_Chr_CP
      +       120A  118A         
   678                           
   679                           ;main.c: 75: ch = (tlong / 10) % 10;
   680  07A7  3000               	movlw	0
   681  07A8  1283               	bcf	3,5	;RP0=0, select bank0
   682  07A9  1303               	bcf	3,6	;RP1=0, select bank0
   683  07AA  00A9               	movwf	___almod@divisor+3
   684  07AB  3000               	movlw	0
   685  07AC  00A8               	movwf	___almod@divisor+2
   686  07AD  3000               	movlw	0
   687  07AE  00A7               	movwf	___almod@divisor+1
   688  07AF  300A               	movlw	10
   689  07B0  00A6               	movwf	___almod@divisor
   690  07B1  3000               	movlw	0
   691  07B2  00F3               	movwf	___aldiv@divisor+3
   692  07B3  3000               	movlw	0
   693  07B4  00F2               	movwf	___aldiv@divisor+2
   694  07B5  3000               	movlw	0
   695  07B6  00F1               	movwf	___aldiv@divisor+1
   696  07B7  300A               	movlw	10
   697  07B8  00F0               	movwf	___aldiv@divisor
   698  07B9  0834               	movf	_tlong+3,w
   699  07BA  00F7               	movwf	___aldiv@dividend+3
   700  07BB  0833               	movf	_tlong+2,w
   701  07BC  00F6               	movwf	___aldiv@dividend+2
   702  07BD  0832               	movf	_tlong+1,w
   703  07BE  00F5               	movwf	___aldiv@dividend+1
   704  07BF  0831               	movf	_tlong,w
   705  07C0  00F4               	movwf	___aldiv@dividend
   706  07C1  120A  118A  240C   	fcall	___aldiv
      +       120A  118A         
   707  07C6  0873               	movf	?___aldiv+3,w
   708  07C7  1283               	bcf	3,5	;RP0=0, select bank0
   709  07C8  1303               	bcf	3,6	;RP1=0, select bank0
   710  07C9  00AD               	movwf	___almod@dividend+3
   711  07CA  0872               	movf	?___aldiv+2,w
   712  07CB  00AC               	movwf	___almod@dividend+2
   713  07CC  0871               	movf	?___aldiv+1,w
   714  07CD  00AB               	movwf	___almod@dividend+1
   715  07CE  0870               	movf	?___aldiv,w
   716  07CF  00AA               	movwf	___almod@dividend
   717  07D0  120A  118A  2393   	fcall	___almod
      +       120A  118A         
   718  07D5  1283               	bcf	3,5	;RP0=0, select bank0
   719  07D6  1303               	bcf	3,6	;RP1=0, select bank0
   720  07D7  0826               	movf	?___almod,w
   721  07D8  00AE               	movwf	??_main
   722  07D9  082E               	movf	??_main,w
   723  07DA  00FD               	movwf	_ch
   724                           
   725                           ;main.c: 76: Lcd_Chr_CP(48+ch);
   726  07DB  087D               	movf	_ch,w
   727  07DC  3E30               	addlw	48
   728  07DD  120A  118A  25E2   	fcall	_Lcd_Chr_CP
      +       120A  118A         
   729                           
   730                           ;main.c: 78: Lcd_Chr_CP('V');
   731  07E2  3056               	movlw	86
   732  07E3  120A  118A  25E2   	fcall	_Lcd_Chr_CP
      +       120A  118A         
   733                           
   734                           ;main.c: 80: _delay((unsigned long)((1)*(8000000/4000.0)));
   735  07E8  3003               	movlw	3
   736  07E9  1283               	bcf	3,5	;RP0=0, select bank0
   737  07EA  1303               	bcf	3,6	;RP1=0, select bank0
   738  07EB  00AF               	movwf	??_main+1
   739  07EC  3097               	movlw	151
   740  07ED  00AE               	movwf	??_main
   741  07EE                     u847:	
   742  07EE  0BAE               	decfsz	??_main,f
   743  07EF  2FEE               	goto	u847
   744  07F0  0BAF               	decfsz	??_main+1,f
   745  07F1  2FEE               	goto	u847
   746  07F2  2FF3               	nop2
   747  07F3  2EE3               	goto	l1316
   748  07F4                     __end_of_main:	
   749                           ;main.c: 81: }
   750                           ;main.c: 83: return (0);
   751                           ;	Return value of _main is never used
   752                           
   753                           
   754                           	psect	text1
   755  0314                     __ptext1:	
   756 ;; *************** function ___lmul *****************
   757 ;; Defined at:
   758 ;;		line 2 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lmul.c"
   759 ;; Parameters:    Size  Location     Type
   760 ;;  multiplier      4    0[COMMON] unsigned long 
   761 ;;  multiplicand    4    4[COMMON] unsigned long 
   762 ;; Auto vars:     Size  Location     Type
   763 ;;  product         4    9[COMMON] unsigned long 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  4    0[COMMON] unsigned long 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         8       0       0       0       0
   774 ;;      Locals:         4       0       0       0       0
   775 ;;      Temps:          1       0       0       0       0
   776 ;;      Totals:        13       0       0       0       0
   777 ;;Total ram usage:       13 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; This function calls:
   780 ;;		Nothing
   781 ;; This function is called by:
   782 ;;		_main
   783 ;; This function uses a non-reentrant model
   784 ;;
   785                           
   786                           
   787                           ;psect for function ___lmul
   788  0314                     ___lmul:	
   789                           
   790                           ;incstack = 0
   791                           ; Regs used in ___lmul: [wreg+status,2+status,0]
   792  0314  3000               	movlw	0
   793  0315  00FC               	movwf	___lmul@product+3
   794  0316  3000               	movlw	0
   795  0317  00FB               	movwf	___lmul@product+2
   796  0318  3000               	movlw	0
   797  0319  00FA               	movwf	___lmul@product+1
   798  031A  3000               	movlw	0
   799  031B  00F9               	movwf	___lmul@product
   800  031C                     l1088:	
   801  031C  1C70               	btfss	___lmul@multiplier,0
   802  031D  2B32               	goto	l1092
   803  031E  0874               	movf	___lmul@multiplicand,w
   804  031F  07F9               	addwf	___lmul@product,f
   805  0320  0875               	movf	___lmul@multiplicand+1,w
   806  0321  1103               	clrz
   807  0322  1803               	skipnc
   808  0323  3E01               	addlw	1
   809  0324  1D03               	btfss	3,2
   810  0325  07FA               	addwf	___lmul@product+1,f
   811  0326  0876               	movf	___lmul@multiplicand+2,w
   812  0327  1103               	clrz
   813  0328  1803               	skipnc
   814  0329  3E01               	addlw	1
   815  032A  1D03               	btfss	3,2
   816  032B  07FB               	addwf	___lmul@product+2,f
   817  032C  0877               	movf	___lmul@multiplicand+3,w
   818  032D  1103               	clrz
   819  032E  1803               	skipnc
   820  032F  3E01               	addlw	1
   821  0330  1D03               	btfss	3,2
   822  0331  07FC               	addwf	___lmul@product+3,f
   823  0332                     l1092:	
   824  0332  3001               	movlw	1
   825  0333  00F8               	movwf	??___lmul
   826  0334                     u555:	
   827  0334  1003               	clrc
   828  0335  0DF4               	rlf	___lmul@multiplicand,f
   829  0336  0DF5               	rlf	___lmul@multiplicand+1,f
   830  0337  0DF6               	rlf	___lmul@multiplicand+2,f
   831  0338  0DF7               	rlf	___lmul@multiplicand+3,f
   832  0339  0BF8               	decfsz	??___lmul,f
   833  033A  2B34               	goto	u555
   834  033B  3001               	movlw	1
   835  033C                     u565:	
   836  033C  1003               	clrc
   837  033D  0CF3               	rrf	___lmul@multiplier+3,f
   838  033E  0CF2               	rrf	___lmul@multiplier+2,f
   839  033F  0CF1               	rrf	___lmul@multiplier+1,f
   840  0340  0CF0               	rrf	___lmul@multiplier,f
   841  0341  3EFF               	addlw	-1
   842  0342  1D03               	skipz
   843  0343  2B3C               	goto	u565
   844  0344  0873               	movf	___lmul@multiplier+3,w
   845  0345  0472               	iorwf	___lmul@multiplier+2,w
   846  0346  0471               	iorwf	___lmul@multiplier+1,w
   847  0347  0470               	iorwf	___lmul@multiplier,w
   848  0348  1D03               	skipz
   849  0349  2B1C               	goto	l1088
   850  034A  087C               	movf	___lmul@product+3,w
   851  034B  00F3               	movwf	?___lmul+3
   852  034C  087B               	movf	___lmul@product+2,w
   853  034D  00F2               	movwf	?___lmul+2
   854  034E  087A               	movf	___lmul@product+1,w
   855  034F  00F1               	movwf	?___lmul+1
   856  0350  0879               	movf	___lmul@product,w
   857  0351  00F0               	movwf	?___lmul
   858  0352  0008               	return
   859  0353                     __end_of___lmul:	
   860                           
   861                           	psect	text2
   862  0393                     __ptext2:	
   863 ;; *************** function ___almod *****************
   864 ;; Defined at:
   865 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\almod.c"
   866 ;; Parameters:    Size  Location     Type
   867 ;;  divisor         4    6[BANK0 ] long 
   868 ;;  dividend        4   10[BANK0 ] long 
   869 ;; Auto vars:     Size  Location     Type
   870 ;;  sign            1   11[COMMON] unsigned char 
   871 ;;  counter         1   10[COMMON] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  4    6[BANK0 ] long 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   881 ;;      Params:         0       8       0       0       0
   882 ;;      Locals:         2       0       0       0       0
   883 ;;      Temps:          1       0       0       0       0
   884 ;;      Totals:         3       8       0       0       0
   885 ;;Total ram usage:       11 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; This function calls:
   888 ;;		Nothing
   889 ;; This function is called by:
   890 ;;		_main
   891 ;; This function uses a non-reentrant model
   892 ;;
   893                           
   894                           
   895                           ;psect for function ___almod
   896  0393                     ___almod:	
   897                           
   898                           ;incstack = 0
   899                           ; Regs used in ___almod: [wreg+status,2+status,0]
   900  0393  01FB               	clrf	___almod@sign
   901  0394  1283               	bcf	3,5	;RP0=0, select bank0
   902  0395  1303               	bcf	3,6	;RP1=0, select bank0
   903  0396  1FAD               	btfss	___almod@dividend+3,7
   904  0397  2BA5               	goto	l227
   905  0398  09AA               	comf	___almod@dividend,f
   906  0399  09AB               	comf	___almod@dividend+1,f
   907  039A  09AC               	comf	___almod@dividend+2,f
   908  039B  09AD               	comf	___almod@dividend+3,f
   909  039C  0AAA               	incf	___almod@dividend,f
   910  039D  1903               	skipnz
   911  039E  0AAB               	incf	___almod@dividend+1,f
   912  039F  1903               	skipnz
   913  03A0  0AAC               	incf	___almod@dividend+2,f
   914  03A1  1903               	skipnz
   915  03A2  0AAD               	incf	___almod@dividend+3,f
   916  03A3  01FB               	clrf	___almod@sign
   917  03A4  0AFB               	incf	___almod@sign,f
   918  03A5                     l227:	
   919  03A5  1FA9               	btfss	___almod@divisor+3,7
   920  03A6  2BB2               	goto	l1112
   921  03A7  09A6               	comf	___almod@divisor,f
   922  03A8  09A7               	comf	___almod@divisor+1,f
   923  03A9  09A8               	comf	___almod@divisor+2,f
   924  03AA  09A9               	comf	___almod@divisor+3,f
   925  03AB  0AA6               	incf	___almod@divisor,f
   926  03AC  1903               	skipnz
   927  03AD  0AA7               	incf	___almod@divisor+1,f
   928  03AE  1903               	skipnz
   929  03AF  0AA8               	incf	___almod@divisor+2,f
   930  03B0  1903               	skipnz
   931  03B1  0AA9               	incf	___almod@divisor+3,f
   932  03B2                     l1112:	
   933  03B2  0829               	movf	___almod@divisor+3,w
   934  03B3  0428               	iorwf	___almod@divisor+2,w
   935  03B4  0427               	iorwf	___almod@divisor+1,w
   936  03B5  0426               	iorwf	___almod@divisor,w
   937  03B6  1903               	skipnz
   938  03B7  2BF5               	goto	l1128
   939  03B8  01FA               	clrf	___almod@counter
   940  03B9  0AFA               	incf	___almod@counter,f
   941  03BA                     l1118:	
   942  03BA  1BA9               	btfsc	___almod@divisor+3,7
   943  03BB  2BCA               	goto	l1120
   944  03BC  3001               	movlw	1
   945  03BD  00F9               	movwf	??___almod
   946  03BE                     u615:	
   947  03BE  1003               	clrc
   948  03BF  0DA6               	rlf	___almod@divisor,f
   949  03C0  0DA7               	rlf	___almod@divisor+1,f
   950  03C1  0DA8               	rlf	___almod@divisor+2,f
   951  03C2  0DA9               	rlf	___almod@divisor+3,f
   952  03C3  0BF9               	decfsz	??___almod,f
   953  03C4  2BBE               	goto	u615
   954  03C5  3001               	movlw	1
   955  03C6  00F9               	movwf	??___almod
   956  03C7  0879               	movf	??___almod,w
   957  03C8  07FA               	addwf	___almod@counter,f
   958  03C9  2BBA               	goto	l1118
   959  03CA                     l1120:	
   960  03CA  0829               	movf	___almod@divisor+3,w
   961  03CB  022D               	subwf	___almod@dividend+3,w
   962  03CC  1D03               	skipz
   963  03CD  2BD8               	goto	u635
   964  03CE  0828               	movf	___almod@divisor+2,w
   965  03CF  022C               	subwf	___almod@dividend+2,w
   966  03D0  1D03               	skipz
   967  03D1  2BD8               	goto	u635
   968  03D2  0827               	movf	___almod@divisor+1,w
   969  03D3  022B               	subwf	___almod@dividend+1,w
   970  03D4  1D03               	skipz
   971  03D5  2BD8               	goto	u635
   972  03D6  0826               	movf	___almod@divisor,w
   973  03D7  022A               	subwf	___almod@dividend,w
   974  03D8                     u635:	
   975  03D8  1C03               	skipc
   976  03D9  2BE8               	goto	l1124
   977  03DA  0826               	movf	___almod@divisor,w
   978  03DB  02AA               	subwf	___almod@dividend,f
   979  03DC  0827               	movf	___almod@divisor+1,w
   980  03DD  1C03               	skipc
   981  03DE  0F27               	incfsz	___almod@divisor+1,w
   982  03DF  02AB               	subwf	___almod@dividend+1,f
   983  03E0  0828               	movf	___almod@divisor+2,w
   984  03E1  1C03               	skipc
   985  03E2  0F28               	incfsz	___almod@divisor+2,w
   986  03E3  02AC               	subwf	___almod@dividend+2,f
   987  03E4  0829               	movf	___almod@divisor+3,w
   988  03E5  1C03               	skipc
   989  03E6  0F29               	incfsz	___almod@divisor+3,w
   990  03E7  02AD               	subwf	___almod@dividend+3,f
   991  03E8                     l1124:	
   992  03E8  3001               	movlw	1
   993  03E9                     u645:	
   994  03E9  1003               	clrc
   995  03EA  0CA9               	rrf	___almod@divisor+3,f
   996  03EB  0CA8               	rrf	___almod@divisor+2,f
   997  03EC  0CA7               	rrf	___almod@divisor+1,f
   998  03ED  0CA6               	rrf	___almod@divisor,f
   999  03EE  3EFF               	addlw	-1
  1000  03EF  1D03               	skipz
  1001  03F0  2BE9               	goto	u645
  1002  03F1  3001               	movlw	1
  1003  03F2  02FA               	subwf	___almod@counter,f
  1004  03F3  1D03               	btfss	3,2
  1005  03F4  2BCA               	goto	l1120
  1006  03F5                     l1128:	
  1007  03F5  087B               	movf	___almod@sign,w
  1008  03F6  1903               	btfsc	3,2
  1009  03F7  2C03               	goto	l1132
  1010  03F8  09AA               	comf	___almod@dividend,f
  1011  03F9  09AB               	comf	___almod@dividend+1,f
  1012  03FA  09AC               	comf	___almod@dividend+2,f
  1013  03FB  09AD               	comf	___almod@dividend+3,f
  1014  03FC  0AAA               	incf	___almod@dividend,f
  1015  03FD  1903               	skipnz
  1016  03FE  0AAB               	incf	___almod@dividend+1,f
  1017  03FF  1903               	skipnz
  1018  0400  0AAC               	incf	___almod@dividend+2,f
  1019  0401  1903               	skipnz
  1020  0402  0AAD               	incf	___almod@dividend+3,f
  1021  0403                     l1132:	
  1022  0403  082D               	movf	___almod@dividend+3,w
  1023  0404  00A9               	movwf	?___almod+3
  1024  0405  082C               	movf	___almod@dividend+2,w
  1025  0406  00A8               	movwf	?___almod+2
  1026  0407  082B               	movf	___almod@dividend+1,w
  1027  0408  00A7               	movwf	?___almod+1
  1028  0409  082A               	movf	___almod@dividend,w
  1029  040A  00A6               	movwf	?___almod
  1030  040B  0008               	return
  1031  040C                     __end_of___almod:	
  1032                           
  1033                           	psect	text3
  1034  040C                     __ptext3:	
  1035 ;; *************** function ___aldiv *****************
  1036 ;; Defined at:
  1037 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\aldiv.c"
  1038 ;; Parameters:    Size  Location     Type
  1039 ;;  divisor         4    0[COMMON] long 
  1040 ;;  dividend        4    4[COMMON] long 
  1041 ;; Auto vars:     Size  Location     Type
  1042 ;;  quotient        4    2[BANK0 ] long 
  1043 ;;  sign            1    1[BANK0 ] unsigned char 
  1044 ;;  counter         1    0[BANK0 ] unsigned char 
  1045 ;; Return value:  Size  Location     Type
  1046 ;;                  4    0[COMMON] long 
  1047 ;; Registers used:
  1048 ;;		wreg, status,2, status,0
  1049 ;; Tracked objects:
  1050 ;;		On entry : 0/0
  1051 ;;		On exit  : 0/0
  1052 ;;		Unchanged: 0/0
  1053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1054 ;;      Params:         8       0       0       0       0
  1055 ;;      Locals:         0       6       0       0       0
  1056 ;;      Temps:          1       0       0       0       0
  1057 ;;      Totals:         9       6       0       0       0
  1058 ;;Total ram usage:       15 bytes
  1059 ;; Hardware stack levels used:    1
  1060 ;; This function calls:
  1061 ;;		Nothing
  1062 ;; This function is called by:
  1063 ;;		_main
  1064 ;; This function uses a non-reentrant model
  1065 ;;
  1066                           
  1067                           
  1068                           ;psect for function ___aldiv
  1069  040C                     ___aldiv:	
  1070                           
  1071                           ;incstack = 0
  1072                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1073  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1074  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1075  040E  01A1               	clrf	___aldiv@sign
  1076  040F  1FF3               	btfss	___aldiv@divisor+3,7
  1077  0410  2C1E               	goto	l214
  1078  0411  09F0               	comf	___aldiv@divisor,f
  1079  0412  09F1               	comf	___aldiv@divisor+1,f
  1080  0413  09F2               	comf	___aldiv@divisor+2,f
  1081  0414  09F3               	comf	___aldiv@divisor+3,f
  1082  0415  0AF0               	incf	___aldiv@divisor,f
  1083  0416  1903               	skipnz
  1084  0417  0AF1               	incf	___aldiv@divisor+1,f
  1085  0418  1903               	skipnz
  1086  0419  0AF2               	incf	___aldiv@divisor+2,f
  1087  041A  1903               	skipnz
  1088  041B  0AF3               	incf	___aldiv@divisor+3,f
  1089  041C  01A1               	clrf	___aldiv@sign
  1090  041D  0AA1               	incf	___aldiv@sign,f
  1091  041E                     l214:	
  1092  041E  1FF7               	btfss	___aldiv@dividend+3,7
  1093  041F  2C2F               	goto	l1056
  1094  0420  09F4               	comf	___aldiv@dividend,f
  1095  0421  09F5               	comf	___aldiv@dividend+1,f
  1096  0422  09F6               	comf	___aldiv@dividend+2,f
  1097  0423  09F7               	comf	___aldiv@dividend+3,f
  1098  0424  0AF4               	incf	___aldiv@dividend,f
  1099  0425  1903               	skipnz
  1100  0426  0AF5               	incf	___aldiv@dividend+1,f
  1101  0427  1903               	skipnz
  1102  0428  0AF6               	incf	___aldiv@dividend+2,f
  1103  0429  1903               	skipnz
  1104  042A  0AF7               	incf	___aldiv@dividend+3,f
  1105  042B  3001               	movlw	1
  1106  042C  00F8               	movwf	??___aldiv
  1107  042D  0878               	movf	??___aldiv,w
  1108  042E  06A1               	xorwf	___aldiv@sign,f
  1109  042F                     l1056:	
  1110  042F  3000               	movlw	0
  1111  0430  00A5               	movwf	___aldiv@quotient+3
  1112  0431  3000               	movlw	0
  1113  0432  00A4               	movwf	___aldiv@quotient+2
  1114  0433  3000               	movlw	0
  1115  0434  00A3               	movwf	___aldiv@quotient+1
  1116  0435  3000               	movlw	0
  1117  0436  00A2               	movwf	___aldiv@quotient
  1118  0437  0873               	movf	___aldiv@divisor+3,w
  1119  0438  0472               	iorwf	___aldiv@divisor+2,w
  1120  0439  0471               	iorwf	___aldiv@divisor+1,w
  1121  043A  0470               	iorwf	___aldiv@divisor,w
  1122  043B  1903               	skipnz
  1123  043C  2C84               	goto	l1078
  1124  043D  01A0               	clrf	___aldiv@counter
  1125  043E  0AA0               	incf	___aldiv@counter,f
  1126  043F                     l1064:	
  1127  043F  1BF3               	btfsc	___aldiv@divisor+3,7
  1128  0440  2C4F               	goto	l1066
  1129  0441  3001               	movlw	1
  1130  0442  00F8               	movwf	??___aldiv
  1131  0443                     u465:	
  1132  0443  1003               	clrc
  1133  0444  0DF0               	rlf	___aldiv@divisor,f
  1134  0445  0DF1               	rlf	___aldiv@divisor+1,f
  1135  0446  0DF2               	rlf	___aldiv@divisor+2,f
  1136  0447  0DF3               	rlf	___aldiv@divisor+3,f
  1137  0448  0BF8               	decfsz	??___aldiv,f
  1138  0449  2C43               	goto	u465
  1139  044A  3001               	movlw	1
  1140  044B  00F8               	movwf	??___aldiv
  1141  044C  0878               	movf	??___aldiv,w
  1142  044D  07A0               	addwf	___aldiv@counter,f
  1143  044E  2C3F               	goto	l1064
  1144  044F                     l1066:	
  1145  044F  3001               	movlw	1
  1146  0450  00F8               	movwf	??___aldiv
  1147  0451                     u485:	
  1148  0451  1003               	clrc
  1149  0452  0DA2               	rlf	___aldiv@quotient,f
  1150  0453  0DA3               	rlf	___aldiv@quotient+1,f
  1151  0454  0DA4               	rlf	___aldiv@quotient+2,f
  1152  0455  0DA5               	rlf	___aldiv@quotient+3,f
  1153  0456  0BF8               	decfsz	??___aldiv,f
  1154  0457  2C51               	goto	u485
  1155  0458  0873               	movf	___aldiv@divisor+3,w
  1156  0459  0277               	subwf	___aldiv@dividend+3,w
  1157  045A  1D03               	skipz
  1158  045B  2C66               	goto	u495
  1159  045C  0872               	movf	___aldiv@divisor+2,w
  1160  045D  0276               	subwf	___aldiv@dividend+2,w
  1161  045E  1D03               	skipz
  1162  045F  2C66               	goto	u495
  1163  0460  0871               	movf	___aldiv@divisor+1,w
  1164  0461  0275               	subwf	___aldiv@dividend+1,w
  1165  0462  1D03               	skipz
  1166  0463  2C66               	goto	u495
  1167  0464  0870               	movf	___aldiv@divisor,w
  1168  0465  0274               	subwf	___aldiv@dividend,w
  1169  0466                     u495:	
  1170  0466  1C03               	skipc
  1171  0467  2C77               	goto	l1074
  1172  0468  0870               	movf	___aldiv@divisor,w
  1173  0469  02F4               	subwf	___aldiv@dividend,f
  1174  046A  0871               	movf	___aldiv@divisor+1,w
  1175  046B  1C03               	skipc
  1176  046C  0F71               	incfsz	___aldiv@divisor+1,w
  1177  046D  02F5               	subwf	___aldiv@dividend+1,f
  1178  046E  0872               	movf	___aldiv@divisor+2,w
  1179  046F  1C03               	skipc
  1180  0470  0F72               	incfsz	___aldiv@divisor+2,w
  1181  0471  02F6               	subwf	___aldiv@dividend+2,f
  1182  0472  0873               	movf	___aldiv@divisor+3,w
  1183  0473  1C03               	skipc
  1184  0474  0F73               	incfsz	___aldiv@divisor+3,w
  1185  0475  02F7               	subwf	___aldiv@dividend+3,f
  1186  0476  1422               	bsf	___aldiv@quotient,0
  1187  0477                     l1074:	
  1188  0477  3001               	movlw	1
  1189  0478                     u505:	
  1190  0478  1003               	clrc
  1191  0479  0CF3               	rrf	___aldiv@divisor+3,f
  1192  047A  0CF2               	rrf	___aldiv@divisor+2,f
  1193  047B  0CF1               	rrf	___aldiv@divisor+1,f
  1194  047C  0CF0               	rrf	___aldiv@divisor,f
  1195  047D  3EFF               	addlw	-1
  1196  047E  1D03               	skipz
  1197  047F  2C78               	goto	u505
  1198  0480  3001               	movlw	1
  1199  0481  02A0               	subwf	___aldiv@counter,f
  1200  0482  1D03               	btfss	3,2
  1201  0483  2C4F               	goto	l1066
  1202  0484                     l1078:	
  1203  0484  0821               	movf	___aldiv@sign,w
  1204  0485  1903               	btfsc	3,2
  1205  0486  2C92               	goto	l1082
  1206  0487  09A2               	comf	___aldiv@quotient,f
  1207  0488  09A3               	comf	___aldiv@quotient+1,f
  1208  0489  09A4               	comf	___aldiv@quotient+2,f
  1209  048A  09A5               	comf	___aldiv@quotient+3,f
  1210  048B  0AA2               	incf	___aldiv@quotient,f
  1211  048C  1903               	skipnz
  1212  048D  0AA3               	incf	___aldiv@quotient+1,f
  1213  048E  1903               	skipnz
  1214  048F  0AA4               	incf	___aldiv@quotient+2,f
  1215  0490  1903               	skipnz
  1216  0491  0AA5               	incf	___aldiv@quotient+3,f
  1217  0492                     l1082:	
  1218  0492  0825               	movf	___aldiv@quotient+3,w
  1219  0493  00F3               	movwf	?___aldiv+3
  1220  0494  0824               	movf	___aldiv@quotient+2,w
  1221  0495  00F2               	movwf	?___aldiv+2
  1222  0496  0823               	movf	___aldiv@quotient+1,w
  1223  0497  00F1               	movwf	?___aldiv+1
  1224  0498  0822               	movf	___aldiv@quotient,w
  1225  0499  00F0               	movwf	?___aldiv
  1226  049A  0008               	return
  1227  049B                     __end_of___aldiv:	
  1228                           
  1229                           	psect	text4
  1230  0353                     __ptext4:	
  1231 ;; *************** function _Lcd_Out *****************
  1232 ;; Defined at:
  1233 ;;		line 115 in file "HD44780.h"
  1234 ;; Parameters:    Size  Location     Type
  1235 ;;  y               1    wreg     unsigned char 
  1236 ;;  x               1    5[COMMON] unsigned char 
  1237 ;;  buffer          1    6[COMMON] PTR const unsigned char 
  1238 ;;		 -> NULL(0), STR_3(9), STR_2(12), STR_1(17), 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  y               1    8[COMMON] unsigned char 
  1241 ;;  data            1    9[COMMON] unsigned char 
  1242 ;; Return value:  Size  Location     Type
  1243 ;;		None               void
  1244 ;; Registers used:
  1245 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1246 ;; Tracked objects:
  1247 ;;		On entry : 0/0
  1248 ;;		On exit  : 0/0
  1249 ;;		Unchanged: 0/0
  1250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1251 ;;      Params:         2       0       0       0       0
  1252 ;;      Locals:         2       0       0       0       0
  1253 ;;      Temps:          1       0       0       0       0
  1254 ;;      Totals:         5       0       0       0       0
  1255 ;;Total ram usage:        5 bytes
  1256 ;; Hardware stack levels used:    1
  1257 ;; Hardware stack levels required when called:    2
  1258 ;; This function calls:
  1259 ;;		_Lcd_Chr_CP
  1260 ;;		_Lcd_Cmd
  1261 ;; This function is called by:
  1262 ;;		_main
  1263 ;; This function uses a non-reentrant model
  1264 ;;
  1265                           
  1266                           
  1267                           ;psect for function _Lcd_Out
  1268  0353                     _Lcd_Out:	
  1269                           
  1270                           ;incstack = 0
  1271                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1272                           ;Lcd_Out@y stored from wreg
  1273  0353  00F8               	movwf	Lcd_Out@y
  1274                           
  1275                           ;HD44780.h: 116: unsigned char data;
  1276                           ;HD44780.h: 117: switch(y){
  1277  0354  2B64               	goto	l1264
  1278  0355                     l1254:	
  1279                           ;HD44780.h: 118: case 1: data = 127 + x; break;
  1280                           
  1281  0355  0875               	movf	Lcd_Out@x,w
  1282  0356  3E7F               	addlw	127
  1283  0357  2B60               	goto	L3
  1284  0358                     l1256:	
  1285                           ;HD44780.h: 119: case 2: data = 191 + x; break;
  1286                           
  1287  0358  0875               	movf	Lcd_Out@x,w
  1288  0359  3EBF               	addlw	191
  1289  035A  2B60               	goto	L3
  1290  035B                     l1258:	
  1291                           ;HD44780.h: 120: case 3: data = 147 + x; break;
  1292                           
  1293  035B  0875               	movf	Lcd_Out@x,w
  1294  035C  3E93               	addlw	147
  1295  035D  2B60               	goto	L3
  1296  035E                     l1260:	
  1297                           ;HD44780.h: 121: case 4: data = 211 + x; break;
  1298                           
  1299  035E  0875               	movf	Lcd_Out@x,w
  1300  035F  3ED3               	addlw	211
  1301  0360                     L3:	
  1302  0360  00F7               	movwf	??_Lcd_Out
  1303  0361  0877               	movf	??_Lcd_Out,w
  1304  0362  00F9               	movwf	Lcd_Out@data
  1305                           
  1306                           ;HD44780.h: 122: default: break;}
  1307  0363  2B72               	goto	l1266
  1308  0364                     l1264:	
  1309  0364  0878               	movf	Lcd_Out@y,w
  1310                           
  1311                           ; Switch size 1, requested type "space"
  1312                           ; Number of cases is 4, Range of values is 1 to 4
  1313                           ; switch strategies available:
  1314                           ; Name         Instructions Cycles
  1315                           ; simple_byte           13     7 (average)
  1316                           ; direct_byte           23    11 (fixed)
  1317                           ; jumptable            263     9 (fixed)
  1318                           ;	Chosen strategy is simple_byte
  1319  0365  3A01               	xorlw	1	; case 1
  1320  0366  1903               	skipnz
  1321  0367  2B55               	goto	l1254
  1322  0368  3A03               	xorlw	3	; case 2
  1323  0369  1903               	skipnz
  1324  036A  2B58               	goto	l1256
  1325  036B  3A01               	xorlw	1	; case 3
  1326  036C  1903               	skipnz
  1327  036D  2B5B               	goto	l1258
  1328  036E  3A07               	xorlw	7	; case 4
  1329  036F  1903               	skipnz
  1330  0370  2B5E               	goto	l1260
  1331  0371  2B72               	goto	l1266
  1332  0372                     l1266:	
  1333                           
  1334                           ;HD44780.h: 123: Lcd_Cmd(data);
  1335  0372  0879               	movf	Lcd_Out@data,w
  1336  0373  120A  118A  253C   	fcall	_Lcd_Cmd
      +       120A  118A         
  1337  0378                     l1272:	
  1338                           ;HD44780.h: 124: while(*buffer)
  1339                           
  1340  0378  0876               	movf	Lcd_Out@buffer,w
  1341  0379  0084               	movwf	4
  1342  037A  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1343  037F  3800               	iorlw	0
  1344  0380  1903               	btfsc	3,2
  1345  0381  0008               	return
  1346                           
  1347                           ;HD44780.h: 125: {
  1348                           ;HD44780.h: 126: Lcd_Chr_CP(*buffer);
  1349  0382  0876               	movf	Lcd_Out@buffer,w
  1350  0383  0084               	movwf	4
  1351  0384  120A  118A  2003   	fcall	stringdir
      +       120A  118A         
  1352  0389  120A  118A  25E2   	fcall	_Lcd_Chr_CP
      +       120A  118A         
  1353                           
  1354                           ;HD44780.h: 127: buffer++;
  1355  038E  3001               	movlw	1
  1356  038F  00F7               	movwf	??_Lcd_Out
  1357  0390  0877               	movf	??_Lcd_Out,w
  1358  0391  07F6               	addwf	Lcd_Out@buffer,f
  1359  0392  2B78               	goto	l1272
  1360  0393                     __end_of_Lcd_Out:	
  1361                           ;HD44780.h: 128: }
  1362                           ;HD44780.h: 129: return;
  1363                           
  1364                           
  1365                           	psect	text5
  1366  049B                     __ptext5:	
  1367 ;; *************** function _Lcd_Init *****************
  1368 ;; Defined at:
  1369 ;;		line 90 in file "HD44780.h"
  1370 ;; Parameters:    Size  Location     Type
  1371 ;;		None
  1372 ;; Auto vars:     Size  Location     Type
  1373 ;;  data            1    6[COMMON] unsigned char 
  1374 ;; Return value:  Size  Location     Type
  1375 ;;		None               void
  1376 ;; Registers used:
  1377 ;;		wreg, status,2, status,0, pclath, cstack
  1378 ;; Tracked objects:
  1379 ;;		On entry : 0/0
  1380 ;;		On exit  : 0/0
  1381 ;;		Unchanged: 0/0
  1382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1383 ;;      Params:         0       0       0       0       0
  1384 ;;      Locals:         1       0       0       0       0
  1385 ;;      Temps:          1       0       0       0       0
  1386 ;;      Totals:         2       0       0       0       0
  1387 ;;Total ram usage:        2 bytes
  1388 ;; Hardware stack levels used:    1
  1389 ;; Hardware stack levels required when called:    2
  1390 ;; This function calls:
  1391 ;;		_Delay_5500us
  1392 ;;		_Delay_5us
  1393 ;;		_Lcd_Cmd
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _Lcd_Init
  1401  049B                     _Lcd_Init:	
  1402                           
  1403                           ;HD44780.h: 91: unsigned char data;
  1404                           ;HD44780.h: 92: TRISBbits.TRISB3 = 0; TRISBbits.TRISB2 = 0; TRISBbits.TRISB1 = 0; TRISBb
      +                          its.TRISB0 = 0; TRISBbits.TRISB5 = 0; TRISBbits.TRISB4 = 0;
  1405                           
  1406                           ;incstack = 0
  1407                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1408  049B  1683               	bsf	3,5	;RP0=1, select bank1
  1409  049C  1303               	bcf	3,6	;RP1=0, select bank1
  1410  049D  1186               	bcf	6,3	;volatile
  1411  049E  1106               	bcf	6,2	;volatile
  1412  049F  1086               	bcf	6,1	;volatile
  1413  04A0  1006               	bcf	6,0	;volatile
  1414  04A1  1286               	bcf	6,5	;volatile
  1415  04A2  1206               	bcf	6,4	;volatile
  1416                           
  1417                           ;HD44780.h: 93: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0; PORTBbits.RB0 =
      +                           0; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1418  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  1419  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  1420  04A5  1186               	bcf	6,3	;volatile
  1421  04A6  1106               	bcf	6,2	;volatile
  1422  04A7  1086               	bcf	6,1	;volatile
  1423  04A8  1006               	bcf	6,0	;volatile
  1424  04A9  1286               	bcf	6,5	;volatile
  1425  04AA  1206               	bcf	6,4	;volatile
  1426                           
  1427                           ;HD44780.h: 94: Delay_5500us(); Delay_5500us(); Delay_5500us();
  1428  04AB  120A  118A  22E0   	fcall	_Delay_5500us
      +       120A  118A         
  1429  04B0  120A  118A  22E0   	fcall	_Delay_5500us
      +       120A  118A         
  1430  04B5  120A  118A  22E0   	fcall	_Delay_5500us
      +       120A  118A         
  1431                           
  1432                           ;HD44780.h: 95: Delay_5500us(); Delay_5500us(); Delay_5500us();
  1433  04BA  120A  118A  22E0   	fcall	_Delay_5500us
      +       120A  118A         
  1434  04BF  120A  118A  22E0   	fcall	_Delay_5500us
      +       120A  118A         
  1435  04C4  120A  118A  22E0   	fcall	_Delay_5500us
      +       120A  118A         
  1436                           
  1437                           ;HD44780.h: 96: for(data = 1; data < 4; data ++)
  1438  04C9  01F6               	clrf	Lcd_Init@data
  1439  04CA  0AF6               	incf	Lcd_Init@data,f
  1440  04CB  3004               	movlw	4
  1441  04CC  0276               	subwf	Lcd_Init@data,w
  1442  04CD  1803               	btfsc	3,0
  1443  04CE  2CF7               	goto	l36
  1444  04CF                     l35:	
  1445                           
  1446                           ;HD44780.h: 97: {
  1447                           ;HD44780.h: 98: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 =
      +                           1; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1448  04CF  1283               	bcf	3,5	;RP0=0, select bank0
  1449  04D0  1303               	bcf	3,6	;RP1=0, select bank0
  1450  04D1  1186               	bcf	6,3	;volatile
  1451  04D2  1106               	bcf	6,2	;volatile
  1452  04D3  1486               	bsf	6,1	;volatile
  1453  04D4  1406               	bsf	6,0	;volatile
  1454  04D5  1286               	bcf	6,5	;volatile
  1455  04D6  1206               	bcf	6,4	;volatile
  1456                           
  1457                           ;HD44780.h: 99: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 =
      +                           1; PORTBbits.RB5 = 1; PORTBbits.RB4 = 0;
  1458  04D7  1186               	bcf	6,3	;volatile
  1459  04D8  1106               	bcf	6,2	;volatile
  1460  04D9  1486               	bsf	6,1	;volatile
  1461  04DA  1406               	bsf	6,0	;volatile
  1462  04DB  1686               	bsf	6,5	;volatile
  1463  04DC  1206               	bcf	6,4	;volatile
  1464                           
  1465                           ;HD44780.h: 100: Delay_5us();
  1466  04DD  120A  118A  22D7   	fcall	_Delay_5us
      +       120A  118A         
  1467                           
  1468                           ;HD44780.h: 101: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 
      +                          = 1; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1469  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  1470  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  1471  04E4  1186               	bcf	6,3	;volatile
  1472  04E5  1106               	bcf	6,2	;volatile
  1473  04E6  1486               	bsf	6,1	;volatile
  1474  04E7  1406               	bsf	6,0	;volatile
  1475  04E8  1286               	bcf	6,5	;volatile
  1476  04E9  1206               	bcf	6,4	;volatile
  1477                           
  1478                           ;HD44780.h: 102: Delay_5500us();
  1479  04EA  120A  118A  22E0   	fcall	_Delay_5500us
      +       120A  118A         
  1480  04EF  3001               	movlw	1
  1481  04F0  00F5               	movwf	??_Lcd_Init
  1482  04F1  0875               	movf	??_Lcd_Init,w
  1483  04F2  07F6               	addwf	Lcd_Init@data,f
  1484  04F3  3004               	movlw	4
  1485  04F4  0276               	subwf	Lcd_Init@data,w
  1486  04F5  1C03               	skipc
  1487  04F6  2CCF               	goto	l35
  1488  04F7                     l36:	
  1489                           
  1490                           ;HD44780.h: 103: }
  1491                           ;HD44780.h: 104: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 
      +                          = 0; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1492  04F7  1283               	bcf	3,5	;RP0=0, select bank0
  1493  04F8  1303               	bcf	3,6	;RP1=0, select bank0
  1494  04F9  1186               	bcf	6,3	;volatile
  1495  04FA  1106               	bcf	6,2	;volatile
  1496  04FB  1486               	bsf	6,1	;volatile
  1497  04FC  1006               	bcf	6,0	;volatile
  1498  04FD  1286               	bcf	6,5	;volatile
  1499  04FE  1206               	bcf	6,4	;volatile
  1500                           
  1501                           ;HD44780.h: 105: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 
      +                          = 0; PORTBbits.RB5 = 1; PORTBbits.RB4 = 0;
  1502  04FF  1186               	bcf	6,3	;volatile
  1503  0500  1106               	bcf	6,2	;volatile
  1504  0501  1486               	bsf	6,1	;volatile
  1505  0502  1006               	bcf	6,0	;volatile
  1506  0503  1686               	bsf	6,5	;volatile
  1507  0504  1206               	bcf	6,4	;volatile
  1508                           
  1509                           ;HD44780.h: 106: Delay_5us();
  1510  0505  120A  118A  22D7   	fcall	_Delay_5us
      +       120A  118A         
  1511                           
  1512                           ;HD44780.h: 107: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 
      +                          = 0; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1513  050A  1283               	bcf	3,5	;RP0=0, select bank0
  1514  050B  1303               	bcf	3,6	;RP1=0, select bank0
  1515  050C  1186               	bcf	6,3	;volatile
  1516  050D  1106               	bcf	6,2	;volatile
  1517  050E  1486               	bsf	6,1	;volatile
  1518  050F  1006               	bcf	6,0	;volatile
  1519  0510  1286               	bcf	6,5	;volatile
  1520  0511  1206               	bcf	6,4	;volatile
  1521                           
  1522                           ;HD44780.h: 108: Delay_5500us();
  1523  0512  120A  118A  22E0   	fcall	_Delay_5500us
      +       120A  118A         
  1524                           
  1525                           ;HD44780.h: 109: data = 40; Lcd_Cmd(data);
  1526  0517  3028               	movlw	40
  1527  0518  00F5               	movwf	??_Lcd_Init
  1528  0519  0875               	movf	??_Lcd_Init,w
  1529  051A  00F6               	movwf	Lcd_Init@data
  1530  051B  0876               	movf	Lcd_Init@data,w
  1531  051C  120A  118A  253C   	fcall	_Lcd_Cmd
      +       120A  118A         
  1532                           
  1533                           ;HD44780.h: 110: data = 16; Lcd_Cmd(data);
  1534  0521  3010               	movlw	16
  1535  0522  00F5               	movwf	??_Lcd_Init
  1536  0523  0875               	movf	??_Lcd_Init,w
  1537  0524  00F6               	movwf	Lcd_Init@data
  1538  0525  0876               	movf	Lcd_Init@data,w
  1539  0526  120A  118A  253C   	fcall	_Lcd_Cmd
      +       120A  118A         
  1540                           
  1541                           ;HD44780.h: 111: data = 1; Lcd_Cmd(data);
  1542  052B  01F6               	clrf	Lcd_Init@data
  1543  052C  0AF6               	incf	Lcd_Init@data,f
  1544  052D  0876               	movf	Lcd_Init@data,w
  1545  052E  120A  118A  253C   	fcall	_Lcd_Cmd
      +       120A  118A         
  1546                           
  1547                           ;HD44780.h: 112: data = 15; Lcd_Cmd(data);
  1548  0533  300F               	movlw	15
  1549  0534  00F5               	movwf	??_Lcd_Init
  1550  0535  0875               	movf	??_Lcd_Init,w
  1551  0536  00F6               	movwf	Lcd_Init@data
  1552  0537  0876               	movf	Lcd_Init@data,w
  1553  0538  120A  118A  253C   	fcall	_Lcd_Cmd
  1554  053B  0008               	return
  1555  053C                     __end_of_Lcd_Init:	
  1556                           
  1557                           	psect	text6
  1558  02EA                     __ptext6:	
  1559 ;; *************** function _Lcd_Chr *****************
  1560 ;; Defined at:
  1561 ;;		line 149 in file "HD44780.h"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  y               1    wreg     unsigned char 
  1564 ;;  x               1    5[COMMON] unsigned char 
  1565 ;;  Chr             1    6[COMMON] unsigned char 
  1566 ;; Auto vars:     Size  Location     Type
  1567 ;;  y               1    8[COMMON] unsigned char 
  1568 ;;  data            1    9[COMMON] unsigned char 
  1569 ;; Return value:  Size  Location     Type
  1570 ;;		None               void
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : 0/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1578 ;;      Params:         2       0       0       0       0
  1579 ;;      Locals:         2       0       0       0       0
  1580 ;;      Temps:          1       0       0       0       0
  1581 ;;      Totals:         5       0       0       0       0
  1582 ;;Total ram usage:        5 bytes
  1583 ;; Hardware stack levels used:    1
  1584 ;; Hardware stack levels required when called:    2
  1585 ;; This function calls:
  1586 ;;		_Lcd_Chr_CP
  1587 ;;		_Lcd_Cmd
  1588 ;; This function is called by:
  1589 ;;		_main
  1590 ;; This function uses a non-reentrant model
  1591 ;;
  1592                           
  1593                           
  1594                           ;psect for function _Lcd_Chr
  1595  02EA                     _Lcd_Chr:	
  1596                           
  1597                           ;incstack = 0
  1598                           ; Regs used in _Lcd_Chr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1599                           ;Lcd_Chr@y stored from wreg
  1600  02EA  00F8               	movwf	Lcd_Chr@y
  1601                           
  1602                           ;HD44780.h: 150: unsigned char data;
  1603                           ;HD44780.h: 151: switch(y){
  1604  02EB  2AFB               	goto	l1286
  1605  02EC                     l1276:	
  1606                           ;HD44780.h: 152: case 1: data = 127 + x; break;
  1607                           
  1608  02EC  0875               	movf	Lcd_Chr@x,w
  1609  02ED  3E7F               	addlw	127
  1610  02EE  2AF7               	goto	L6
  1611  02EF                     l1278:	
  1612                           ;HD44780.h: 153: case 2: data = 191 + x; break;
  1613                           
  1614  02EF  0875               	movf	Lcd_Chr@x,w
  1615  02F0  3EBF               	addlw	191
  1616  02F1  2AF7               	goto	L6
  1617  02F2                     l1280:	
  1618                           ;HD44780.h: 154: case 3: data = 147 + x; break;
  1619                           
  1620  02F2  0875               	movf	Lcd_Chr@x,w
  1621  02F3  3E93               	addlw	147
  1622  02F4  2AF7               	goto	L6
  1623  02F5                     l1282:	
  1624                           ;HD44780.h: 155: case 4: data = 211 + x; break;
  1625                           
  1626  02F5  0875               	movf	Lcd_Chr@x,w
  1627  02F6  3ED3               	addlw	211
  1628  02F7                     L6:	
  1629  02F7  00F7               	movwf	??_Lcd_Chr
  1630  02F8  0877               	movf	??_Lcd_Chr,w
  1631  02F9  00F9               	movwf	Lcd_Chr@data
  1632                           
  1633                           ;HD44780.h: 156: default: break;}
  1634  02FA  2B09               	goto	l1288
  1635  02FB                     l1286:	
  1636  02FB  0878               	movf	Lcd_Chr@y,w
  1637                           
  1638                           ; Switch size 1, requested type "space"
  1639                           ; Number of cases is 4, Range of values is 1 to 4
  1640                           ; switch strategies available:
  1641                           ; Name         Instructions Cycles
  1642                           ; simple_byte           13     7 (average)
  1643                           ; direct_byte           23    11 (fixed)
  1644                           ; jumptable            263     9 (fixed)
  1645                           ;	Chosen strategy is simple_byte
  1646  02FC  3A01               	xorlw	1	; case 1
  1647  02FD  1903               	skipnz
  1648  02FE  2AEC               	goto	l1276
  1649  02FF  3A03               	xorlw	3	; case 2
  1650  0300  1903               	skipnz
  1651  0301  2AEF               	goto	l1278
  1652  0302  3A01               	xorlw	1	; case 3
  1653  0303  1903               	skipnz
  1654  0304  2AF2               	goto	l1280
  1655  0305  3A07               	xorlw	7	; case 4
  1656  0306  1903               	skipnz
  1657  0307  2AF5               	goto	l1282
  1658  0308  2B09               	goto	l1288
  1659  0309                     l1288:	
  1660                           
  1661                           ;HD44780.h: 157: Lcd_Cmd(data);
  1662  0309  0879               	movf	Lcd_Chr@data,w
  1663  030A  120A  118A  253C   	fcall	_Lcd_Cmd
      +       120A  118A         
  1664                           
  1665                           ;HD44780.h: 158: Lcd_Chr_CP(Chr);
  1666  030F  0876               	movf	Lcd_Chr@Chr,w
  1667  0310  120A  118A  25E2   	fcall	_Lcd_Chr_CP
  1668  0313  0008               	return
  1669  0314                     __end_of_Lcd_Chr:	
  1670                           
  1671                           	psect	text7
  1672  053C                     __ptext7:	
  1673 ;; *************** function _Lcd_Cmd *****************
  1674 ;; Defined at:
  1675 ;;		line 174 in file "HD44780.h"
  1676 ;; Parameters:    Size  Location     Type
  1677 ;;  Cmd             1    wreg     unsigned char 
  1678 ;; Auto vars:     Size  Location     Type
  1679 ;;  Cmd             1    4[COMMON] unsigned char 
  1680 ;; Return value:  Size  Location     Type
  1681 ;;		None               void
  1682 ;; Registers used:
  1683 ;;		wreg, status,2, status,0, pclath, cstack
  1684 ;; Tracked objects:
  1685 ;;		On entry : 0/0
  1686 ;;		On exit  : 0/0
  1687 ;;		Unchanged: 0/0
  1688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1689 ;;      Params:         0       0       0       0       0
  1690 ;;      Locals:         1       0       0       0       0
  1691 ;;      Temps:          2       0       0       0       0
  1692 ;;      Totals:         3       0       0       0       0
  1693 ;;Total ram usage:        3 bytes
  1694 ;; Hardware stack levels used:    1
  1695 ;; Hardware stack levels required when called:    1
  1696 ;; This function calls:
  1697 ;;		_Delay_5500us
  1698 ;;		_Delay_5us
  1699 ;; This function is called by:
  1700 ;;		_Lcd_Init
  1701 ;;		_Lcd_Out
  1702 ;;		_Lcd_Chr
  1703 ;;		_main
  1704 ;;		_Lcd_Out2
  1705 ;; This function uses a non-reentrant model
  1706 ;;
  1707                           
  1708                           
  1709                           ;psect for function _Lcd_Cmd
  1710  053C                     _Lcd_Cmd:	
  1711                           
  1712                           ;incstack = 0
  1713                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1714                           ;Lcd_Cmd@Cmd stored from wreg
  1715  053C  00F4               	movwf	Lcd_Cmd@Cmd
  1716                           
  1717                           ;HD44780.h: 175: PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1718  053D  1283               	bcf	3,5	;RP0=0, select bank0
  1719  053E  1303               	bcf	3,6	;RP1=0, select bank0
  1720  053F  1286               	bcf	6,5	;volatile
  1721  0540  1206               	bcf	6,4	;volatile
  1722                           
  1723                           ;HD44780.h: 176: PORTBbits.RB3 = (Cmd & 0b10000000)>>7; PORTBbits.RB2 = (Cmd& 0b01000000
      +                          )>>6;
  1724  0541  0874               	movf	Lcd_Cmd@Cmd,w
  1725  0542  00F2               	movwf	??_Lcd_Cmd
  1726  0543  3007               	movlw	7
  1727  0544                     u675:	
  1728  0544  1003               	clrc
  1729  0545  0CF2               	rrf	??_Lcd_Cmd,f
  1730  0546  3EFF               	addlw	-1
  1731  0547  1D03               	skipz
  1732  0548  2D44               	goto	u675
  1733  0549  0872               	movf	??_Lcd_Cmd,w
  1734  054A  3901               	andlw	1
  1735  054B  00F3               	movwf	??_Lcd_Cmd+1
  1736  054C  0DF3               	rlf	??_Lcd_Cmd+1,f
  1737  054D  0DF3               	rlf	??_Lcd_Cmd+1,f
  1738  054E  0DF3               	rlf	??_Lcd_Cmd+1,f
  1739  054F  0806               	movf	6,w	;volatile
  1740  0550  0673               	xorwf	??_Lcd_Cmd+1,w
  1741  0551  39F7               	andlw	-9
  1742  0552  0673               	xorwf	??_Lcd_Cmd+1,w
  1743  0553  0086               	movwf	6	;volatile
  1744  0554  0874               	movf	Lcd_Cmd@Cmd,w
  1745  0555  00F2               	movwf	??_Lcd_Cmd
  1746  0556  3006               	movlw	6
  1747  0557                     u685:	
  1748  0557  1003               	clrc
  1749  0558  0CF2               	rrf	??_Lcd_Cmd,f
  1750  0559  3EFF               	addlw	-1
  1751  055A  1D03               	skipz
  1752  055B  2D57               	goto	u685
  1753  055C  0872               	movf	??_Lcd_Cmd,w
  1754  055D  3901               	andlw	1
  1755  055E  00F3               	movwf	??_Lcd_Cmd+1
  1756  055F  0DF3               	rlf	??_Lcd_Cmd+1,f
  1757  0560  0DF3               	rlf	??_Lcd_Cmd+1,f
  1758  0561  0806               	movf	6,w	;volatile
  1759  0562  0673               	xorwf	??_Lcd_Cmd+1,w
  1760  0563  39FB               	andlw	-5
  1761  0564  0673               	xorwf	??_Lcd_Cmd+1,w
  1762  0565  0086               	movwf	6	;volatile
  1763                           
  1764                           ;HD44780.h: 177: PORTBbits.RB1 = (Cmd & 0b00100000)>>5; PORTBbits.RB0 = (Cmd & 0b0001000
      +                          0)>>4;
  1765  0566  0874               	movf	Lcd_Cmd@Cmd,w
  1766  0567  00F2               	movwf	??_Lcd_Cmd
  1767  0568  3005               	movlw	5
  1768  0569                     u695:	
  1769  0569  1003               	clrc
  1770  056A  0CF2               	rrf	??_Lcd_Cmd,f
  1771  056B  3EFF               	addlw	-1
  1772  056C  1D03               	skipz
  1773  056D  2D69               	goto	u695
  1774  056E  0872               	movf	??_Lcd_Cmd,w
  1775  056F  3901               	andlw	1
  1776  0570  00F3               	movwf	??_Lcd_Cmd+1
  1777  0571  0DF3               	rlf	??_Lcd_Cmd+1,f
  1778  0572  0806               	movf	6,w	;volatile
  1779  0573  0673               	xorwf	??_Lcd_Cmd+1,w
  1780  0574  39FD               	andlw	-3
  1781  0575  0673               	xorwf	??_Lcd_Cmd+1,w
  1782  0576  0086               	movwf	6	;volatile
  1783  0577  0874               	movf	Lcd_Cmd@Cmd,w
  1784  0578  00F2               	movwf	??_Lcd_Cmd
  1785  0579  3004               	movlw	4
  1786  057A                     u705:	
  1787  057A  1003               	clrc
  1788  057B  0CF2               	rrf	??_Lcd_Cmd,f
  1789  057C  3EFF               	addlw	-1
  1790  057D  1D03               	skipz
  1791  057E  2D7A               	goto	u705
  1792  057F  3001               	movlw	1
  1793  0580  0572               	andwf	??_Lcd_Cmd,w
  1794  0581  00F3               	movwf	??_Lcd_Cmd+1
  1795  0582  0806               	movf	6,w	;volatile
  1796  0583  0673               	xorwf	??_Lcd_Cmd+1,w
  1797  0584  39FE               	andlw	-2
  1798  0585  0673               	xorwf	??_Lcd_Cmd+1,w
  1799  0586  0086               	movwf	6	;volatile
  1800                           
  1801                           ;HD44780.h: 178: _delay(10);
  1802  0587  3003               	movlw	3
  1803  0588  00F2               	movwf	??_Lcd_Cmd
  1804  0589                     u857:	
  1805  0589  0BF2               	decfsz	??_Lcd_Cmd,f
  1806  058A  2D89               	goto	u857
  1807                           
  1808                           ;HD44780.h: 179: PORTBbits.RB5 = 1; Delay_5us(); PORTBbits.RB5 = 0;
  1809  058B  1283               	bcf	3,5	;RP0=0, select bank0
  1810  058C  1303               	bcf	3,6	;RP1=0, select bank0
  1811  058D  1686               	bsf	6,5	;volatile
  1812  058E  120A  118A  22D7   	fcall	_Delay_5us
      +       120A  118A         
  1813  0593  1283               	bcf	3,5	;RP0=0, select bank0
  1814  0594  1303               	bcf	3,6	;RP1=0, select bank0
  1815  0595  1286               	bcf	6,5	;volatile
  1816                           
  1817                           ;HD44780.h: 180: PORTBbits.RB3 = (Cmd & 0b00001000)>>3; PORTBbits.RB2 = (Cmd & 0b0000010
      +                          0)>>2;
  1818  0596  0874               	movf	Lcd_Cmd@Cmd,w
  1819  0597  00F2               	movwf	??_Lcd_Cmd
  1820  0598  3003               	movlw	3
  1821  0599                     u715:	
  1822  0599  1003               	clrc
  1823  059A  0CF2               	rrf	??_Lcd_Cmd,f
  1824  059B  3EFF               	addlw	-1
  1825  059C  1D03               	skipz
  1826  059D  2D99               	goto	u715
  1827  059E  0872               	movf	??_Lcd_Cmd,w
  1828  059F  3901               	andlw	1
  1829  05A0  00F3               	movwf	??_Lcd_Cmd+1
  1830  05A1  0DF3               	rlf	??_Lcd_Cmd+1,f
  1831  05A2  0DF3               	rlf	??_Lcd_Cmd+1,f
  1832  05A3  0DF3               	rlf	??_Lcd_Cmd+1,f
  1833  05A4  0806               	movf	6,w	;volatile
  1834  05A5  0673               	xorwf	??_Lcd_Cmd+1,w
  1835  05A6  39F7               	andlw	-9
  1836  05A7  0673               	xorwf	??_Lcd_Cmd+1,w
  1837  05A8  0086               	movwf	6	;volatile
  1838  05A9  0874               	movf	Lcd_Cmd@Cmd,w
  1839  05AA  00F2               	movwf	??_Lcd_Cmd
  1840  05AB  3002               	movlw	2
  1841  05AC                     u725:	
  1842  05AC  1003               	clrc
  1843  05AD  0CF2               	rrf	??_Lcd_Cmd,f
  1844  05AE  3EFF               	addlw	-1
  1845  05AF  1D03               	skipz
  1846  05B0  2DAC               	goto	u725
  1847  05B1  0872               	movf	??_Lcd_Cmd,w
  1848  05B2  3901               	andlw	1
  1849  05B3  00F3               	movwf	??_Lcd_Cmd+1
  1850  05B4  0DF3               	rlf	??_Lcd_Cmd+1,f
  1851  05B5  0DF3               	rlf	??_Lcd_Cmd+1,f
  1852  05B6  0806               	movf	6,w	;volatile
  1853  05B7  0673               	xorwf	??_Lcd_Cmd+1,w
  1854  05B8  39FB               	andlw	-5
  1855  05B9  0673               	xorwf	??_Lcd_Cmd+1,w
  1856  05BA  0086               	movwf	6	;volatile
  1857                           
  1858                           ;HD44780.h: 181: PORTBbits.RB1 = (Cmd & 0b00000010)>>1; PORTBbits.RB0 = (Cmd & 0b0000000
      +                          1);
  1859  05BB  0874               	movf	Lcd_Cmd@Cmd,w
  1860  05BC  00F2               	movwf	??_Lcd_Cmd
  1861  05BD  1003               	clrc
  1862  05BE  0C72               	rrf	??_Lcd_Cmd,w
  1863  05BF  3901               	andlw	1
  1864  05C0  00F3               	movwf	??_Lcd_Cmd+1
  1865  05C1  0DF3               	rlf	??_Lcd_Cmd+1,f
  1866  05C2  0806               	movf	6,w	;volatile
  1867  05C3  0673               	xorwf	??_Lcd_Cmd+1,w
  1868  05C4  39FD               	andlw	-3
  1869  05C5  0673               	xorwf	??_Lcd_Cmd+1,w
  1870  05C6  0086               	movwf	6	;volatile
  1871  05C7  3001               	movlw	1
  1872  05C8  0574               	andwf	Lcd_Cmd@Cmd,w
  1873  05C9  00F2               	movwf	??_Lcd_Cmd
  1874  05CA  0806               	movf	6,w	;volatile
  1875  05CB  0672               	xorwf	??_Lcd_Cmd,w
  1876  05CC  39FE               	andlw	-2
  1877  05CD  0672               	xorwf	??_Lcd_Cmd,w
  1878  05CE  0086               	movwf	6	;volatile
  1879                           
  1880                           ;HD44780.h: 182: _delay(10);
  1881  05CF  3003               	movlw	3
  1882  05D0  00F2               	movwf	??_Lcd_Cmd
  1883  05D1                     u867:	
  1884  05D1  0BF2               	decfsz	??_Lcd_Cmd,f
  1885  05D2  2DD1               	goto	u867
  1886                           
  1887                           ;HD44780.h: 183: PORTBbits.RB5 = 1; Delay_5us(); PORTBbits.RB5 = 0;
  1888  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  1889  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  1890  05D5  1686               	bsf	6,5	;volatile
  1891  05D6  120A  118A  22D7   	fcall	_Delay_5us
      +       120A  118A         
  1892  05DB  1283               	bcf	3,5	;RP0=0, select bank0
  1893  05DC  1303               	bcf	3,6	;RP1=0, select bank0
  1894  05DD  1286               	bcf	6,5	;volatile
  1895                           
  1896                           ;HD44780.h: 184: Delay_5500us();
  1897  05DE  120A  118A  22E0   	fcall	_Delay_5500us
  1898  05E1  0008               	return
  1899  05E2                     __end_of_Lcd_Cmd:	
  1900                           
  1901                           	psect	text8
  1902  05E2                     __ptext8:	
  1903 ;; *************** function _Lcd_Chr_CP *****************
  1904 ;; Defined at:
  1905 ;;		line 161 in file "HD44780.h"
  1906 ;; Parameters:    Size  Location     Type
  1907 ;;  Chr_CP          1    wreg     unsigned char 
  1908 ;; Auto vars:     Size  Location     Type
  1909 ;;  Chr_CP          1    4[COMMON] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;		None               void
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, pclath, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1919 ;;      Params:         0       0       0       0       0
  1920 ;;      Locals:         1       0       0       0       0
  1921 ;;      Temps:          2       0       0       0       0
  1922 ;;      Totals:         3       0       0       0       0
  1923 ;;Total ram usage:        3 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    1
  1926 ;; This function calls:
  1927 ;;		_Delay_5500us
  1928 ;;		_Delay_5us
  1929 ;; This function is called by:
  1930 ;;		_Lcd_Out
  1931 ;;		_Lcd_Chr
  1932 ;;		_main
  1933 ;;		_Lcd_Out2
  1934 ;; This function uses a non-reentrant model
  1935 ;;
  1936                           
  1937                           
  1938                           ;psect for function _Lcd_Chr_CP
  1939  05E2                     _Lcd_Chr_CP:	
  1940                           
  1941                           ;incstack = 0
  1942                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0+pclath+cstack]
  1943                           ;Lcd_Chr_CP@Chr_CP stored from wreg
  1944  05E2  00F4               	movwf	Lcd_Chr_CP@Chr_CP
  1945                           
  1946                           ;HD44780.h: 162: PORTBbits.RB5 = 0; PORTBbits.RB4 = 1;
  1947  05E3  1283               	bcf	3,5	;RP0=0, select bank0
  1948  05E4  1303               	bcf	3,6	;RP1=0, select bank0
  1949  05E5  1286               	bcf	6,5	;volatile
  1950  05E6  1606               	bsf	6,4	;volatile
  1951                           
  1952                           ;HD44780.h: 163: PORTBbits.RB3 = (Chr_CP & 0b10000000)>>7; PORTBbits.RB2 = (Chr_CP & 0b0
      +                          1000000)>>6;
  1953  05E7  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  1954  05E8  00F2               	movwf	??_Lcd_Chr_CP
  1955  05E9  3007               	movlw	7
  1956  05EA                     u735:	
  1957  05EA  1003               	clrc
  1958  05EB  0CF2               	rrf	??_Lcd_Chr_CP,f
  1959  05EC  3EFF               	addlw	-1
  1960  05ED  1D03               	skipz
  1961  05EE  2DEA               	goto	u735
  1962  05EF  0872               	movf	??_Lcd_Chr_CP,w
  1963  05F0  3901               	andlw	1
  1964  05F1  00F3               	movwf	??_Lcd_Chr_CP+1
  1965  05F2  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  1966  05F3  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  1967  05F4  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  1968  05F5  0806               	movf	6,w	;volatile
  1969  05F6  0673               	xorwf	??_Lcd_Chr_CP+1,w
  1970  05F7  39F7               	andlw	-9
  1971  05F8  0673               	xorwf	??_Lcd_Chr_CP+1,w
  1972  05F9  0086               	movwf	6	;volatile
  1973  05FA  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  1974  05FB  00F2               	movwf	??_Lcd_Chr_CP
  1975  05FC  3006               	movlw	6
  1976  05FD                     u745:	
  1977  05FD  1003               	clrc
  1978  05FE  0CF2               	rrf	??_Lcd_Chr_CP,f
  1979  05FF  3EFF               	addlw	-1
  1980  0600  1D03               	skipz
  1981  0601  2DFD               	goto	u745
  1982  0602  0872               	movf	??_Lcd_Chr_CP,w
  1983  0603  3901               	andlw	1
  1984  0604  00F3               	movwf	??_Lcd_Chr_CP+1
  1985  0605  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  1986  0606  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  1987  0607  0806               	movf	6,w	;volatile
  1988  0608  0673               	xorwf	??_Lcd_Chr_CP+1,w
  1989  0609  39FB               	andlw	-5
  1990  060A  0673               	xorwf	??_Lcd_Chr_CP+1,w
  1991  060B  0086               	movwf	6	;volatile
  1992                           
  1993                           ;HD44780.h: 164: PORTBbits.RB1 = (Chr_CP & 0b00100000)>>5; PORTBbits.RB0 = (Chr_CP & 0b0
      +                          0010000)>>4;
  1994  060C  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  1995  060D  00F2               	movwf	??_Lcd_Chr_CP
  1996  060E  3005               	movlw	5
  1997  060F                     u755:	
  1998  060F  1003               	clrc
  1999  0610  0CF2               	rrf	??_Lcd_Chr_CP,f
  2000  0611  3EFF               	addlw	-1
  2001  0612  1D03               	skipz
  2002  0613  2E0F               	goto	u755
  2003  0614  0872               	movf	??_Lcd_Chr_CP,w
  2004  0615  3901               	andlw	1
  2005  0616  00F3               	movwf	??_Lcd_Chr_CP+1
  2006  0617  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2007  0618  0806               	movf	6,w	;volatile
  2008  0619  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2009  061A  39FD               	andlw	-3
  2010  061B  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2011  061C  0086               	movwf	6	;volatile
  2012  061D  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2013  061E  00F2               	movwf	??_Lcd_Chr_CP
  2014  061F  3004               	movlw	4
  2015  0620                     u765:	
  2016  0620  1003               	clrc
  2017  0621  0CF2               	rrf	??_Lcd_Chr_CP,f
  2018  0622  3EFF               	addlw	-1
  2019  0623  1D03               	skipz
  2020  0624  2E20               	goto	u765
  2021  0625  3001               	movlw	1
  2022  0626  0572               	andwf	??_Lcd_Chr_CP,w
  2023  0627  00F3               	movwf	??_Lcd_Chr_CP+1
  2024  0628  0806               	movf	6,w	;volatile
  2025  0629  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2026  062A  39FE               	andlw	-2
  2027  062B  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2028  062C  0086               	movwf	6	;volatile
  2029                           
  2030                           ;HD44780.h: 165: _delay(10);
  2031  062D  3003               	movlw	3
  2032  062E  00F2               	movwf	??_Lcd_Chr_CP
  2033  062F                     u877:	
  2034  062F  0BF2               	decfsz	??_Lcd_Chr_CP,f
  2035  0630  2E2F               	goto	u877
  2036                           
  2037                           ;HD44780.h: 166: PORTBbits.RB5 = 1; Delay_5us(); PORTBbits.RB5 = 0;
  2038  0631  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0632  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0633  1686               	bsf	6,5	;volatile
  2041  0634  120A  118A  22D7   	fcall	_Delay_5us
      +       120A  118A         
  2042  0639  1283               	bcf	3,5	;RP0=0, select bank0
  2043  063A  1303               	bcf	3,6	;RP1=0, select bank0
  2044  063B  1286               	bcf	6,5	;volatile
  2045                           
  2046                           ;HD44780.h: 167: PORTBbits.RB3 = (Chr_CP & 0b00001000)>>3; PORTBbits.RB2 = (Chr_CP & 0b0
      +                          0000100)>>2;
  2047  063C  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2048  063D  00F2               	movwf	??_Lcd_Chr_CP
  2049  063E  3003               	movlw	3
  2050  063F                     u775:	
  2051  063F  1003               	clrc
  2052  0640  0CF2               	rrf	??_Lcd_Chr_CP,f
  2053  0641  3EFF               	addlw	-1
  2054  0642  1D03               	skipz
  2055  0643  2E3F               	goto	u775
  2056  0644  0872               	movf	??_Lcd_Chr_CP,w
  2057  0645  3901               	andlw	1
  2058  0646  00F3               	movwf	??_Lcd_Chr_CP+1
  2059  0647  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2060  0648  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2061  0649  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2062  064A  0806               	movf	6,w	;volatile
  2063  064B  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2064  064C  39F7               	andlw	-9
  2065  064D  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2066  064E  0086               	movwf	6	;volatile
  2067  064F  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2068  0650  00F2               	movwf	??_Lcd_Chr_CP
  2069  0651  3002               	movlw	2
  2070  0652                     u785:	
  2071  0652  1003               	clrc
  2072  0653  0CF2               	rrf	??_Lcd_Chr_CP,f
  2073  0654  3EFF               	addlw	-1
  2074  0655  1D03               	skipz
  2075  0656  2E52               	goto	u785
  2076  0657  0872               	movf	??_Lcd_Chr_CP,w
  2077  0658  3901               	andlw	1
  2078  0659  00F3               	movwf	??_Lcd_Chr_CP+1
  2079  065A  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2080  065B  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2081  065C  0806               	movf	6,w	;volatile
  2082  065D  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2083  065E  39FB               	andlw	-5
  2084  065F  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2085  0660  0086               	movwf	6	;volatile
  2086                           
  2087                           ;HD44780.h: 168: PORTBbits.RB1 = (Chr_CP & 0b00000010)>>1; PORTBbits.RB0 = (Chr_CP & 0b0
      +                          0000001);
  2088  0661  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2089  0662  00F2               	movwf	??_Lcd_Chr_CP
  2090  0663  1003               	clrc
  2091  0664  0C72               	rrf	??_Lcd_Chr_CP,w
  2092  0665  3901               	andlw	1
  2093  0666  00F3               	movwf	??_Lcd_Chr_CP+1
  2094  0667  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2095  0668  0806               	movf	6,w	;volatile
  2096  0669  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2097  066A  39FD               	andlw	-3
  2098  066B  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2099  066C  0086               	movwf	6	;volatile
  2100  066D  3001               	movlw	1
  2101  066E  0574               	andwf	Lcd_Chr_CP@Chr_CP,w
  2102  066F  00F2               	movwf	??_Lcd_Chr_CP
  2103  0670  0806               	movf	6,w	;volatile
  2104  0671  0672               	xorwf	??_Lcd_Chr_CP,w
  2105  0672  39FE               	andlw	-2
  2106  0673  0672               	xorwf	??_Lcd_Chr_CP,w
  2107  0674  0086               	movwf	6	;volatile
  2108                           
  2109                           ;HD44780.h: 169: _delay(10);
  2110  0675  3003               	movlw	3
  2111  0676  00F2               	movwf	??_Lcd_Chr_CP
  2112  0677                     u887:	
  2113  0677  0BF2               	decfsz	??_Lcd_Chr_CP,f
  2114  0678  2E77               	goto	u887
  2115                           
  2116                           ;HD44780.h: 170: PORTBbits.RB5 = 1; Delay_5us(); PORTBbits.RB5 = 0;
  2117  0679  1283               	bcf	3,5	;RP0=0, select bank0
  2118  067A  1303               	bcf	3,6	;RP1=0, select bank0
  2119  067B  1686               	bsf	6,5	;volatile
  2120  067C  120A  118A  22D7   	fcall	_Delay_5us
      +       120A  118A         
  2121  0681  1283               	bcf	3,5	;RP0=0, select bank0
  2122  0682  1303               	bcf	3,6	;RP1=0, select bank0
  2123  0683  1286               	bcf	6,5	;volatile
  2124                           
  2125                           ;HD44780.h: 171: Delay_5us(); Delay_5500us();
  2126  0684  120A  118A  22D7   	fcall	_Delay_5us
      +       120A  118A         
  2127  0689  120A  118A  22E0   	fcall	_Delay_5500us
  2128  068C  0008               	return
  2129  068D                     __end_of_Lcd_Chr_CP:	
  2130                           
  2131                           	psect	text9
  2132  02D7                     __ptext9:	
  2133 ;; *************** function _Delay_5us *****************
  2134 ;; Defined at:
  2135 ;;		line 81 in file "HD44780.h"
  2136 ;; Parameters:    Size  Location     Type
  2137 ;;		None
  2138 ;; Auto vars:     Size  Location     Type
  2139 ;;		None
  2140 ;; Return value:  Size  Location     Type
  2141 ;;		None               void
  2142 ;; Registers used:
  2143 ;;		wreg
  2144 ;; Tracked objects:
  2145 ;;		On entry : 0/0
  2146 ;;		On exit  : 0/0
  2147 ;;		Unchanged: 0/0
  2148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2149 ;;      Params:         0       0       0       0       0
  2150 ;;      Locals:         0       0       0       0       0
  2151 ;;      Temps:          1       0       0       0       0
  2152 ;;      Totals:         1       0       0       0       0
  2153 ;;Total ram usage:        1 bytes
  2154 ;; Hardware stack levels used:    1
  2155 ;; This function calls:
  2156 ;;		Nothing
  2157 ;; This function is called by:
  2158 ;;		_Lcd_Init
  2159 ;;		_Lcd_Chr_CP
  2160 ;;		_Lcd_Cmd
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           
  2165                           ;psect for function _Delay_5us
  2166  02D7                     _Delay_5us:	
  2167                           
  2168                           ;HD44780.h: 82: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2169                           
  2170                           ;incstack = 0
  2171                           ; Regs used in _Delay_5us: [wreg]
  2172  02D7  3003               	movlw	3
  2173  02D8  00F0               	movwf	??_Delay_5us
  2174  02D9                     u897:	
  2175  02D9  0BF0               	decfsz	??_Delay_5us,f
  2176  02DA  2AD9               	goto	u897
  2177                           
  2178                           ;HD44780.h: 83: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2179  02DB  3003               	movlw	3
  2180  02DC  00F0               	movwf	??_Delay_5us
  2181  02DD                     u907:	
  2182  02DD  0BF0               	decfsz	??_Delay_5us,f
  2183  02DE  2ADD               	goto	u907
  2184  02DF  0008               	return
  2185  02E0                     __end_of_Delay_5us:	
  2186                           
  2187                           	psect	text10
  2188  02E0                     __ptext10:	
  2189 ;; *************** function _Delay_5500us *****************
  2190 ;; Defined at:
  2191 ;;		line 86 in file "HD44780.h"
  2192 ;; Parameters:    Size  Location     Type
  2193 ;;		None
  2194 ;; Auto vars:     Size  Location     Type
  2195 ;;		None
  2196 ;; Return value:  Size  Location     Type
  2197 ;;		None               void
  2198 ;; Registers used:
  2199 ;;		wreg
  2200 ;; Tracked objects:
  2201 ;;		On entry : 0/0
  2202 ;;		On exit  : 0/0
  2203 ;;		Unchanged: 0/0
  2204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2205 ;;      Params:         0       0       0       0       0
  2206 ;;      Locals:         0       0       0       0       0
  2207 ;;      Temps:          2       0       0       0       0
  2208 ;;      Totals:         2       0       0       0       0
  2209 ;;Total ram usage:        2 bytes
  2210 ;; Hardware stack levels used:    1
  2211 ;; This function calls:
  2212 ;;		Nothing
  2213 ;; This function is called by:
  2214 ;;		_Lcd_Init
  2215 ;;		_Lcd_Chr_CP
  2216 ;;		_Lcd_Cmd
  2217 ;; This function uses a non-reentrant model
  2218 ;;
  2219                           
  2220                           
  2221                           ;psect for function _Delay_5500us
  2222  02E0                     _Delay_5500us:	
  2223                           
  2224                           ;HD44780.h: 87: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2225                           
  2226                           ;incstack = 0
  2227                           ; Regs used in _Delay_5500us: [wreg]
  2228  02E0  300F               	movlw	15
  2229  02E1  00F1               	movwf	??_Delay_5500us+1
  2230  02E2  3047               	movlw	71
  2231  02E3  00F0               	movwf	??_Delay_5500us
  2232  02E4                     u917:	
  2233  02E4  0BF0               	decfsz	??_Delay_5500us,f
  2234  02E5  2AE4               	goto	u917
  2235  02E6  0BF1               	decfsz	??_Delay_5500us+1,f
  2236  02E7  2AE4               	goto	u917
  2237  02E8  2AE9               	nop2
  2238  02E9  0008               	return
  2239  02EA                     __end_of_Delay_5500us:	
  2240                           
  2241                           	psect	text11
  2242  02CE                     __ptext11:	
  2243 ;; *************** function _ADCInit *****************
  2244 ;; Defined at:
  2245 ;;		line 34 in file "main.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;		None               void
  2252 ;; Registers used:
  2253 ;;		wreg
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2259 ;;      Params:         0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0
  2262 ;;      Totals:         0       0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; This function calls:
  2266 ;;		Nothing
  2267 ;; This function is called by:
  2268 ;;		_main
  2269 ;; This function uses a non-reentrant model
  2270 ;;
  2271                           
  2272                           
  2273                           ;psect for function _ADCInit
  2274  02CE                     _ADCInit:	
  2275                           
  2276                           ;main.c: 35: ADCON0 = 0x11;
  2277                           
  2278                           ;incstack = 0
  2279                           ; Regs used in _ADCInit: [wreg]
  2280  02CE  3011               	movlw	17
  2281  02CF  1283               	bcf	3,5	;RP0=0, select bank0
  2282  02D0  1303               	bcf	3,6	;RP1=0, select bank0
  2283  02D1  009F               	movwf	31	;volatile
  2284                           
  2285                           ;main.c: 36: ADCON1 = 0x80;
  2286  02D2  3080               	movlw	128
  2287  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2288  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2289  02D5  009F               	movwf	31	;volatile
  2290  02D6  0008               	return
  2291  02D7                     __end_of_ADCInit:	
  2292  007E                     btemp	set	126	;btemp
  2293  007E                     wtemp	set	126
  2294  007E                     wtemp0	set	126
  2295  0080                     wtemp1	set	128
  2296  0082                     wtemp2	set	130
  2297  0084                     wtemp3	set	132
  2298  0086                     wtemp4	set	134
  2299  0088                     wtemp5	set	136
  2300  007F                     wtemp6	set	127
  2301  007E                     ttemp	set	126
  2302  007E                     ttemp0	set	126
  2303  0081                     ttemp1	set	129
  2304  0084                     ttemp2	set	132
  2305  0087                     ttemp3	set	135
  2306  007F                     ttemp4	set	127
  2307  007E                     ltemp	set	126
  2308  007E                     ltemp0	set	126
  2309  0082                     ltemp1	set	130
  2310  0086                     ltemp2	set	134
  2311  0080                     ltemp3	set	128


Data Sizes:
    Strings     38
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80     17      24
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    text	PTR unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[17]), 

    Lcd_Out@buffer	PTR const unsigned char  size(1) Largest target is 17
		 -> NULL(NULL[0]), STR_3(CODE[9]), STR_2(CODE[12]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___lmul
    ___almod->___aldiv
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Chr->_Lcd_Chr_CP
    _Lcd_Chr->_Lcd_Cmd
    _Lcd_Cmd->_Delay_5500us
    _Lcd_Chr_CP->_Delay_5500us

Critical Paths under _main in BANK0

    _main->___almod
    ___almod->___aldiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    3805
                                             14 BANK0      3     3      0
                            _ADCInit
                            _Lcd_Chr
                         _Lcd_Chr_CP
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                            ___aldiv
                            ___almod
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) ___lmul                                              13     5      8     220
                                              0 COMMON    13     5      8
 ---------------------------------------------------------------------------------
 (1) ___almod                                             11     3      8     552
                                              9 COMMON     3     3      0
                                              6 BANK0      8     0      8
                            ___aldiv (ARG)
 ---------------------------------------------------------------------------------
 (1) ___aldiv                                             15     7      8     812
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              5     3      2     917
                                              5 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              5 COMMON     2     2      0
                       _Delay_5500us
                          _Delay_5us
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Chr                                              5     3      2     638
                                              5 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              2 COMMON     3     3      0
                       _Delay_5500us
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              2 COMMON     3     3      0
                       _Delay_5500us
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (3) _Delay_5us                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay_5500us                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _ADCInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADCInit
   _Lcd_Chr
     _Lcd_Chr_CP
       _Delay_5500us
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
       _Delay_5us
   _Lcd_Chr_CP
     _Delay_5500us
     _Delay_5us
   _Lcd_Cmd
     _Delay_5500us
     _Delay_5us
   _Lcd_Init
     _Delay_5500us
     _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
       _Delay_5us
   _Lcd_Out
     _Lcd_Chr_CP
       _Delay_5500us
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
       _Delay_5us
   ___aldiv
   ___almod
     ___aldiv (ARG)
   ___lmul

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      26       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     11      18       5       30.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      26      12        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Apr 15 02:20:28 2014

                      pc 0002              __CFG_CP$OFF 0000                       l35 04CF  
                     l36 04F7                       l94 06E6                       _ch 007D  
                     fsr 0004                      l214 041E                      l227 03A5  
                    u505 0478             __CFG_CPD$OFF 0000                      u615 03BE  
                    u705 057A                      u465 0443                      u715 0599  
                    u635 03D8                      u555 0334                      u725 05AC  
                    u485 0451                      u645 03E9                      u565 033C  
                    u735 05EA                      u495 0466                      u745 05FD  
                    u907 02DD                      u755 060F                      u675 0544  
                    u917 02E4                      u765 0620                      u685 0557  
                    u837 06D6                      u775 063F                      u695 0569  
                    u847 07EE                      u785 0652                      u857 0589  
                    u867 05D1                      u877 062F                      u887 0677  
                    u897 02D9                      fsr0 0004          __end_of_ADCInit 02D7  
           __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000                     l1120 03CA  
                   l1112 03B2                     l1132 0403                     l1124 03E8  
                   l1118 03BA                     l1064 043F                     l1056 042F  
                   l1128 03F5                     l1082 0492                     l1074 0477  
                   l1066 044F                     l1260 035E                     l1092 0332  
                   l1316 06E3                     l1254 0355                     l1078 0484  
                   l1280 02F2                     l1272 0378                     l1256 0358  
                   l1264 0364                     l1088 031C                     l1282 02F5  
                   l1258 035B                     l1266 0372                     l1276 02EC  
                   l1278 02EF                     l1286 02FB                     l1288 0309  
                   STR_1 0009                     STR_2 001A                     STR_3 0026  
           __CFG_WRT$OFF 0000                     _main 068D                     _text 0037  
                   btemp 007E                     ltemp 007E                     start 0000  
                   ttemp 007E                     wtemp 007E          __end_of_Lcd_Cmd 05E2  
        __end_of_Lcd_Chr 0314          __end_of_Lcd_Out 0393               _Lcd_Chr_CP 05E2  
        __end_of___aldiv 049B          __end_of___almod 040C                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _CMCON 009C                    _TRISA 0085  
    ___lmul@multiplicand 0074                    _tlong 0031           __CFG_BOREN$OFF 0000  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
       __end_of_Lcd_Init 053C          __initialization 07F4    __size_of_Delay_5500us 000A  
           __end_of_main 07F4       __size_of_Delay_5us 0009                ??_ADCInit 0070  
                 ??_main 002E                   _ADCON0 001F                   _ADCON1 009F  
                 _ADRESH 001E                   _ADRESL 009E                   _INTCON 000B  
              ??_Lcd_Cmd 0072                ??_Lcd_Chr 0077             _Delay_5500us 02E0  
              ??_Lcd_Out 0077           __CFG_PWRTE$OFF 0000                   ___lmul 0314  
                 _adc_rd 0035              ?_Lcd_Chr_CP 0070                ??___aldiv 0078  
              ??___almod 0079        __end_of_Delay_5us 02E0  __end_of__initialization 07FC  
         __pcstackCOMMON 0070                ?_Lcd_Init 0070      __size_of_Lcd_Chr_CP 00AB  
             __pbssBANK0 0031         Lcd_Chr_CP@Chr_CP 0074               __pmaintext 068D  
                ?___lmul 0070                  _ADCInit 02CE           ___lmul@product 0079  
             ??_Lcd_Init 0075               __stringtab 0003                  _Lcd_Cmd 053C  
                _Lcd_Chr 02EA                  _Lcd_Out 0353                  ___aldiv 040C  
                ___almod 0393          __size_of___lmul 003F                  __ptext1 0314  
                __ptext2 0393                  __ptext3 040C                  __ptext4 0353  
                __ptext5 049B                  __ptext6 02EA                  __ptext7 053C  
                __ptext8 05E2                  __ptext9 02D7         ___aldiv@dividend 0074  
   end_of_initialization 07FC         ___aldiv@quotient 0022             ??_Lcd_Chr_CP 0072  
              _PORTBbits 0006                _TRISBbits 0086       __end_of_Lcd_Chr_CP 068D  
              _Delay_5us 02D7           __end_of___lmul 0353      start_initialization 07F4  
          Lcd_Out@buffer 0076        __size_of_Lcd_Init 00A1               ?_Delay_5us 0070  
               ??___lmul 0078                 ?_ADCInit 0070              __pbssCOMMON 007D  
              ___latbits 0002            __pcstackBANK0 0020      __end_of__stringdata 002F  
               ?_Lcd_Cmd 0070                 ?_Lcd_Chr 0075                 ?_Lcd_Out 0075  
               ?___aldiv 0070                 ?___almod 0026         ___almod@dividend 002A  
              __pstrings 0003            ?_Delay_5500us 0070          ___aldiv@divisor 0070  
        ___aldiv@counter 0020              ??_Delay_5us 0070                 Lcd_Chr@x 0075  
               Lcd_Chr@y 0078                 Lcd_Out@x 0075                 Lcd_Out@y 0078  
       __size_of_ADCInit 0009             Lcd_Init@data 0076               _ADCON0bits 001F  
            __stringbase 0008              __stringdata 0009                 _Lcd_Init 049B  
      ___lmul@multiplier 0070           ??_Delay_5500us 0070         __size_of_Lcd_Cmd 00A6  
       __size_of_Lcd_Chr 002A         __size_of_Lcd_Out 0040         __size_of___aldiv 008F  
       __size_of___almod 0079       __end_of__stringtab 0009                 __ptext10 02E0  
               __ptext11 02CE          ___almod@divisor 0026          ___almod@counter 007A  
            Lcd_Chr@data 0079            __size_of_main 0167              Lcd_Out@data 0079  
             Lcd_Cmd@Cmd 0074               Lcd_Chr@Chr 0076                stringcode 0003  
   __end_of_Delay_5500us 02EA                 stringdir 0003                 stringtab 0003  
           ___aldiv@sign 0021             ___almod@sign 007B  
