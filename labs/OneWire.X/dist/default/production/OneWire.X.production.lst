

Microchip Technology PIC LITE Macro Assembler V1.30 build 55553 
                                                                                               Tue Apr 15 03:19:49 2014

Microchip Technology Omniscient Code Generator (Lite mode) build 55553
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	dabs	1,0x7E,2
    25  0000                     	;# 
    26  0001                     	;# 
    27  0002                     	;# 
    28  0003                     	;# 
    29  0004                     	;# 
    30  0005                     	;# 
    31  0006                     	;# 
    32  0007                     	;# 
    33  0008                     	;# 
    34  0009                     	;# 
    35  000A                     	;# 
    36  000B                     	;# 
    37  000C                     	;# 
    38  000D                     	;# 
    39  000E                     	;# 
    40  000E                     	;# 
    41  000F                     	;# 
    42  0010                     	;# 
    43  0011                     	;# 
    44  0012                     	;# 
    45  0013                     	;# 
    46  0014                     	;# 
    47  0015                     	;# 
    48  0015                     	;# 
    49  0016                     	;# 
    50  0017                     	;# 
    51  0018                     	;# 
    52  0019                     	;# 
    53  001A                     	;# 
    54  001B                     	;# 
    55  001B                     	;# 
    56  001C                     	;# 
    57  001D                     	;# 
    58  001E                     	;# 
    59  001F                     	;# 
    60  0081                     	;# 
    61  0085                     	;# 
    62  0086                     	;# 
    63  0087                     	;# 
    64  0088                     	;# 
    65  0089                     	;# 
    66  008C                     	;# 
    67  008D                     	;# 
    68  008E                     	;# 
    69  0091                     	;# 
    70  0092                     	;# 
    71  0093                     	;# 
    72  0094                     	;# 
    73  0098                     	;# 
    74  0099                     	;# 
    75  009C                     	;# 
    76  009D                     	;# 
    77  009E                     	;# 
    78  009F                     	;# 
    79  010C                     	;# 
    80  010D                     	;# 
    81  010E                     	;# 
    82  010F                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85                           
    86                           	psect	strings
    87  0003                     __pstrings:	
    88  0003                     stringtab:	
    89  0003                     __stringtab:	
    90                           
    91                           ;	String table - string pointers are 1 byte each
    92  0003  1BFF               	btfsc	btemp+1,7
    93  0004  280D               	ljmp	stringcode
    94  0005  1383               	bcf	3,7
    95  0006  187F               	btfsc	btemp+1,0
    96  0007  1783               	bsf	3,7
    97  0008  0800               	movf	0,w
    98  0009  0A84               	incf	4,f
    99  000A  1903               	skipnz
   100  000B  0AFF               	incf	btemp+1,f
   101  000C  0008               	return
   102  000D                     stringcode:	
   103  000D                     stringdir:	
   104  000D  3000               	movlw	high stringdir
   105  000E  008A               	movwf	10
   106  000F  0804               	movf	4,w
   107  0010  0A84               	incf	4,f
   108  0011  0782               	addwf	2,f
   109  0012                     __stringbase:	
   110  0012  3400               	retlw	0
   111  0013                     __end_of__stringtab:	
   112  0013                     _dpowers:	
   113  0013  3401               	retlw	1
   114  0014  3400               	retlw	0
   115  0015  340A               	retlw	10
   116  0016  3400               	retlw	0
   117  0017  3464               	retlw	100
   118  0018  3400               	retlw	0
   119  0019  34E8               	retlw	232
   120  001A  3403               	retlw	3
   121  001B  3410               	retlw	16
   122  001C  3427               	retlw	39
   123  001D                     __end_of_dpowers:	
   124  0006                     _PORTBbits	set	6
   125  0009                     _PORTEbits	set	9
   126  009F                     _ADCON1	set	159
   127  009C                     _CMCON	set	156
   128  0086                     _TRISBbits	set	134
   129  0089                     _TRISEbits	set	137
   130  001D                     __stringdata:	
   131  001D                     STR_1:	
   132  001D  3420               	retlw	32	;' '
   133  001E  3454               	retlw	84	;'T'
   134  001F  3465               	retlw	101	;'e'
   135  0020  346D               	retlw	109	;'m'
   136  0021  3470               	retlw	112	;'p'
   137  0022  3465               	retlw	101	;'e'
   138  0023  3472               	retlw	114	;'r'
   139  0024  3461               	retlw	97	;'a'
   140  0025  3474               	retlw	116	;'t'
   141  0026  3475               	retlw	117	;'u'
   142  0027  3472               	retlw	114	;'r'
   143  0028  3465               	retlw	101	;'e'
   144  0029  343A               	retlw	58	;':'
   145  002A  3420               	retlw	32	;' '
   146  002B  3420               	retlw	32	;' '
   147  002C  3420               	retlw	32	;' '
   148  002D  3400               	retlw	0
   149  002E                     STR_2:	
   150  002E  3425               	retlw	37	;'%'
   151  002F  3464               	retlw	100	;'d'
   152  0030  3400               	retlw	0
   153  0031                     __end_of__stringdata:	
   154                           
   155                           ; #config settings
   156  0000                     
   157                           	psect	cinit
   158  07F2                     start_initialization:	
   159  07F2                     __initialization:	
   160                           
   161                           ; Clear objects allocated to BANK0
   162  07F2  01B9               	clrf	__pbssBANK0& (0+127)
   163  07F3  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   164  07F4  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   165  07F5  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   166  07F6  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   167  07F7  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   168  07F8  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   169  07F9  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   170  07FA  01C1               	clrf	(__pbssBANK0+8)& (0+127)
   171  07FB  01C2               	clrf	(__pbssBANK0+9)& (0+127)
   172  07FC                     end_of_initialization:	
   173                           ;End of C runtime variable initialization code
   174                           
   175  07FC                     __end_of__initialization:	
   176  07FC  0183               	clrf	3
   177  07FD  120A  118A  2C25   	ljmp	_main	;jump to C main() function
   178                           
   179                           	psect	bssBANK0
   180  0039                     __pbssBANK0:	
   181  0039                     _currentTemp:	
   182  0039                     	ds	10
   183                           
   184                           	psect	cstackCOMMON
   185  0070                     __pcstackCOMMON:	
   186  0070                     ?_Lcd_Cmd:	
   187  0070                     ?_Lcd_Chr_CP:	
   188                           ; 0 bytes @ 0x0
   189                           
   190  0070                     ?_Delay_5us:	
   191                           ; 0 bytes @ 0x0
   192                           
   193  0070                     ??_Delay_5us:	
   194                           ; 0 bytes @ 0x0
   195                           
   196  0070                     ?_Delay_5500us:	
   197                           ; 0 bytes @ 0x0
   198                           
   199  0070                     ??_Delay_5500us:	
   200                           ; 0 bytes @ 0x0
   201                           
   202  0070                     ?_Lcd_Init:	
   203                           ; 0 bytes @ 0x0
   204                           
   205  0070                     ??_ow_reset:	
   206                           ; 0 bytes @ 0x0
   207                           
   208  0070                     ?_ow_write_byte:	
   209                           ; 0 bytes @ 0x0
   210                           
   211  0070                     ??_ow_write_byte:	
   212                           ; 0 bytes @ 0x0
   213                           
   214  0070                     ??_ow_read_byte:	
   215                           ; 0 bytes @ 0x0
   216                           
   217  0070                     ?_ow_reset:	
   218                           ; 0 bytes @ 0x0
   219                           
   220  0070                     ?_ow_read_byte:	
   221                           ; 1 bytes @ 0x0
   222                           
   223  0070                     ?_main:	
   224                           ; 1 bytes @ 0x0
   225                           
   226  0070                     ?___lwdiv:	
   227                           ; 2 bytes @ 0x0
   228                           
   229  0070                     ___lwdiv@divisor:	
   230                           ; 2 bytes @ 0x0
   231                           
   232                           
   233                           ; 2 bytes @ 0x0
   234  0070                     	ds	2
   235  0072                     ??_Lcd_Cmd:	
   236  0072                     ??_Lcd_Chr_CP:	
   237                           ; 0 bytes @ 0x2
   238                           
   239  0072                     ow_write_byte@data:	
   240                           ; 0 bytes @ 0x2
   241                           
   242  0072                     ow_reset@device_found:	
   243                           ; 1 bytes @ 0x2
   244                           
   245  0072                     ___lwdiv@dividend:	
   246                           ; 2 bytes @ 0x2
   247                           
   248                           
   249                           ; 2 bytes @ 0x2
   250  0072                     	ds	1
   251  0073                     ow_write_byte@i:	
   252  0073                     ow_read_byte@data:	
   253                           ; 1 bytes @ 0x3
   254                           
   255                           
   256                           ; 1 bytes @ 0x3
   257  0073                     	ds	1
   258  0074                     ??___lwdiv:	
   259  0074                     Lcd_Chr_CP@Chr_CP:	
   260                           ; 0 bytes @ 0x4
   261                           
   262  0074                     Lcd_Cmd@Cmd:	
   263                           ; 1 bytes @ 0x4
   264                           
   265  0074                     ow_read_byte@i:	
   266                           ; 1 bytes @ 0x4
   267                           
   268                           
   269                           ; 1 bytes @ 0x4
   270  0074                     	ds	1
   271  0075                     ??_Lcd_Init:	
   272  0075                     ?_Lcd_Out:	
   273                           ; 0 bytes @ 0x5
   274                           
   275  0075                     ?_Lcd_Chr:	
   276                           ; 0 bytes @ 0x5
   277                           
   278  0075                     Lcd_Out@x:	
   279                           ; 0 bytes @ 0x5
   280                           
   281  0075                     Lcd_Chr@x:	
   282                           ; 1 bytes @ 0x5
   283                           
   284  0075                     ___lwdiv@quotient:	
   285                           ; 1 bytes @ 0x5
   286                           
   287                           
   288                           ; 2 bytes @ 0x5
   289  0075                     	ds	1
   290  0076                     Lcd_Init@data:	
   291  0076                     Lcd_Chr@Chr:	
   292                           ; 1 bytes @ 0x6
   293                           
   294  0076                     Lcd_Out@buffer:	
   295                           ; 1 bytes @ 0x6
   296                           
   297                           
   298                           ; 2 bytes @ 0x6
   299  0076                     	ds	1
   300  0077                     ??_Lcd_Chr:	
   301  0077                     ___lwdiv@counter:	
   302                           ; 0 bytes @ 0x7
   303                           
   304                           
   305                           ; 1 bytes @ 0x7
   306  0077                     	ds	1
   307  0078                     ??_Lcd_Out:	
   308  0078                     ?___lwmod:	
   309                           ; 0 bytes @ 0x8
   310                           
   311  0078                     Lcd_Chr@y:	
   312                           ; 2 bytes @ 0x8
   313                           
   314  0078                     ___lwmod@divisor:	
   315                           ; 1 bytes @ 0x8
   316                           
   317                           
   318                           ; 2 bytes @ 0x8
   319  0078                     	ds	1
   320  0079                     Lcd_Out@y:	
   321  0079                     Lcd_Chr@data:	
   322                           ; 1 bytes @ 0x9
   323                           
   324                           
   325                           ; 1 bytes @ 0x9
   326  0079                     	ds	1
   327  007A                     Lcd_Out@data:	
   328  007A                     ___lwmod@dividend:	
   329                           ; 1 bytes @ 0xA
   330                           
   331                           
   332                           ; 2 bytes @ 0xA
   333  007A                     	ds	2
   334  007C                     ??___lwmod:	
   335                           
   336                           ; 0 bytes @ 0xC
   337  007C                     	ds	1
   338  007D                     ___lwmod@counter:	
   339                           
   340                           ; 1 bytes @ 0xD
   341  007D                     	ds	1
   342                           
   343                           	psect	cstackBANK0
   344  0020                     __pcstackBANK0:	
   345  0020                     ?_sprintf:	
   346  0020                     sprintf@f:	
   347                           ; 2 bytes @ 0x0
   348                           
   349                           
   350                           ; 1 bytes @ 0x0
   351  0020                     	ds	3
   352  0023                     ??_sprintf:	
   353                           
   354                           ; 0 bytes @ 0x3
   355  0023                     	ds	3
   356  0026                     sprintf@ap:	
   357                           
   358                           ; 1 bytes @ 0x6
   359  0026                     	ds	1
   360  0027                     sprintf@flag:	
   361                           
   362                           ; 1 bytes @ 0x7
   363  0027                     	ds	1
   364  0028                     sprintf@prec:	
   365                           
   366                           ; 1 bytes @ 0x8
   367  0028                     	ds	1
   368  0029                     sprintf@_val:	
   369                           
   370                           ; 4 bytes @ 0x9
   371  0029                     	ds	4
   372  002D                     sprintf@sp:	
   373                           
   374                           ; 1 bytes @ 0xD
   375  002D                     	ds	1
   376  002E                     sprintf@c:	
   377                           
   378                           ; 1 bytes @ 0xE
   379  002E                     	ds	1
   380  002F                     ?_ds_get_temp:	
   381                           
   382                           ; 2 bytes @ 0xF
   383  002F                     	ds	2
   384  0031                     ??_ds_get_temp:	
   385                           
   386                           ; 0 bytes @ 0x11
   387  0031                     	ds	2
   388  0033                     ds_get_temp@temp_low:	
   389                           
   390                           ; 1 bytes @ 0x13
   391  0033                     	ds	1
   392  0034                     ds_get_temp@temp_high:	
   393                           
   394                           ; 1 bytes @ 0x14
   395  0034                     	ds	1
   396  0035                     ds_get_temp@temperature:	
   397                           
   398                           ; 2 bytes @ 0x15
   399  0035                     	ds	2
   400  0037                     ??_main:	
   401                           
   402                           ; 0 bytes @ 0x17
   403  0037                     	ds	2
   404                           
   405                           	psect	maintext
   406  0425                     __pmaintext:	
   407 ;;
   408 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   409 ;;
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 60 in file "main.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;		None
   417 ;; Return value:  Size  Location     Type
   418 ;;                  2   93[COMMON] int 
   419 ;; Registers used:
   420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 17F/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       2       0       0       0
   429 ;;      Totals:         0       2       0       0       0
   430 ;;Total ram usage:        2 bytes
   431 ;; Hardware stack levels required when called:    3
   432 ;; This function calls:
   433 ;;		_Lcd_Chr
   434 ;;		_Lcd_Cmd
   435 ;;		_Lcd_Init
   436 ;;		_Lcd_Out
   437 ;;		_ds_get_temp
   438 ;;		_ow_reset
   439 ;;		_sprintf
   440 ;; This function is called by:
   441 ;;		Startup code after reset
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           
   446                           ;psect for function _main
   447  0425                     _main:	
   448                           
   449                           ;main.c: 62: CMCON = 0x07;
   450                           
   451                           ;incstack = 0
   452                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   453  0425  3007               	movlw	7
   454  0426  1683               	bsf	3,5	;RP0=1, select bank1
   455  0427  1303               	bcf	3,6	;RP1=0, select bank1
   456  0428  009C               	movwf	28	;volatile
   457                           
   458                           ;main.c: 63: ADCON1 = 0x0E;
   459  0429  300E               	movlw	14
   460  042A  009F               	movwf	31	;volatile
   461                           
   462                           ;main.c: 65: Lcd_Init();
   463  042B  120A  118A  2527   	fcall	_Lcd_Init
      +       120A  118A         
   464                           
   465                           ;main.c: 66: Lcd_Cmd(1);
   466  0430  3001               	movlw	1
   467  0431  120A  118A  25C8   	fcall	_Lcd_Cmd
      +       120A  118A         
   468                           
   469                           ;main.c: 67: Lcd_Cmd(12);
   470  0436  300C               	movlw	12
   471  0437  120A  118A  25C8   	fcall	_Lcd_Cmd
      +       120A  118A         
   472                           
   473                           ;main.c: 68: Lcd_Out(1, 1, " Temperature:   ");
   474  043C  01F5               	clrf	Lcd_Out@x
   475  043D  0AF5               	incf	Lcd_Out@x,f
   476  043E  300B               	movlw	low (STR_1-__stringbase)
   477  043F  00F6               	movwf	Lcd_Out@buffer
   478  0440  3080               	movlw	128
   479  0441  00F7               	movwf	Lcd_Out@buffer+1
   480  0442  3001               	movlw	1
   481  0443  120A  118A  23DD   	fcall	_Lcd_Out
      +       120A  118A         
   482                           
   483                           ;main.c: 70: Lcd_Chr(2,13,223);
   484  0448  300D               	movlw	13
   485  0449  1283               	bcf	3,5	;RP0=0, select bank0
   486  044A  1303               	bcf	3,6	;RP1=0, select bank0
   487  044B  00B7               	movwf	??_main
   488  044C  0837               	movf	??_main,w
   489  044D  00F5               	movwf	Lcd_Chr@x
   490  044E  30DF               	movlw	223
   491  044F  00B8               	movwf	??_main+1
   492  0450  0838               	movf	??_main+1,w
   493  0451  00F6               	movwf	Lcd_Chr@Chr
   494  0452  3002               	movlw	2
   495  0453  120A  118A  22D9   	fcall	_Lcd_Chr
      +       120A  118A         
   496                           
   497                           ;main.c: 73: Lcd_Chr(2,14,'C');
   498  0458  300E               	movlw	14
   499  0459  1283               	bcf	3,5	;RP0=0, select bank0
   500  045A  1303               	bcf	3,6	;RP1=0, select bank0
   501  045B  00B7               	movwf	??_main
   502  045C  0837               	movf	??_main,w
   503  045D  00F5               	movwf	Lcd_Chr@x
   504  045E  3043               	movlw	67
   505  045F  00B8               	movwf	??_main+1
   506  0460  0838               	movf	??_main+1,w
   507  0461  00F6               	movwf	Lcd_Chr@Chr
   508  0462  3002               	movlw	2
   509  0463  120A  118A  22D9   	fcall	_Lcd_Chr
      +       120A  118A         
   510  0468                     l1432:	
   511                           ;main.c: 75: while(1){
   512                           
   513                           
   514                           ;main.c: 76: ow_reset();
   515  0468  120A  118A  22B1   	fcall	_ow_reset
      +       120A  118A         
   516                           
   517                           ;main.c: 77: sprintf(currentTemp, "%d", ds_get_temp());
   518  046D  301C               	movlw	(STR_2-__stringbase)& (0+255)
   519  046E  1283               	bcf	3,5	;RP0=0, select bank0
   520  046F  1303               	bcf	3,6	;RP1=0, select bank0
   521  0470  00B7               	movwf	??_main
   522  0471  0837               	movf	??_main,w
   523  0472  00A0               	movwf	sprintf@f
   524  0473  120A  118A  2497   	fcall	_ds_get_temp
      +       120A  118A         
   525  0478  1283               	bcf	3,5	;RP0=0, select bank0
   526  0479  1303               	bcf	3,6	;RP1=0, select bank0
   527  047A  0830               	movf	?_ds_get_temp+1,w
   528  047B  01A2               	clrf	?_sprintf+2
   529  047C  07A2               	addwf	?_sprintf+2,f
   530  047D  082F               	movf	?_ds_get_temp,w
   531  047E  01A1               	clrf	?_sprintf+1
   532  047F  07A1               	addwf	?_sprintf+1,f
   533  0480  3039               	movlw	_currentTemp& (0+255)
   534  0481  120A  118A  2719   	fcall	_sprintf
      +       120A  118A         
   535                           
   536                           ;main.c: 78: Lcd_Out(2,2, currentTemp);
   537  0486  3002               	movlw	2
   538  0487  1283               	bcf	3,5	;RP0=0, select bank0
   539  0488  1303               	bcf	3,6	;RP1=0, select bank0
   540  0489  00B7               	movwf	??_main
   541  048A  0837               	movf	??_main,w
   542  048B  00F5               	movwf	Lcd_Out@x
   543  048C  3039               	movlw	_currentTemp& (0+255)
   544  048D  00F6               	movwf	Lcd_Out@buffer
   545  048E  3000               	movlw	0
   546  048F  00F7               	movwf	Lcd_Out@buffer+1
   547  0490  3002               	movlw	2
   548  0491  120A  118A  23DD   	fcall	_Lcd_Out
      +       120A  118A         
   549  0496  2C68               	goto	l1432
   550  0497                     __end_of_main:	
   551                           ;main.c: 79: }
   552                           ;main.c: 81: return (0);
   553                           ;	Return value of _main is never used
   554                           
   555                           
   556                           	psect	text1
   557  0719                     __ptext1:	
   558 ;; *************** function _sprintf *****************
   559 ;; Defined at:
   560 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\doprnt.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;  sp              1    wreg     PTR unsigned char 
   563 ;;		 -> currentTemp(10), 
   564 ;;  f               1    0[BANK0 ] PTR const unsigned char 
   565 ;;		 -> STR_2(3), 
   566 ;; Auto vars:     Size  Location     Type
   567 ;;  sp              1   13[BANK0 ] PTR unsigned char 
   568 ;;		 -> currentTemp(10), 
   569 ;;  _val            4    9[BANK0 ] struct .
   570 ;;  c               1   14[BANK0 ] char 
   571 ;;  prec            1    8[BANK0 ] char 
   572 ;;  flag            1    7[BANK0 ] unsigned char 
   573 ;;  ap              1    6[BANK0 ] PTR void [1]
   574 ;;		 -> ?_sprintf(2), 
   575 ;; Return value:  Size  Location     Type
   576 ;;                  2    0[BANK0 ] int 
   577 ;; Registers used:
   578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   579 ;; Tracked objects:
   580 ;;		On entry : 0/0
   581 ;;		On exit  : 0/0
   582 ;;		Unchanged: 0/0
   583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   584 ;;      Params:         0       3       0       0       0
   585 ;;      Locals:         0       9       0       0       0
   586 ;;      Temps:          0       3       0       0       0
   587 ;;      Totals:         0      15       0       0       0
   588 ;;Total ram usage:       15 bytes
   589 ;; Hardware stack levels used:    1
   590 ;; Hardware stack levels required when called:    1
   591 ;; This function calls:
   592 ;;		___lwdiv
   593 ;;		___lwmod
   594 ;; This function is called by:
   595 ;;		_main
   596 ;; This function uses a non-reentrant model
   597 ;;
   598                           
   599                           
   600                           ;psect for function _sprintf
   601  0719                     _sprintf:	
   602                           
   603                           ;incstack = 0
   604                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   605                           ;sprintf@sp stored from wreg
   606  0719  1283               	bcf	3,5	;RP0=0, select bank0
   607  071A  1303               	bcf	3,6	;RP1=0, select bank0
   608  071B  00AD               	movwf	sprintf@sp
   609                           
   610                           ;doprnt.c: 494: va_list ap;
   611                           ;doprnt.c: 499: signed char c;
   612                           ;doprnt.c: 506: signed char prec;
   613                           ;doprnt.c: 508: unsigned char flag;
   614                           ;doprnt.c: 527: union {
   615                           ;doprnt.c: 528: unsigned int _val;
   616                           ;doprnt.c: 529: struct {
   617                           ;doprnt.c: 530: const char * _cp;
   618                           ;doprnt.c: 531: unsigned _len;
   619                           ;doprnt.c: 532: } _str;
   620                           ;doprnt.c: 533: } _val;
   621                           ;doprnt.c: 542: *ap = __va_start();
   622  071C  3021               	movlw	(?_sprintf+1)& (0+255)
   623  071D  00A3               	movwf	??_sprintf
   624  071E  0823               	movf	??_sprintf,w
   625  071F  00A6               	movwf	sprintf@ap
   626  0720                     l1320:	
   627                           ;doprnt.c: 545: while(c = *f++) {
   628                           
   629  0720  3001               	movlw	1
   630  0721  07A0               	addwf	sprintf@f,f
   631  0722  30FF               	movlw	-1
   632  0723  0720               	addwf	sprintf@f,w
   633  0724  0084               	movwf	4
   634  0725  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
   635  072A  00A3               	movwf	??_sprintf
   636  072B  0823               	movf	??_sprintf,w
   637  072C  00AE               	movwf	sprintf@c
   638  072D  08AE               	movf	sprintf@c,f
   639  072E  1903               	btfsc	3,2
   640  072F  2FED               	goto	l1322
   641                           
   642                           ;doprnt.c: 547: if(c != '%')
   643  0730  082E               	movf	sprintf@c,w
   644  0731  3A25               	xorlw	37
   645  0732  1903               	skipnz
   646  0733  2F40               	goto	l1276
   647                           
   648                           ;doprnt.c: 549: {
   649                           ;doprnt.c: 550: ((*sp++ = (c)));
   650  0734  082E               	movf	sprintf@c,w
   651  0735  00A3               	movwf	??_sprintf
   652  0736  082D               	movf	sprintf@sp,w
   653  0737  0084               	movwf	4
   654  0738  0823               	movf	??_sprintf,w
   655  0739  1383               	bcf	3,7	;select IRP bank0
   656  073A  0080               	movwf	0
   657  073B  3001               	movlw	1
   658  073C  00A3               	movwf	??_sprintf
   659  073D  0823               	movf	??_sprintf,w
   660  073E  07AD               	addwf	sprintf@sp,f
   661                           
   662                           ;doprnt.c: 551: continue;
   663  073F  2F20               	goto	l1320
   664  0740                     l1276:	
   665                           
   666                           ;doprnt.c: 552: }
   667                           ;doprnt.c: 557: flag = 0;
   668  0740  01A7               	clrf	sprintf@flag
   669                           
   670                           ;doprnt.c: 831: }
   671                           
   672                           ;doprnt.c: 822: continue;
   673                           
   674                           ;doprnt.c: 811: default:
   675                           
   676                           ;doprnt.c: 707: case 'i':
   677                           ;doprnt.c: 708: break;
   678                           
   679                           ;doprnt.c: 706: case 'd':
   680                           
   681                           ;doprnt.c: 647: goto alldone;
   682                           
   683                           ;doprnt.c: 646: case 0:
   684                           
   685                           ;doprnt.c: 644: switch(c = *f++) {
   686  0741  3001               	movlw	1
   687  0742  07A0               	addwf	sprintf@f,f
   688  0743  30FF               	movlw	-1
   689  0744  0720               	addwf	sprintf@f,w
   690  0745  0084               	movwf	4
   691  0746  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
   692  074B  00AE               	movwf	sprintf@c
   693                           
   694                           ; Switch size 1, requested type "space"
   695                           ; Number of cases is 3, Range of values is 0 to 105
   696                           ; switch strategies available:
   697                           ; Name         Instructions Cycles
   698                           ; simple_byte           10     6 (average)
   699                           ; jumptable            260     6 (fixed)
   700                           ;	Chosen strategy is simple_byte
   701  074C  3A00               	xorlw	0	; case 0
   702  074D  1903               	skipnz
   703  074E  2FED               	goto	l1322
   704  074F  3A64               	xorlw	100	; case 100
   705  0750  1903               	skipnz
   706  0751  2F56               	goto	l1282
   707  0752  3A0D               	xorlw	13	; case 105
   708  0753  1903               	skipnz
   709  0754  2F56               	goto	l1282
   710  0755  2F20               	goto	l1320
   711  0756                     l1282:	
   712                           
   713                           ;doprnt.c: 1262: {
   714                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
   715  0756  0826               	movf	sprintf@ap,w
   716  0757  0084               	movwf	4
   717  0758  1383               	bcf	3,7	;select IRP bank0
   718  0759  0800               	movf	0,w
   719  075A  00A9               	movwf	sprintf@_val
   720  075B  0A84               	incf	4,f
   721  075C  0800               	movf	0,w
   722  075D  00AA               	movwf	sprintf@_val+1
   723  075E  3002               	movlw	2
   724  075F  00A3               	movwf	??_sprintf
   725  0760  0823               	movf	??_sprintf,w
   726  0761  07A6               	addwf	sprintf@ap,f
   727                           
   728                           ;doprnt.c: 1270: if((int)_val._val < 0) {
   729  0762  1FAA               	btfss	sprintf@_val+1,7
   730  0763  2F6D               	goto	l1292
   731                           
   732                           ;doprnt.c: 1271: flag |= 0x03;
   733  0764  3003               	movlw	3
   734  0765  00A3               	movwf	??_sprintf
   735  0766  0823               	movf	??_sprintf,w
   736  0767  04A7               	iorwf	sprintf@flag,f
   737                           
   738                           ;doprnt.c: 1272: _val._val = -_val._val;
   739  0768  09A9               	comf	sprintf@_val,f
   740  0769  09AA               	comf	sprintf@_val+1,f
   741  076A  0AA9               	incf	sprintf@_val,f
   742  076B  1903               	skipnz
   743  076C  0AAA               	incf	sprintf@_val+1,f
   744  076D                     l1292:	
   745                           
   746                           ;doprnt.c: 1273: }
   747                           ;doprnt.c: 1275: }
   748                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
   749  076D  01AE               	clrf	sprintf@c
   750  076E  0AAE               	incf	sprintf@c,f
   751  076F  082E               	movf	sprintf@c,w
   752  0770  3A05               	xorlw	5
   753  0771  1903               	btfsc	3,2
   754  0772  2F94               	goto	l1304
   755  0773                     l1296:	
   756                           
   757                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
   758  0773  082E               	movf	sprintf@c,w
   759  0774  00A3               	movwf	??_sprintf
   760  0775  0723               	addwf	??_sprintf,w
   761  0776  3E01               	addlw	low (_dpowers-__stringbase)
   762  0777  0084               	movwf	4
   763  0778  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
   764  077D  00A4               	movwf	??_sprintf+1
   765  077E  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
   766  0783  00A5               	movwf	??_sprintf+2
   767  0784  0825               	movf	??_sprintf+2,w
   768  0785  022A               	subwf	sprintf@_val+1,w
   769  0786  1D03               	skipz
   770  0787  2F8A               	goto	u775
   771  0788  0824               	movf	??_sprintf+1,w
   772  0789  0229               	subwf	sprintf@_val,w
   773  078A                     u775:	
   774  078A  1C03               	btfss	3,0
   775  078B  2F94               	goto	l1304
   776                           
   777                           ;doprnt.c: 1316: break;
   778  078C  3001               	movlw	1
   779  078D  00A3               	movwf	??_sprintf
   780  078E  0823               	movf	??_sprintf,w
   781  078F  07AE               	addwf	sprintf@c,f
   782  0790  082E               	movf	sprintf@c,w
   783  0791  3A05               	xorlw	5
   784  0792  1D03               	skipz
   785  0793  2F73               	goto	l1296
   786  0794                     l1304:	
   787                           
   788                           ;doprnt.c: 1431: {
   789                           ;doprnt.c: 1447: if(flag & 0x03)
   790  0794  0827               	movf	sprintf@flag,w
   791  0795  3903               	andlw	3
   792  0796  1903               	btfsc	3,2
   793  0797  2FA3               	goto	l1310
   794                           
   795                           ;doprnt.c: 1448: ((*sp++ = ('-')));
   796  0798  302D               	movlw	45
   797  0799  00A3               	movwf	??_sprintf
   798  079A  082D               	movf	sprintf@sp,w
   799  079B  0084               	movwf	4
   800  079C  0823               	movf	??_sprintf,w
   801  079D  1383               	bcf	3,7	;select IRP bank0
   802  079E  0080               	movwf	0
   803  079F  3001               	movlw	1
   804  07A0  00A3               	movwf	??_sprintf
   805  07A1  0823               	movf	??_sprintf,w
   806  07A2  07AD               	addwf	sprintf@sp,f
   807  07A3                     l1310:	
   808                           
   809                           ;doprnt.c: 1478: }
   810                           ;doprnt.c: 1481: prec = c;
   811  07A3  082E               	movf	sprintf@c,w
   812  07A4  00A3               	movwf	??_sprintf
   813  07A5  0823               	movf	??_sprintf,w
   814  07A6  00A8               	movwf	sprintf@prec
   815  07A7                     l1318:	
   816                           ;doprnt.c: 1483: while(prec--) {
   817                           
   818  07A7  30FF               	movlw	-1
   819  07A8  00A3               	movwf	??_sprintf
   820  07A9  0823               	movf	??_sprintf,w
   821  07AA  07A8               	addwf	sprintf@prec,f
   822  07AB  0828               	movf	sprintf@prec,w
   823  07AC  3AFF               	xorlw	-1
   824  07AD  1903               	btfsc	3,2
   825  07AE  2F20               	goto	l1320
   826                           
   827                           ;doprnt.c: 1487: {
   828                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
   829  07AF  300A               	movlw	10
   830  07B0  00F8               	movwf	___lwmod@divisor
   831  07B1  3000               	movlw	0
   832  07B2  00F9               	movwf	___lwmod@divisor+1
   833  07B3  0828               	movf	sprintf@prec,w
   834  07B4  00A3               	movwf	??_sprintf
   835  07B5  0723               	addwf	??_sprintf,w
   836  07B6  3E01               	addlw	low (_dpowers-__stringbase)
   837  07B7  0084               	movwf	4
   838  07B8  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
   839  07BD  00F0               	movwf	___lwdiv@divisor
   840  07BE  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
   841  07C3  00F1               	movwf	___lwdiv@divisor+1
   842  07C4  082A               	movf	sprintf@_val+1,w
   843  07C5  01F3               	clrf	___lwdiv@dividend+1
   844  07C6  07F3               	addwf	___lwdiv@dividend+1,f
   845  07C7  0829               	movf	sprintf@_val,w
   846  07C8  01F2               	clrf	___lwdiv@dividend
   847  07C9  07F2               	addwf	___lwdiv@dividend,f
   848  07CA  120A  118A  239F   	fcall	___lwdiv
      +       120A  118A         
   849  07CF  0871               	movf	?___lwdiv+1,w
   850  07D0  01FB               	clrf	___lwmod@dividend+1
   851  07D1  07FB               	addwf	___lwmod@dividend+1,f
   852  07D2  0870               	movf	?___lwdiv,w
   853  07D3  01FA               	clrf	___lwmod@dividend
   854  07D4  07FA               	addwf	___lwmod@dividend,f
   855  07D5  120A  118A  2335   	fcall	___lwmod
      +       120A  118A         
   856  07DA  0878               	movf	?___lwmod,w
   857  07DB  3E30               	addlw	48
   858  07DC  1283               	bcf	3,5	;RP0=0, select bank0
   859  07DD  1303               	bcf	3,6	;RP1=0, select bank0
   860  07DE  00A4               	movwf	??_sprintf+1
   861  07DF  0824               	movf	??_sprintf+1,w
   862  07E0  00AE               	movwf	sprintf@c
   863                           
   864                           ;doprnt.c: 1532: }
   865                           ;doprnt.c: 1533: ((*sp++ = (c)));
   866  07E1  082E               	movf	sprintf@c,w
   867  07E2  00A3               	movwf	??_sprintf
   868  07E3  082D               	movf	sprintf@sp,w
   869  07E4  0084               	movwf	4
   870  07E5  0823               	movf	??_sprintf,w
   871  07E6  1383               	bcf	3,7	;select IRP bank0
   872  07E7  0080               	movwf	0
   873  07E8  3001               	movlw	1
   874  07E9  00A3               	movwf	??_sprintf
   875  07EA  0823               	movf	??_sprintf,w
   876  07EB  07AD               	addwf	sprintf@sp,f
   877  07EC  2FA7               	goto	l1318
   878  07ED                     l1322:	
   879                           ;doprnt.c: 1534: }
   880                           ;doprnt.c: 1542: }
   881                           ;doprnt.c: 1544: alldone:
   882                           
   883                           
   884                           ;doprnt.c: 1547: *sp = 0;
   885  07ED  082D               	movf	sprintf@sp,w
   886  07EE  0084               	movwf	4
   887  07EF  1383               	bcf	3,7	;select IRP bank0
   888  07F0  0180               	clrf	0
   889  07F1  0008               	return
   890  07F2                     __end_of_sprintf:	
   891                           ;doprnt.c: 1549: return 0;
   892                           ;	Return value of _sprintf is never used
   893                           
   894                           
   895                           	psect	text2
   896  0335                     __ptext2:	
   897 ;; *************** function ___lwmod *****************
   898 ;; Defined at:
   899 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwmod.c"
   900 ;; Parameters:    Size  Location     Type
   901 ;;  divisor         2    8[COMMON] unsigned int 
   902 ;;  dividend        2   10[COMMON] unsigned int 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  counter         1   13[COMMON] unsigned char 
   905 ;; Return value:  Size  Location     Type
   906 ;;                  2    8[COMMON] unsigned int 
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         4       0       0       0       0
   915 ;;      Locals:         1       0       0       0       0
   916 ;;      Temps:          1       0       0       0       0
   917 ;;      Totals:         6       0       0       0       0
   918 ;;Total ram usage:        6 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; This function calls:
   921 ;;		Nothing
   922 ;; This function is called by:
   923 ;;		_sprintf
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927                           
   928                           ;psect for function ___lwmod
   929  0335                     ___lwmod:	
   930                           
   931                           ;incstack = 0
   932                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
   933  0335  0879               	movf	___lwmod@divisor+1,w
   934  0336  0478               	iorwf	___lwmod@divisor,w
   935  0337  1903               	skipnz
   936  0338  2B62               	goto	l1156
   937  0339  01FD               	clrf	___lwmod@counter
   938  033A  0AFD               	incf	___lwmod@counter,f
   939  033B                     l1146:	
   940  033B  1BF9               	btfsc	___lwmod@divisor+1,7
   941  033C  2B49               	goto	l1148
   942  033D  3001               	movlw	1
   943  033E                     u575:	
   944  033E  1003               	clrc
   945  033F  0DF8               	rlf	___lwmod@divisor,f
   946  0340  0DF9               	rlf	___lwmod@divisor+1,f
   947  0341  3EFF               	addlw	-1
   948  0342  1D03               	skipz
   949  0343  2B3E               	goto	u575
   950  0344  3001               	movlw	1
   951  0345  00FC               	movwf	??___lwmod
   952  0346  087C               	movf	??___lwmod,w
   953  0347  07FD               	addwf	___lwmod@counter,f
   954  0348  2B3B               	goto	l1146
   955  0349                     l1148:	
   956  0349  0879               	movf	___lwmod@divisor+1,w
   957  034A  027B               	subwf	___lwmod@dividend+1,w
   958  034B  1D03               	skipz
   959  034C  2B4F               	goto	u595
   960  034D  0878               	movf	___lwmod@divisor,w
   961  034E  027A               	subwf	___lwmod@dividend,w
   962  034F                     u595:	
   963  034F  1C03               	skipc
   964  0350  2B57               	goto	l1152
   965  0351  0878               	movf	___lwmod@divisor,w
   966  0352  02FA               	subwf	___lwmod@dividend,f
   967  0353  0879               	movf	___lwmod@divisor+1,w
   968  0354  1C03               	skipc
   969  0355  03FB               	decf	___lwmod@dividend+1,f
   970  0356  02FB               	subwf	___lwmod@dividend+1,f
   971  0357                     l1152:	
   972  0357  3001               	movlw	1
   973  0358                     u605:	
   974  0358  1003               	clrc
   975  0359  0CF9               	rrf	___lwmod@divisor+1,f
   976  035A  0CF8               	rrf	___lwmod@divisor,f
   977  035B  3EFF               	addlw	-1
   978  035C  1D03               	skipz
   979  035D  2B58               	goto	u605
   980  035E  3001               	movlw	1
   981  035F  02FD               	subwf	___lwmod@counter,f
   982  0360  1D03               	btfss	3,2
   983  0361  2B49               	goto	l1148
   984  0362                     l1156:	
   985  0362  087B               	movf	___lwmod@dividend+1,w
   986  0363  01F9               	clrf	?___lwmod+1
   987  0364  07F9               	addwf	?___lwmod+1,f
   988  0365  087A               	movf	___lwmod@dividend,w
   989  0366  01F8               	clrf	?___lwmod
   990  0367  07F8               	addwf	?___lwmod,f
   991  0368  0008               	return
   992  0369                     __end_of___lwmod:	
   993                           
   994                           	psect	text3
   995  039F                     __ptext3:	
   996 ;; *************** function ___lwdiv *****************
   997 ;; Defined at:
   998 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.30\sources\common\lwdiv.c"
   999 ;; Parameters:    Size  Location     Type
  1000 ;;  divisor         2    0[COMMON] unsigned int 
  1001 ;;  dividend        2    2[COMMON] unsigned int 
  1002 ;; Auto vars:     Size  Location     Type
  1003 ;;  quotient        2    5[COMMON] unsigned int 
  1004 ;;  counter         1    7[COMMON] unsigned char 
  1005 ;; Return value:  Size  Location     Type
  1006 ;;                  2    0[COMMON] unsigned int 
  1007 ;; Registers used:
  1008 ;;		wreg, status,2, status,0
  1009 ;; Tracked objects:
  1010 ;;		On entry : 0/0
  1011 ;;		On exit  : 0/0
  1012 ;;		Unchanged: 0/0
  1013 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1014 ;;      Params:         4       0       0       0       0
  1015 ;;      Locals:         3       0       0       0       0
  1016 ;;      Temps:          1       0       0       0       0
  1017 ;;      Totals:         8       0       0       0       0
  1018 ;;Total ram usage:        8 bytes
  1019 ;; Hardware stack levels used:    1
  1020 ;; This function calls:
  1021 ;;		Nothing
  1022 ;; This function is called by:
  1023 ;;		_sprintf
  1024 ;; This function uses a non-reentrant model
  1025 ;;
  1026                           
  1027                           
  1028                           ;psect for function ___lwdiv
  1029  039F                     ___lwdiv:	
  1030                           
  1031                           ;incstack = 0
  1032                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1033  039F  01F5               	clrf	___lwdiv@quotient
  1034  03A0  01F6               	clrf	___lwdiv@quotient+1
  1035  03A1  0871               	movf	___lwdiv@divisor+1,w
  1036  03A2  0470               	iorwf	___lwdiv@divisor,w
  1037  03A3  1903               	skipnz
  1038  03A4  2BD6               	goto	l1076
  1039  03A5  01F7               	clrf	___lwdiv@counter
  1040  03A6  0AF7               	incf	___lwdiv@counter,f
  1041  03A7                     l1064:	
  1042  03A7  1BF1               	btfsc	___lwdiv@divisor+1,7
  1043  03A8  2BB5               	goto	l1066
  1044  03A9  3001               	movlw	1
  1045  03AA                     u455:	
  1046  03AA  1003               	clrc
  1047  03AB  0DF0               	rlf	___lwdiv@divisor,f
  1048  03AC  0DF1               	rlf	___lwdiv@divisor+1,f
  1049  03AD  3EFF               	addlw	-1
  1050  03AE  1D03               	skipz
  1051  03AF  2BAA               	goto	u455
  1052  03B0  3001               	movlw	1
  1053  03B1  00F4               	movwf	??___lwdiv
  1054  03B2  0874               	movf	??___lwdiv,w
  1055  03B3  07F7               	addwf	___lwdiv@counter,f
  1056  03B4  2BA7               	goto	l1064
  1057  03B5                     l1066:	
  1058  03B5  3001               	movlw	1
  1059  03B6                     u475:	
  1060  03B6  1003               	clrc
  1061  03B7  0DF5               	rlf	___lwdiv@quotient,f
  1062  03B8  0DF6               	rlf	___lwdiv@quotient+1,f
  1063  03B9  3EFF               	addlw	-1
  1064  03BA  1D03               	skipz
  1065  03BB  2BB6               	goto	u475
  1066  03BC  0871               	movf	___lwdiv@divisor+1,w
  1067  03BD  0273               	subwf	___lwdiv@dividend+1,w
  1068  03BE  1D03               	skipz
  1069  03BF  2BC2               	goto	u485
  1070  03C0  0870               	movf	___lwdiv@divisor,w
  1071  03C1  0272               	subwf	___lwdiv@dividend,w
  1072  03C2                     u485:	
  1073  03C2  1C03               	skipc
  1074  03C3  2BCB               	goto	l1072
  1075  03C4  0870               	movf	___lwdiv@divisor,w
  1076  03C5  02F2               	subwf	___lwdiv@dividend,f
  1077  03C6  0871               	movf	___lwdiv@divisor+1,w
  1078  03C7  1C03               	skipc
  1079  03C8  03F3               	decf	___lwdiv@dividend+1,f
  1080  03C9  02F3               	subwf	___lwdiv@dividend+1,f
  1081  03CA  1475               	bsf	___lwdiv@quotient,0
  1082  03CB                     l1072:	
  1083  03CB  3001               	movlw	1
  1084  03CC                     u495:	
  1085  03CC  1003               	clrc
  1086  03CD  0CF1               	rrf	___lwdiv@divisor+1,f
  1087  03CE  0CF0               	rrf	___lwdiv@divisor,f
  1088  03CF  3EFF               	addlw	-1
  1089  03D0  1D03               	skipz
  1090  03D1  2BCC               	goto	u495
  1091  03D2  3001               	movlw	1
  1092  03D3  02F7               	subwf	___lwdiv@counter,f
  1093  03D4  1D03               	btfss	3,2
  1094  03D5  2BB5               	goto	l1066
  1095  03D6                     l1076:	
  1096  03D6  0876               	movf	___lwdiv@quotient+1,w
  1097  03D7  01F1               	clrf	?___lwdiv+1
  1098  03D8  07F1               	addwf	?___lwdiv+1,f
  1099  03D9  0875               	movf	___lwdiv@quotient,w
  1100  03DA  01F0               	clrf	?___lwdiv
  1101  03DB  07F0               	addwf	?___lwdiv,f
  1102  03DC  0008               	return
  1103  03DD                     __end_of___lwdiv:	
  1104                           
  1105                           	psect	text4
  1106  0497                     __ptext4:	
  1107 ;; *************** function _ds_get_temp *****************
  1108 ;; Defined at:
  1109 ;;		line 32 in file "main.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;  temperature     2   21[BANK0 ] int 
  1114 ;;  temp_high       1   20[BANK0 ] unsigned char 
  1115 ;;  temp_low        1   19[BANK0 ] unsigned char 
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  2   15[BANK0 ] int 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       2       0       0       0
  1126 ;;      Locals:         0       4       0       0       0
  1127 ;;      Temps:          0       2       0       0       0
  1128 ;;      Totals:         0       8       0       0       0
  1129 ;;Total ram usage:        8 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    1
  1132 ;; This function calls:
  1133 ;;		_ow_read_byte
  1134 ;;		_ow_reset
  1135 ;;		_ow_write_byte
  1136 ;; This function is called by:
  1137 ;;		_main
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _ds_get_temp
  1143  0497                     _ds_get_temp:	
  1144                           
  1145                           ;main.c: 33: char temp_low;
  1146                           ;main.c: 34: char temp_high;
  1147                           ;main.c: 35: int temperature=0;
  1148                           
  1149                           ;incstack = 0
  1150                           ; Regs used in _ds_get_temp: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1151  0497  1283               	bcf	3,5	;RP0=0, select bank0
  1152  0498  1303               	bcf	3,6	;RP1=0, select bank0
  1153  0499  01B5               	clrf	ds_get_temp@temperature
  1154  049A  01B6               	clrf	ds_get_temp@temperature+1
  1155                           
  1156                           ;main.c: 37: ow_reset();
  1157  049B  120A  118A  22B1   	fcall	_ow_reset
      +       120A  118A         
  1158                           
  1159                           ;main.c: 38: _delay((unsigned long)((300)*(8000000/4000000.0)));
  1160  04A0  30C7               	movlw	199
  1161  04A1  1283               	bcf	3,5	;RP0=0, select bank0
  1162  04A2  1303               	bcf	3,6	;RP1=0, select bank0
  1163  04A3  00B1               	movwf	??_ds_get_temp
  1164  04A4                     u857:	
  1165  04A4  0BB1               	decfsz	??_ds_get_temp,f
  1166  04A5  2CA4               	goto	u857
  1167  04A6  2CA7               	nop2	;nop
  1168                           
  1169                           ;main.c: 39: ow_write_byte(0xCC);
  1170  04A7  30CC               	movlw	204
  1171  04A8  120A  118A  2303   	fcall	_ow_write_byte
      +       120A  118A         
  1172                           
  1173                           ;main.c: 40: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1174  04AD  3006               	movlw	6
  1175  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  1176  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  1177  04B0  00B1               	movwf	??_ds_get_temp
  1178  04B1                     u867:	
  1179  04B1  0BB1               	decfsz	??_ds_get_temp,f
  1180  04B2  2CB1               	goto	u867
  1181  04B3  0000               	nop
  1182                           
  1183                           ;main.c: 41: ow_write_byte(0x44);
  1184  04B4  3044               	movlw	68
  1185  04B5  120A  118A  2303   	fcall	_ow_write_byte
      +       120A  118A         
  1186                           
  1187                           ;main.c: 42: _delay((unsigned long)((255)*(8000000/4000000.0)));
  1188  04BA  30A9               	movlw	169
  1189  04BB  1283               	bcf	3,5	;RP0=0, select bank0
  1190  04BC  1303               	bcf	3,6	;RP1=0, select bank0
  1191  04BD  00B1               	movwf	??_ds_get_temp
  1192  04BE                     u877:	
  1193  04BE  0BB1               	decfsz	??_ds_get_temp,f
  1194  04BF  2CBE               	goto	u877
  1195  04C0  2CC1               	nop2	;nop
  1196                           
  1197                           ;main.c: 43: _delay((unsigned long)((255)*(8000000/4000000.0)));
  1198  04C1  30A9               	movlw	169
  1199  04C2  1283               	bcf	3,5	;RP0=0, select bank0
  1200  04C3  1303               	bcf	3,6	;RP1=0, select bank0
  1201  04C4  00B1               	movwf	??_ds_get_temp
  1202  04C5                     u887:	
  1203  04C5  0BB1               	decfsz	??_ds_get_temp,f
  1204  04C6  2CC5               	goto	u887
  1205  04C7  2CC8               	nop2	;nop
  1206                           
  1207                           ;main.c: 44: _delay((unsigned long)((255)*(8000000/4000000.0)));
  1208  04C8  30A9               	movlw	169
  1209  04C9  1283               	bcf	3,5	;RP0=0, select bank0
  1210  04CA  1303               	bcf	3,6	;RP1=0, select bank0
  1211  04CB  00B1               	movwf	??_ds_get_temp
  1212  04CC                     u897:	
  1213  04CC  0BB1               	decfsz	??_ds_get_temp,f
  1214  04CD  2CCC               	goto	u897
  1215  04CE  2CCF               	nop2	;nop
  1216                           
  1217                           ;main.c: 45: ow_reset();
  1218  04CF  120A  118A  22B1   	fcall	_ow_reset
      +       120A  118A         
  1219                           
  1220                           ;main.c: 46: _delay((unsigned long)((300)*(8000000/4000000.0)));
  1221  04D4  30C7               	movlw	199
  1222  04D5  1283               	bcf	3,5	;RP0=0, select bank0
  1223  04D6  1303               	bcf	3,6	;RP1=0, select bank0
  1224  04D7  00B1               	movwf	??_ds_get_temp
  1225  04D8                     u907:	
  1226  04D8  0BB1               	decfsz	??_ds_get_temp,f
  1227  04D9  2CD8               	goto	u907
  1228  04DA  2CDB               	nop2	;nop
  1229                           
  1230                           ;main.c: 47: ow_write_byte(0xCC);
  1231  04DB  30CC               	movlw	204
  1232  04DC  120A  118A  2303   	fcall	_ow_write_byte
      +       120A  118A         
  1233                           
  1234                           ;main.c: 48: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1235  04E1  3006               	movlw	6
  1236  04E2  1283               	bcf	3,5	;RP0=0, select bank0
  1237  04E3  1303               	bcf	3,6	;RP1=0, select bank0
  1238  04E4  00B1               	movwf	??_ds_get_temp
  1239  04E5                     u917:	
  1240  04E5  0BB1               	decfsz	??_ds_get_temp,f
  1241  04E6  2CE5               	goto	u917
  1242  04E7  0000               	nop
  1243                           
  1244                           ;main.c: 49: ow_write_byte(0xBE);
  1245  04E8  30BE               	movlw	190
  1246  04E9  120A  118A  2303   	fcall	_ow_write_byte
      +       120A  118A         
  1247                           
  1248                           ;main.c: 50: _delay((unsigned long)((10)*(8000000/4000000.0)));
  1249  04EE  3006               	movlw	6
  1250  04EF  1283               	bcf	3,5	;RP0=0, select bank0
  1251  04F0  1303               	bcf	3,6	;RP1=0, select bank0
  1252  04F1  00B1               	movwf	??_ds_get_temp
  1253  04F2                     u927:	
  1254  04F2  0BB1               	decfsz	??_ds_get_temp,f
  1255  04F3  2CF2               	goto	u927
  1256  04F4  0000               	nop
  1257                           
  1258                           ;main.c: 51: temp_low = ow_read_byte();
  1259  04F5  120A  118A  2369   	fcall	_ow_read_byte
      +       120A  118A         
  1260  04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1261  04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1262  04FC  00B1               	movwf	??_ds_get_temp
  1263  04FD  0831               	movf	??_ds_get_temp,w
  1264  04FE  00B3               	movwf	ds_get_temp@temp_low
  1265                           
  1266                           ;main.c: 52: _delay((unsigned long)((1)*(8000000/4000000.0)));
  1267  04FF  2D00               	nop2	;2 cycle nop
  1268                           
  1269                           ;main.c: 53: temp_high = ow_read_byte();
  1270  0500  120A  118A  2369   	fcall	_ow_read_byte
      +       120A  118A         
  1271  0505  1283               	bcf	3,5	;RP0=0, select bank0
  1272  0506  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0507  00B1               	movwf	??_ds_get_temp
  1274  0508  0831               	movf	??_ds_get_temp,w
  1275  0509  00B4               	movwf	ds_get_temp@temp_high
  1276                           
  1277                           ;main.c: 54: ow_reset();
  1278  050A  120A  118A  22B1   	fcall	_ow_reset
  1279                           
  1280                           ;main.c: 55: temperature = temperature | temp_low;
  1281  050D  1283               	bcf	3,5	;RP0=0, select bank0
  1282  050E  1303               	bcf	3,6	;RP1=0, select bank0
  1283  050F  0835               	movf	ds_get_temp@temperature,w
  1284  0510  0433               	iorwf	ds_get_temp@temp_low,w
  1285  0511  00B5               	movwf	ds_get_temp@temperature
  1286  0512  0836               	movf	ds_get_temp@temperature+1,w
  1287  0513  00B6               	movwf	ds_get_temp@temperature+1
  1288                           
  1289                           ;main.c: 56: temperature = temperature | (temp_high << 8);
  1290  0514  0834               	movf	ds_get_temp@temp_high,w
  1291  0515  00B1               	movwf	??_ds_get_temp
  1292  0516  01B2               	clrf	??_ds_get_temp+1
  1293  0517  0831               	movf	??_ds_get_temp,w
  1294  0518  00B2               	movwf	??_ds_get_temp+1
  1295  0519  01B1               	clrf	??_ds_get_temp
  1296  051A  0835               	movf	ds_get_temp@temperature,w
  1297  051B  0431               	iorwf	??_ds_get_temp,w
  1298  051C  00B5               	movwf	ds_get_temp@temperature
  1299  051D  0836               	movf	ds_get_temp@temperature+1,w
  1300  051E  0432               	iorwf	??_ds_get_temp+1,w
  1301  051F  00B6               	movwf	ds_get_temp@temperature+1
  1302                           
  1303                           ;main.c: 57: return temperature;
  1304  0520  0836               	movf	ds_get_temp@temperature+1,w
  1305  0521  01B0               	clrf	?_ds_get_temp+1
  1306  0522  07B0               	addwf	?_ds_get_temp+1,f
  1307  0523  0835               	movf	ds_get_temp@temperature,w
  1308  0524  01AF               	clrf	?_ds_get_temp
  1309  0525  07AF               	addwf	?_ds_get_temp,f
  1310  0526  0008               	return
  1311  0527                     __end_of_ds_get_temp:	
  1312                           
  1313                           	psect	text5
  1314  03DD                     __ptext5:	
  1315 ;; *************** function _Lcd_Out *****************
  1316 ;; Defined at:
  1317 ;;		line 115 in file "HD44780.h"
  1318 ;; Parameters:    Size  Location     Type
  1319 ;;  y               1    wreg     unsigned char 
  1320 ;;  x               1    5[COMMON] unsigned char 
  1321 ;;  buffer          2    6[COMMON] PTR const unsigned char 
  1322 ;;		 -> currentTemp(10), STR_1(17), 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  y               1    9[COMMON] unsigned char 
  1325 ;;  data            1   10[COMMON] unsigned char 
  1326 ;; Return value:  Size  Location     Type
  1327 ;;		None               void
  1328 ;; Registers used:
  1329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         3       0       0       0       0
  1336 ;;      Locals:         2       0       0       0       0
  1337 ;;      Temps:          1       0       0       0       0
  1338 ;;      Totals:         6       0       0       0       0
  1339 ;;Total ram usage:        6 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    2
  1342 ;; This function calls:
  1343 ;;		_Lcd_Chr_CP
  1344 ;;		_Lcd_Cmd
  1345 ;; This function is called by:
  1346 ;;		_main
  1347 ;; This function uses a non-reentrant model
  1348 ;;
  1349                           
  1350                           
  1351                           ;psect for function _Lcd_Out
  1352  03DD                     _Lcd_Out:	
  1353                           
  1354                           ;incstack = 0
  1355                           ; Regs used in _Lcd_Out: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1356                           ;Lcd_Out@y stored from wreg
  1357  03DD  00F9               	movwf	Lcd_Out@y
  1358                           
  1359                           ;HD44780.h: 116: unsigned char data;
  1360                           ;HD44780.h: 117: switch(y){
  1361  03DE  2BEE               	goto	l1392
  1362  03DF                     l1382:	
  1363                           ;HD44780.h: 118: case 1: data = 127 + x; break;
  1364                           
  1365  03DF  0875               	movf	Lcd_Out@x,w
  1366  03E0  3E7F               	addlw	127
  1367  03E1  2BEA               	goto	L3
  1368  03E2                     l1384:	
  1369                           ;HD44780.h: 119: case 2: data = 191 + x; break;
  1370                           
  1371  03E2  0875               	movf	Lcd_Out@x,w
  1372  03E3  3EBF               	addlw	191
  1373  03E4  2BEA               	goto	L3
  1374  03E5                     l1386:	
  1375                           ;HD44780.h: 120: case 3: data = 147 + x; break;
  1376                           
  1377  03E5  0875               	movf	Lcd_Out@x,w
  1378  03E6  3E93               	addlw	147
  1379  03E7  2BEA               	goto	L3
  1380  03E8                     l1388:	
  1381                           ;HD44780.h: 121: case 4: data = 211 + x; break;
  1382                           
  1383  03E8  0875               	movf	Lcd_Out@x,w
  1384  03E9  3ED3               	addlw	211
  1385  03EA                     L3:	
  1386  03EA  00F8               	movwf	??_Lcd_Out
  1387  03EB  0878               	movf	??_Lcd_Out,w
  1388  03EC  00FA               	movwf	Lcd_Out@data
  1389                           
  1390                           ;HD44780.h: 122: default: break;}
  1391  03ED  2BFC               	goto	l1394
  1392  03EE                     l1392:	
  1393  03EE  0879               	movf	Lcd_Out@y,w
  1394                           
  1395                           ; Switch size 1, requested type "space"
  1396                           ; Number of cases is 4, Range of values is 1 to 4
  1397                           ; switch strategies available:
  1398                           ; Name         Instructions Cycles
  1399                           ; simple_byte           13     7 (average)
  1400                           ; direct_byte           23    11 (fixed)
  1401                           ; jumptable            263     9 (fixed)
  1402                           ;	Chosen strategy is simple_byte
  1403  03EF  3A01               	xorlw	1	; case 1
  1404  03F0  1903               	skipnz
  1405  03F1  2BDF               	goto	l1382
  1406  03F2  3A03               	xorlw	3	; case 2
  1407  03F3  1903               	skipnz
  1408  03F4  2BE2               	goto	l1384
  1409  03F5  3A01               	xorlw	1	; case 3
  1410  03F6  1903               	skipnz
  1411  03F7  2BE5               	goto	l1386
  1412  03F8  3A07               	xorlw	7	; case 4
  1413  03F9  1903               	skipnz
  1414  03FA  2BE8               	goto	l1388
  1415  03FB  2BFC               	goto	l1394
  1416  03FC                     l1394:	
  1417                           
  1418                           ;HD44780.h: 123: Lcd_Cmd(data);
  1419  03FC  087A               	movf	Lcd_Out@data,w
  1420  03FD  120A  118A  25C8   	fcall	_Lcd_Cmd
      +       120A  118A         
  1421  0402                     l1400:	
  1422                           ;HD44780.h: 124: while(*buffer)
  1423                           
  1424  0402  0877               	movf	Lcd_Out@buffer+1,w
  1425  0403  1283               	bcf	3,5	;RP0=0, select bank0
  1426  0404  1303               	bcf	3,6	;RP1=0, select bank0
  1427  0405  00FF               	movwf	127
  1428  0406  0876               	movf	Lcd_Out@buffer,w
  1429  0407  0084               	movwf	4
  1430  0408  120A  118A  2003   	fcall	stringtab
      +       120A  118A         
  1431  040D  3800               	iorlw	0
  1432  040E  1903               	btfsc	3,2
  1433  040F  0008               	return
  1434                           
  1435                           ;HD44780.h: 125: {
  1436                           ;HD44780.h: 126: Lcd_Chr_CP(*buffer);
  1437  0410  0877               	movf	Lcd_Out@buffer+1,w
  1438  0411  1283               	bcf	3,5	;RP0=0, select bank0
  1439  0412  1303               	bcf	3,6	;RP1=0, select bank0
  1440  0413  00FF               	movwf	127
  1441  0414  0876               	movf	Lcd_Out@buffer,w
  1442  0415  0084               	movwf	4
  1443  0416  120A  118A  2003   	fcall	stringtab
      +       120A  118A         
  1444  041B  120A  118A  266E   	fcall	_Lcd_Chr_CP
      +       120A  118A         
  1445                           
  1446                           ;HD44780.h: 127: buffer++;
  1447  0420  3001               	movlw	1
  1448  0421  07F6               	addwf	Lcd_Out@buffer,f
  1449  0422  1803               	skipnc
  1450  0423  0AF7               	incf	Lcd_Out@buffer+1,f
  1451  0424  2C02               	goto	l1400
  1452  0425                     __end_of_Lcd_Out:	
  1453                           ;HD44780.h: 128: }
  1454                           ;HD44780.h: 129: return;
  1455                           
  1456                           
  1457                           	psect	text6
  1458  0527                     __ptext6:	
  1459 ;; *************** function _Lcd_Init *****************
  1460 ;; Defined at:
  1461 ;;		line 90 in file "HD44780.h"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;  data            1    6[COMMON] unsigned char 
  1466 ;; Return value:  Size  Location     Type
  1467 ;;		None               void
  1468 ;; Registers used:
  1469 ;;		wreg, status,2, status,0, pclath, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         1       0       0       0       0
  1477 ;;      Temps:          1       0       0       0       0
  1478 ;;      Totals:         2       0       0       0       0
  1479 ;;Total ram usage:        2 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; Hardware stack levels required when called:    2
  1482 ;; This function calls:
  1483 ;;		_Delay_5500us
  1484 ;;		_Delay_5us
  1485 ;;		_Lcd_Cmd
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           
  1492                           ;psect for function _Lcd_Init
  1493  0527                     _Lcd_Init:	
  1494                           
  1495                           ;HD44780.h: 91: unsigned char data;
  1496                           ;HD44780.h: 92: TRISBbits.TRISB3 = 0; TRISBbits.TRISB2 = 0; TRISBbits.TRISB1 = 0; TRISBb
      +                          its.TRISB0 = 0; TRISBbits.TRISB5 = 0; TRISBbits.TRISB4 = 0;
  1497                           
  1498                           ;incstack = 0
  1499                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1500  0527  1683               	bsf	3,5	;RP0=1, select bank1
  1501  0528  1303               	bcf	3,6	;RP1=0, select bank1
  1502  0529  1186               	bcf	6,3	;volatile
  1503  052A  1106               	bcf	6,2	;volatile
  1504  052B  1086               	bcf	6,1	;volatile
  1505  052C  1006               	bcf	6,0	;volatile
  1506  052D  1286               	bcf	6,5	;volatile
  1507  052E  1206               	bcf	6,4	;volatile
  1508                           
  1509                           ;HD44780.h: 93: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 0; PORTBbits.RB0 =
      +                           0; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1510  052F  1283               	bcf	3,5	;RP0=0, select bank0
  1511  0530  1303               	bcf	3,6	;RP1=0, select bank0
  1512  0531  1186               	bcf	6,3	;volatile
  1513  0532  1106               	bcf	6,2	;volatile
  1514  0533  1086               	bcf	6,1	;volatile
  1515  0534  1006               	bcf	6,0	;volatile
  1516  0535  1286               	bcf	6,5	;volatile
  1517  0536  1206               	bcf	6,4	;volatile
  1518                           
  1519                           ;HD44780.h: 94: Delay_5500us(); Delay_5500us(); Delay_5500us();
  1520  0537  120A  118A  22A7   	fcall	_Delay_5500us
      +       120A  118A         
  1521  053C  120A  118A  22A7   	fcall	_Delay_5500us
      +       120A  118A         
  1522  0541  120A  118A  22A7   	fcall	_Delay_5500us
      +       120A  118A         
  1523                           
  1524                           ;HD44780.h: 95: Delay_5500us(); Delay_5500us(); Delay_5500us();
  1525  0546  120A  118A  22A7   	fcall	_Delay_5500us
      +       120A  118A         
  1526  054B  120A  118A  22A7   	fcall	_Delay_5500us
      +       120A  118A         
  1527  0550  120A  118A  22A7   	fcall	_Delay_5500us
      +       120A  118A         
  1528                           
  1529                           ;HD44780.h: 96: for(data = 1; data < 4; data ++)
  1530  0555  01F6               	clrf	Lcd_Init@data
  1531  0556  0AF6               	incf	Lcd_Init@data,f
  1532  0557  3004               	movlw	4
  1533  0558  0276               	subwf	Lcd_Init@data,w
  1534  0559  1803               	btfsc	3,0
  1535  055A  2D83               	goto	l30
  1536  055B                     l29:	
  1537                           
  1538                           ;HD44780.h: 97: {
  1539                           ;HD44780.h: 98: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 =
      +                           1; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1540  055B  1283               	bcf	3,5	;RP0=0, select bank0
  1541  055C  1303               	bcf	3,6	;RP1=0, select bank0
  1542  055D  1186               	bcf	6,3	;volatile
  1543  055E  1106               	bcf	6,2	;volatile
  1544  055F  1486               	bsf	6,1	;volatile
  1545  0560  1406               	bsf	6,0	;volatile
  1546  0561  1286               	bcf	6,5	;volatile
  1547  0562  1206               	bcf	6,4	;volatile
  1548                           
  1549                           ;HD44780.h: 99: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 =
      +                           1; PORTBbits.RB5 = 1; PORTBbits.RB4 = 0;
  1550  0563  1186               	bcf	6,3	;volatile
  1551  0564  1106               	bcf	6,2	;volatile
  1552  0565  1486               	bsf	6,1	;volatile
  1553  0566  1406               	bsf	6,0	;volatile
  1554  0567  1686               	bsf	6,5	;volatile
  1555  0568  1206               	bcf	6,4	;volatile
  1556                           
  1557                           ;HD44780.h: 100: Delay_5us();
  1558  0569  120A  118A  229E   	fcall	_Delay_5us
      +       120A  118A         
  1559                           
  1560                           ;HD44780.h: 101: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 
      +                          = 1; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1561  056E  1283               	bcf	3,5	;RP0=0, select bank0
  1562  056F  1303               	bcf	3,6	;RP1=0, select bank0
  1563  0570  1186               	bcf	6,3	;volatile
  1564  0571  1106               	bcf	6,2	;volatile
  1565  0572  1486               	bsf	6,1	;volatile
  1566  0573  1406               	bsf	6,0	;volatile
  1567  0574  1286               	bcf	6,5	;volatile
  1568  0575  1206               	bcf	6,4	;volatile
  1569                           
  1570                           ;HD44780.h: 102: Delay_5500us();
  1571  0576  120A  118A  22A7   	fcall	_Delay_5500us
      +       120A  118A         
  1572  057B  3001               	movlw	1
  1573  057C  00F5               	movwf	??_Lcd_Init
  1574  057D  0875               	movf	??_Lcd_Init,w
  1575  057E  07F6               	addwf	Lcd_Init@data,f
  1576  057F  3004               	movlw	4
  1577  0580  0276               	subwf	Lcd_Init@data,w
  1578  0581  1C03               	skipc
  1579  0582  2D5B               	goto	l29
  1580  0583                     l30:	
  1581                           
  1582                           ;HD44780.h: 103: }
  1583                           ;HD44780.h: 104: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 
      +                          = 0; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1584  0583  1283               	bcf	3,5	;RP0=0, select bank0
  1585  0584  1303               	bcf	3,6	;RP1=0, select bank0
  1586  0585  1186               	bcf	6,3	;volatile
  1587  0586  1106               	bcf	6,2	;volatile
  1588  0587  1486               	bsf	6,1	;volatile
  1589  0588  1006               	bcf	6,0	;volatile
  1590  0589  1286               	bcf	6,5	;volatile
  1591  058A  1206               	bcf	6,4	;volatile
  1592                           
  1593                           ;HD44780.h: 105: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 
      +                          = 0; PORTBbits.RB5 = 1; PORTBbits.RB4 = 0;
  1594  058B  1186               	bcf	6,3	;volatile
  1595  058C  1106               	bcf	6,2	;volatile
  1596  058D  1486               	bsf	6,1	;volatile
  1597  058E  1006               	bcf	6,0	;volatile
  1598  058F  1686               	bsf	6,5	;volatile
  1599  0590  1206               	bcf	6,4	;volatile
  1600                           
  1601                           ;HD44780.h: 106: Delay_5us();
  1602  0591  120A  118A  229E   	fcall	_Delay_5us
      +       120A  118A         
  1603                           
  1604                           ;HD44780.h: 107: PORTBbits.RB3 = 0; PORTBbits.RB2 = 0; PORTBbits.RB1 = 1; PORTBbits.RB0 
      +                          = 0; PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1605  0596  1283               	bcf	3,5	;RP0=0, select bank0
  1606  0597  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0598  1186               	bcf	6,3	;volatile
  1608  0599  1106               	bcf	6,2	;volatile
  1609  059A  1486               	bsf	6,1	;volatile
  1610  059B  1006               	bcf	6,0	;volatile
  1611  059C  1286               	bcf	6,5	;volatile
  1612  059D  1206               	bcf	6,4	;volatile
  1613                           
  1614                           ;HD44780.h: 108: Delay_5500us();
  1615  059E  120A  118A  22A7   	fcall	_Delay_5500us
      +       120A  118A         
  1616                           
  1617                           ;HD44780.h: 109: data = 40; Lcd_Cmd(data);
  1618  05A3  3028               	movlw	40
  1619  05A4  00F5               	movwf	??_Lcd_Init
  1620  05A5  0875               	movf	??_Lcd_Init,w
  1621  05A6  00F6               	movwf	Lcd_Init@data
  1622  05A7  0876               	movf	Lcd_Init@data,w
  1623  05A8  120A  118A  25C8   	fcall	_Lcd_Cmd
      +       120A  118A         
  1624                           
  1625                           ;HD44780.h: 110: data = 16; Lcd_Cmd(data);
  1626  05AD  3010               	movlw	16
  1627  05AE  00F5               	movwf	??_Lcd_Init
  1628  05AF  0875               	movf	??_Lcd_Init,w
  1629  05B0  00F6               	movwf	Lcd_Init@data
  1630  05B1  0876               	movf	Lcd_Init@data,w
  1631  05B2  120A  118A  25C8   	fcall	_Lcd_Cmd
      +       120A  118A         
  1632                           
  1633                           ;HD44780.h: 111: data = 1; Lcd_Cmd(data);
  1634  05B7  01F6               	clrf	Lcd_Init@data
  1635  05B8  0AF6               	incf	Lcd_Init@data,f
  1636  05B9  0876               	movf	Lcd_Init@data,w
  1637  05BA  120A  118A  25C8   	fcall	_Lcd_Cmd
      +       120A  118A         
  1638                           
  1639                           ;HD44780.h: 112: data = 15; Lcd_Cmd(data);
  1640  05BF  300F               	movlw	15
  1641  05C0  00F5               	movwf	??_Lcd_Init
  1642  05C1  0875               	movf	??_Lcd_Init,w
  1643  05C2  00F6               	movwf	Lcd_Init@data
  1644  05C3  0876               	movf	Lcd_Init@data,w
  1645  05C4  120A  118A  25C8   	fcall	_Lcd_Cmd
  1646  05C7  0008               	return
  1647  05C8                     __end_of_Lcd_Init:	
  1648                           
  1649                           	psect	text7
  1650  02D9                     __ptext7:	
  1651 ;; *************** function _Lcd_Chr *****************
  1652 ;; Defined at:
  1653 ;;		line 149 in file "HD44780.h"
  1654 ;; Parameters:    Size  Location     Type
  1655 ;;  y               1    wreg     unsigned char 
  1656 ;;  x               1    5[COMMON] unsigned char 
  1657 ;;  Chr             1    6[COMMON] unsigned char 
  1658 ;; Auto vars:     Size  Location     Type
  1659 ;;  y               1    8[COMMON] unsigned char 
  1660 ;;  data            1    9[COMMON] unsigned char 
  1661 ;; Return value:  Size  Location     Type
  1662 ;;		None               void
  1663 ;; Registers used:
  1664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1665 ;; Tracked objects:
  1666 ;;		On entry : 0/0
  1667 ;;		On exit  : 0/0
  1668 ;;		Unchanged: 0/0
  1669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1670 ;;      Params:         2       0       0       0       0
  1671 ;;      Locals:         2       0       0       0       0
  1672 ;;      Temps:          1       0       0       0       0
  1673 ;;      Totals:         5       0       0       0       0
  1674 ;;Total ram usage:        5 bytes
  1675 ;; Hardware stack levels used:    1
  1676 ;; Hardware stack levels required when called:    2
  1677 ;; This function calls:
  1678 ;;		_Lcd_Chr_CP
  1679 ;;		_Lcd_Cmd
  1680 ;; This function is called by:
  1681 ;;		_main
  1682 ;; This function uses a non-reentrant model
  1683 ;;
  1684                           
  1685                           
  1686                           ;psect for function _Lcd_Chr
  1687  02D9                     _Lcd_Chr:	
  1688                           
  1689                           ;incstack = 0
  1690                           ; Regs used in _Lcd_Chr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1691                           ;Lcd_Chr@y stored from wreg
  1692  02D9  00F8               	movwf	Lcd_Chr@y
  1693                           
  1694                           ;HD44780.h: 150: unsigned char data;
  1695                           ;HD44780.h: 151: switch(y){
  1696  02DA  2AEA               	goto	l1414
  1697  02DB                     l1404:	
  1698                           ;HD44780.h: 152: case 1: data = 127 + x; break;
  1699                           
  1700  02DB  0875               	movf	Lcd_Chr@x,w
  1701  02DC  3E7F               	addlw	127
  1702  02DD  2AE6               	goto	L6
  1703  02DE                     l1406:	
  1704                           ;HD44780.h: 153: case 2: data = 191 + x; break;
  1705                           
  1706  02DE  0875               	movf	Lcd_Chr@x,w
  1707  02DF  3EBF               	addlw	191
  1708  02E0  2AE6               	goto	L6
  1709  02E1                     l1408:	
  1710                           ;HD44780.h: 154: case 3: data = 147 + x; break;
  1711                           
  1712  02E1  0875               	movf	Lcd_Chr@x,w
  1713  02E2  3E93               	addlw	147
  1714  02E3  2AE6               	goto	L6
  1715  02E4                     l1410:	
  1716                           ;HD44780.h: 155: case 4: data = 211 + x; break;
  1717                           
  1718  02E4  0875               	movf	Lcd_Chr@x,w
  1719  02E5  3ED3               	addlw	211
  1720  02E6                     L6:	
  1721  02E6  00F7               	movwf	??_Lcd_Chr
  1722  02E7  0877               	movf	??_Lcd_Chr,w
  1723  02E8  00F9               	movwf	Lcd_Chr@data
  1724                           
  1725                           ;HD44780.h: 156: default: break;}
  1726  02E9  2AF8               	goto	l1416
  1727  02EA                     l1414:	
  1728  02EA  0878               	movf	Lcd_Chr@y,w
  1729                           
  1730                           ; Switch size 1, requested type "space"
  1731                           ; Number of cases is 4, Range of values is 1 to 4
  1732                           ; switch strategies available:
  1733                           ; Name         Instructions Cycles
  1734                           ; simple_byte           13     7 (average)
  1735                           ; direct_byte           23    11 (fixed)
  1736                           ; jumptable            263     9 (fixed)
  1737                           ;	Chosen strategy is simple_byte
  1738  02EB  3A01               	xorlw	1	; case 1
  1739  02EC  1903               	skipnz
  1740  02ED  2ADB               	goto	l1404
  1741  02EE  3A03               	xorlw	3	; case 2
  1742  02EF  1903               	skipnz
  1743  02F0  2ADE               	goto	l1406
  1744  02F1  3A01               	xorlw	1	; case 3
  1745  02F2  1903               	skipnz
  1746  02F3  2AE1               	goto	l1408
  1747  02F4  3A07               	xorlw	7	; case 4
  1748  02F5  1903               	skipnz
  1749  02F6  2AE4               	goto	l1410
  1750  02F7  2AF8               	goto	l1416
  1751  02F8                     l1416:	
  1752                           
  1753                           ;HD44780.h: 157: Lcd_Cmd(data);
  1754  02F8  0879               	movf	Lcd_Chr@data,w
  1755  02F9  120A  118A  25C8   	fcall	_Lcd_Cmd
      +       120A  118A         
  1756                           
  1757                           ;HD44780.h: 158: Lcd_Chr_CP(Chr);
  1758  02FE  0876               	movf	Lcd_Chr@Chr,w
  1759  02FF  120A  118A  266E   	fcall	_Lcd_Chr_CP
  1760  0302  0008               	return
  1761  0303                     __end_of_Lcd_Chr:	
  1762                           
  1763                           	psect	text8
  1764  05C8                     __ptext8:	
  1765 ;; *************** function _Lcd_Cmd *****************
  1766 ;; Defined at:
  1767 ;;		line 174 in file "HD44780.h"
  1768 ;; Parameters:    Size  Location     Type
  1769 ;;  Cmd             1    wreg     unsigned char 
  1770 ;; Auto vars:     Size  Location     Type
  1771 ;;  Cmd             1    4[COMMON] unsigned char 
  1772 ;; Return value:  Size  Location     Type
  1773 ;;		None               void
  1774 ;; Registers used:
  1775 ;;		wreg, status,2, status,0, pclath, cstack
  1776 ;; Tracked objects:
  1777 ;;		On entry : 0/0
  1778 ;;		On exit  : 0/0
  1779 ;;		Unchanged: 0/0
  1780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1781 ;;      Params:         0       0       0       0       0
  1782 ;;      Locals:         1       0       0       0       0
  1783 ;;      Temps:          2       0       0       0       0
  1784 ;;      Totals:         3       0       0       0       0
  1785 ;;Total ram usage:        3 bytes
  1786 ;; Hardware stack levels used:    1
  1787 ;; Hardware stack levels required when called:    1
  1788 ;; This function calls:
  1789 ;;		_Delay_5500us
  1790 ;;		_Delay_5us
  1791 ;; This function is called by:
  1792 ;;		_Lcd_Init
  1793 ;;		_Lcd_Out
  1794 ;;		_Lcd_Chr
  1795 ;;		_main
  1796 ;;		_Lcd_Out2
  1797 ;; This function uses a non-reentrant model
  1798 ;;
  1799                           
  1800                           
  1801                           ;psect for function _Lcd_Cmd
  1802  05C8                     _Lcd_Cmd:	
  1803                           
  1804                           ;incstack = 0
  1805                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1806                           ;Lcd_Cmd@Cmd stored from wreg
  1807  05C8  00F4               	movwf	Lcd_Cmd@Cmd
  1808                           
  1809                           ;HD44780.h: 175: PORTBbits.RB5 = 0; PORTBbits.RB4 = 0;
  1810  05C9  1283               	bcf	3,5	;RP0=0, select bank0
  1811  05CA  1303               	bcf	3,6	;RP1=0, select bank0
  1812  05CB  1286               	bcf	6,5	;volatile
  1813  05CC  1206               	bcf	6,4	;volatile
  1814                           
  1815                           ;HD44780.h: 176: PORTBbits.RB3 = (Cmd & 0b10000000)>>7; PORTBbits.RB2 = (Cmd& 0b01000000
      +                          )>>6;
  1816  05CD  0874               	movf	Lcd_Cmd@Cmd,w
  1817  05CE  00F2               	movwf	??_Lcd_Cmd
  1818  05CF  3007               	movlw	7
  1819  05D0                     u625:	
  1820  05D0  1003               	clrc
  1821  05D1  0CF2               	rrf	??_Lcd_Cmd,f
  1822  05D2  3EFF               	addlw	-1
  1823  05D3  1D03               	skipz
  1824  05D4  2DD0               	goto	u625
  1825  05D5  0872               	movf	??_Lcd_Cmd,w
  1826  05D6  3901               	andlw	1
  1827  05D7  00F3               	movwf	??_Lcd_Cmd+1
  1828  05D8  0DF3               	rlf	??_Lcd_Cmd+1,f
  1829  05D9  0DF3               	rlf	??_Lcd_Cmd+1,f
  1830  05DA  0DF3               	rlf	??_Lcd_Cmd+1,f
  1831  05DB  0806               	movf	6,w	;volatile
  1832  05DC  0673               	xorwf	??_Lcd_Cmd+1,w
  1833  05DD  39F7               	andlw	-9
  1834  05DE  0673               	xorwf	??_Lcd_Cmd+1,w
  1835  05DF  0086               	movwf	6	;volatile
  1836  05E0  0874               	movf	Lcd_Cmd@Cmd,w
  1837  05E1  00F2               	movwf	??_Lcd_Cmd
  1838  05E2  3006               	movlw	6
  1839  05E3                     u635:	
  1840  05E3  1003               	clrc
  1841  05E4  0CF2               	rrf	??_Lcd_Cmd,f
  1842  05E5  3EFF               	addlw	-1
  1843  05E6  1D03               	skipz
  1844  05E7  2DE3               	goto	u635
  1845  05E8  0872               	movf	??_Lcd_Cmd,w
  1846  05E9  3901               	andlw	1
  1847  05EA  00F3               	movwf	??_Lcd_Cmd+1
  1848  05EB  0DF3               	rlf	??_Lcd_Cmd+1,f
  1849  05EC  0DF3               	rlf	??_Lcd_Cmd+1,f
  1850  05ED  0806               	movf	6,w	;volatile
  1851  05EE  0673               	xorwf	??_Lcd_Cmd+1,w
  1852  05EF  39FB               	andlw	-5
  1853  05F0  0673               	xorwf	??_Lcd_Cmd+1,w
  1854  05F1  0086               	movwf	6	;volatile
  1855                           
  1856                           ;HD44780.h: 177: PORTBbits.RB1 = (Cmd & 0b00100000)>>5; PORTBbits.RB0 = (Cmd & 0b0001000
      +                          0)>>4;
  1857  05F2  0874               	movf	Lcd_Cmd@Cmd,w
  1858  05F3  00F2               	movwf	??_Lcd_Cmd
  1859  05F4  3005               	movlw	5
  1860  05F5                     u645:	
  1861  05F5  1003               	clrc
  1862  05F6  0CF2               	rrf	??_Lcd_Cmd,f
  1863  05F7  3EFF               	addlw	-1
  1864  05F8  1D03               	skipz
  1865  05F9  2DF5               	goto	u645
  1866  05FA  0872               	movf	??_Lcd_Cmd,w
  1867  05FB  3901               	andlw	1
  1868  05FC  00F3               	movwf	??_Lcd_Cmd+1
  1869  05FD  0DF3               	rlf	??_Lcd_Cmd+1,f
  1870  05FE  0806               	movf	6,w	;volatile
  1871  05FF  0673               	xorwf	??_Lcd_Cmd+1,w
  1872  0600  39FD               	andlw	-3
  1873  0601  0673               	xorwf	??_Lcd_Cmd+1,w
  1874  0602  0086               	movwf	6	;volatile
  1875  0603  0874               	movf	Lcd_Cmd@Cmd,w
  1876  0604  00F2               	movwf	??_Lcd_Cmd
  1877  0605  3004               	movlw	4
  1878  0606                     u655:	
  1879  0606  1003               	clrc
  1880  0607  0CF2               	rrf	??_Lcd_Cmd,f
  1881  0608  3EFF               	addlw	-1
  1882  0609  1D03               	skipz
  1883  060A  2E06               	goto	u655
  1884  060B  3001               	movlw	1
  1885  060C  0572               	andwf	??_Lcd_Cmd,w
  1886  060D  00F3               	movwf	??_Lcd_Cmd+1
  1887  060E  0806               	movf	6,w	;volatile
  1888  060F  0673               	xorwf	??_Lcd_Cmd+1,w
  1889  0610  39FE               	andlw	-2
  1890  0611  0673               	xorwf	??_Lcd_Cmd+1,w
  1891  0612  0086               	movwf	6	;volatile
  1892                           
  1893                           ;HD44780.h: 178: _delay(10);
  1894  0613  3003               	movlw	3
  1895  0614  00F2               	movwf	??_Lcd_Cmd
  1896  0615                     u937:	
  1897  0615  0BF2               	decfsz	??_Lcd_Cmd,f
  1898  0616  2E15               	goto	u937
  1899                           
  1900                           ;HD44780.h: 179: PORTBbits.RB5 = 1; Delay_5us(); PORTBbits.RB5 = 0;
  1901  0617  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0618  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0619  1686               	bsf	6,5	;volatile
  1904  061A  120A  118A  229E   	fcall	_Delay_5us
      +       120A  118A         
  1905  061F  1283               	bcf	3,5	;RP0=0, select bank0
  1906  0620  1303               	bcf	3,6	;RP1=0, select bank0
  1907  0621  1286               	bcf	6,5	;volatile
  1908                           
  1909                           ;HD44780.h: 180: PORTBbits.RB3 = (Cmd & 0b00001000)>>3; PORTBbits.RB2 = (Cmd & 0b0000010
      +                          0)>>2;
  1910  0622  0874               	movf	Lcd_Cmd@Cmd,w
  1911  0623  00F2               	movwf	??_Lcd_Cmd
  1912  0624  3003               	movlw	3
  1913  0625                     u665:	
  1914  0625  1003               	clrc
  1915  0626  0CF2               	rrf	??_Lcd_Cmd,f
  1916  0627  3EFF               	addlw	-1
  1917  0628  1D03               	skipz
  1918  0629  2E25               	goto	u665
  1919  062A  0872               	movf	??_Lcd_Cmd,w
  1920  062B  3901               	andlw	1
  1921  062C  00F3               	movwf	??_Lcd_Cmd+1
  1922  062D  0DF3               	rlf	??_Lcd_Cmd+1,f
  1923  062E  0DF3               	rlf	??_Lcd_Cmd+1,f
  1924  062F  0DF3               	rlf	??_Lcd_Cmd+1,f
  1925  0630  0806               	movf	6,w	;volatile
  1926  0631  0673               	xorwf	??_Lcd_Cmd+1,w
  1927  0632  39F7               	andlw	-9
  1928  0633  0673               	xorwf	??_Lcd_Cmd+1,w
  1929  0634  0086               	movwf	6	;volatile
  1930  0635  0874               	movf	Lcd_Cmd@Cmd,w
  1931  0636  00F2               	movwf	??_Lcd_Cmd
  1932  0637  3002               	movlw	2
  1933  0638                     u675:	
  1934  0638  1003               	clrc
  1935  0639  0CF2               	rrf	??_Lcd_Cmd,f
  1936  063A  3EFF               	addlw	-1
  1937  063B  1D03               	skipz
  1938  063C  2E38               	goto	u675
  1939  063D  0872               	movf	??_Lcd_Cmd,w
  1940  063E  3901               	andlw	1
  1941  063F  00F3               	movwf	??_Lcd_Cmd+1
  1942  0640  0DF3               	rlf	??_Lcd_Cmd+1,f
  1943  0641  0DF3               	rlf	??_Lcd_Cmd+1,f
  1944  0642  0806               	movf	6,w	;volatile
  1945  0643  0673               	xorwf	??_Lcd_Cmd+1,w
  1946  0644  39FB               	andlw	-5
  1947  0645  0673               	xorwf	??_Lcd_Cmd+1,w
  1948  0646  0086               	movwf	6	;volatile
  1949                           
  1950                           ;HD44780.h: 181: PORTBbits.RB1 = (Cmd & 0b00000010)>>1; PORTBbits.RB0 = (Cmd & 0b0000000
      +                          1);
  1951  0647  0874               	movf	Lcd_Cmd@Cmd,w
  1952  0648  00F2               	movwf	??_Lcd_Cmd
  1953  0649  1003               	clrc
  1954  064A  0C72               	rrf	??_Lcd_Cmd,w
  1955  064B  3901               	andlw	1
  1956  064C  00F3               	movwf	??_Lcd_Cmd+1
  1957  064D  0DF3               	rlf	??_Lcd_Cmd+1,f
  1958  064E  0806               	movf	6,w	;volatile
  1959  064F  0673               	xorwf	??_Lcd_Cmd+1,w
  1960  0650  39FD               	andlw	-3
  1961  0651  0673               	xorwf	??_Lcd_Cmd+1,w
  1962  0652  0086               	movwf	6	;volatile
  1963  0653  3001               	movlw	1
  1964  0654  0574               	andwf	Lcd_Cmd@Cmd,w
  1965  0655  00F2               	movwf	??_Lcd_Cmd
  1966  0656  0806               	movf	6,w	;volatile
  1967  0657  0672               	xorwf	??_Lcd_Cmd,w
  1968  0658  39FE               	andlw	-2
  1969  0659  0672               	xorwf	??_Lcd_Cmd,w
  1970  065A  0086               	movwf	6	;volatile
  1971                           
  1972                           ;HD44780.h: 182: _delay(10);
  1973  065B  3003               	movlw	3
  1974  065C  00F2               	movwf	??_Lcd_Cmd
  1975  065D                     u947:	
  1976  065D  0BF2               	decfsz	??_Lcd_Cmd,f
  1977  065E  2E5D               	goto	u947
  1978                           
  1979                           ;HD44780.h: 183: PORTBbits.RB5 = 1; Delay_5us(); PORTBbits.RB5 = 0;
  1980  065F  1283               	bcf	3,5	;RP0=0, select bank0
  1981  0660  1303               	bcf	3,6	;RP1=0, select bank0
  1982  0661  1686               	bsf	6,5	;volatile
  1983  0662  120A  118A  229E   	fcall	_Delay_5us
      +       120A  118A         
  1984  0667  1283               	bcf	3,5	;RP0=0, select bank0
  1985  0668  1303               	bcf	3,6	;RP1=0, select bank0
  1986  0669  1286               	bcf	6,5	;volatile
  1987                           
  1988                           ;HD44780.h: 184: Delay_5500us();
  1989  066A  120A  118A  22A7   	fcall	_Delay_5500us
  1990  066D  0008               	return
  1991  066E                     __end_of_Lcd_Cmd:	
  1992                           
  1993                           	psect	text9
  1994  066E                     __ptext9:	
  1995 ;; *************** function _Lcd_Chr_CP *****************
  1996 ;; Defined at:
  1997 ;;		line 161 in file "HD44780.h"
  1998 ;; Parameters:    Size  Location     Type
  1999 ;;  Chr_CP          1    wreg     unsigned char 
  2000 ;; Auto vars:     Size  Location     Type
  2001 ;;  Chr_CP          1    4[COMMON] unsigned char 
  2002 ;; Return value:  Size  Location     Type
  2003 ;;		None               void
  2004 ;; Registers used:
  2005 ;;		wreg, status,2, status,0, pclath, cstack
  2006 ;; Tracked objects:
  2007 ;;		On entry : 0/0
  2008 ;;		On exit  : 0/0
  2009 ;;		Unchanged: 0/0
  2010 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2011 ;;      Params:         0       0       0       0       0
  2012 ;;      Locals:         1       0       0       0       0
  2013 ;;      Temps:          2       0       0       0       0
  2014 ;;      Totals:         3       0       0       0       0
  2015 ;;Total ram usage:        3 bytes
  2016 ;; Hardware stack levels used:    1
  2017 ;; Hardware stack levels required when called:    1
  2018 ;; This function calls:
  2019 ;;		_Delay_5500us
  2020 ;;		_Delay_5us
  2021 ;; This function is called by:
  2022 ;;		_Lcd_Out
  2023 ;;		_Lcd_Chr
  2024 ;;		_Lcd_Out2
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           
  2029                           ;psect for function _Lcd_Chr_CP
  2030  066E                     _Lcd_Chr_CP:	
  2031                           
  2032                           ;incstack = 0
  2033                           ; Regs used in _Lcd_Chr_CP: [wreg+status,2+status,0+pclath+cstack]
  2034                           ;Lcd_Chr_CP@Chr_CP stored from wreg
  2035  066E  00F4               	movwf	Lcd_Chr_CP@Chr_CP
  2036                           
  2037                           ;HD44780.h: 162: PORTBbits.RB5 = 0; PORTBbits.RB4 = 1;
  2038  066F  1283               	bcf	3,5	;RP0=0, select bank0
  2039  0670  1303               	bcf	3,6	;RP1=0, select bank0
  2040  0671  1286               	bcf	6,5	;volatile
  2041  0672  1606               	bsf	6,4	;volatile
  2042                           
  2043                           ;HD44780.h: 163: PORTBbits.RB3 = (Chr_CP & 0b10000000)>>7; PORTBbits.RB2 = (Chr_CP & 0b0
      +                          1000000)>>6;
  2044  0673  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2045  0674  00F2               	movwf	??_Lcd_Chr_CP
  2046  0675  3007               	movlw	7
  2047  0676                     u685:	
  2048  0676  1003               	clrc
  2049  0677  0CF2               	rrf	??_Lcd_Chr_CP,f
  2050  0678  3EFF               	addlw	-1
  2051  0679  1D03               	skipz
  2052  067A  2E76               	goto	u685
  2053  067B  0872               	movf	??_Lcd_Chr_CP,w
  2054  067C  3901               	andlw	1
  2055  067D  00F3               	movwf	??_Lcd_Chr_CP+1
  2056  067E  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2057  067F  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2058  0680  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2059  0681  0806               	movf	6,w	;volatile
  2060  0682  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2061  0683  39F7               	andlw	-9
  2062  0684  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2063  0685  0086               	movwf	6	;volatile
  2064  0686  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2065  0687  00F2               	movwf	??_Lcd_Chr_CP
  2066  0688  3006               	movlw	6
  2067  0689                     u695:	
  2068  0689  1003               	clrc
  2069  068A  0CF2               	rrf	??_Lcd_Chr_CP,f
  2070  068B  3EFF               	addlw	-1
  2071  068C  1D03               	skipz
  2072  068D  2E89               	goto	u695
  2073  068E  0872               	movf	??_Lcd_Chr_CP,w
  2074  068F  3901               	andlw	1
  2075  0690  00F3               	movwf	??_Lcd_Chr_CP+1
  2076  0691  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2077  0692  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2078  0693  0806               	movf	6,w	;volatile
  2079  0694  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2080  0695  39FB               	andlw	-5
  2081  0696  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2082  0697  0086               	movwf	6	;volatile
  2083                           
  2084                           ;HD44780.h: 164: PORTBbits.RB1 = (Chr_CP & 0b00100000)>>5; PORTBbits.RB0 = (Chr_CP & 0b0
      +                          0010000)>>4;
  2085  0698  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2086  0699  00F2               	movwf	??_Lcd_Chr_CP
  2087  069A  3005               	movlw	5
  2088  069B                     u705:	
  2089  069B  1003               	clrc
  2090  069C  0CF2               	rrf	??_Lcd_Chr_CP,f
  2091  069D  3EFF               	addlw	-1
  2092  069E  1D03               	skipz
  2093  069F  2E9B               	goto	u705
  2094  06A0  0872               	movf	??_Lcd_Chr_CP,w
  2095  06A1  3901               	andlw	1
  2096  06A2  00F3               	movwf	??_Lcd_Chr_CP+1
  2097  06A3  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2098  06A4  0806               	movf	6,w	;volatile
  2099  06A5  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2100  06A6  39FD               	andlw	-3
  2101  06A7  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2102  06A8  0086               	movwf	6	;volatile
  2103  06A9  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2104  06AA  00F2               	movwf	??_Lcd_Chr_CP
  2105  06AB  3004               	movlw	4
  2106  06AC                     u715:	
  2107  06AC  1003               	clrc
  2108  06AD  0CF2               	rrf	??_Lcd_Chr_CP,f
  2109  06AE  3EFF               	addlw	-1
  2110  06AF  1D03               	skipz
  2111  06B0  2EAC               	goto	u715
  2112  06B1  3001               	movlw	1
  2113  06B2  0572               	andwf	??_Lcd_Chr_CP,w
  2114  06B3  00F3               	movwf	??_Lcd_Chr_CP+1
  2115  06B4  0806               	movf	6,w	;volatile
  2116  06B5  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2117  06B6  39FE               	andlw	-2
  2118  06B7  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2119  06B8  0086               	movwf	6	;volatile
  2120                           
  2121                           ;HD44780.h: 165: _delay(10);
  2122  06B9  3003               	movlw	3
  2123  06BA  00F2               	movwf	??_Lcd_Chr_CP
  2124  06BB                     u957:	
  2125  06BB  0BF2               	decfsz	??_Lcd_Chr_CP,f
  2126  06BC  2EBB               	goto	u957
  2127                           
  2128                           ;HD44780.h: 166: PORTBbits.RB5 = 1; Delay_5us(); PORTBbits.RB5 = 0;
  2129  06BD  1283               	bcf	3,5	;RP0=0, select bank0
  2130  06BE  1303               	bcf	3,6	;RP1=0, select bank0
  2131  06BF  1686               	bsf	6,5	;volatile
  2132  06C0  120A  118A  229E   	fcall	_Delay_5us
      +       120A  118A         
  2133  06C5  1283               	bcf	3,5	;RP0=0, select bank0
  2134  06C6  1303               	bcf	3,6	;RP1=0, select bank0
  2135  06C7  1286               	bcf	6,5	;volatile
  2136                           
  2137                           ;HD44780.h: 167: PORTBbits.RB3 = (Chr_CP & 0b00001000)>>3; PORTBbits.RB2 = (Chr_CP & 0b0
      +                          0000100)>>2;
  2138  06C8  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2139  06C9  00F2               	movwf	??_Lcd_Chr_CP
  2140  06CA  3003               	movlw	3
  2141  06CB                     u725:	
  2142  06CB  1003               	clrc
  2143  06CC  0CF2               	rrf	??_Lcd_Chr_CP,f
  2144  06CD  3EFF               	addlw	-1
  2145  06CE  1D03               	skipz
  2146  06CF  2ECB               	goto	u725
  2147  06D0  0872               	movf	??_Lcd_Chr_CP,w
  2148  06D1  3901               	andlw	1
  2149  06D2  00F3               	movwf	??_Lcd_Chr_CP+1
  2150  06D3  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2151  06D4  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2152  06D5  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2153  06D6  0806               	movf	6,w	;volatile
  2154  06D7  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2155  06D8  39F7               	andlw	-9
  2156  06D9  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2157  06DA  0086               	movwf	6	;volatile
  2158  06DB  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2159  06DC  00F2               	movwf	??_Lcd_Chr_CP
  2160  06DD  3002               	movlw	2
  2161  06DE                     u735:	
  2162  06DE  1003               	clrc
  2163  06DF  0CF2               	rrf	??_Lcd_Chr_CP,f
  2164  06E0  3EFF               	addlw	-1
  2165  06E1  1D03               	skipz
  2166  06E2  2EDE               	goto	u735
  2167  06E3  0872               	movf	??_Lcd_Chr_CP,w
  2168  06E4  3901               	andlw	1
  2169  06E5  00F3               	movwf	??_Lcd_Chr_CP+1
  2170  06E6  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2171  06E7  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2172  06E8  0806               	movf	6,w	;volatile
  2173  06E9  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2174  06EA  39FB               	andlw	-5
  2175  06EB  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2176  06EC  0086               	movwf	6	;volatile
  2177                           
  2178                           ;HD44780.h: 168: PORTBbits.RB1 = (Chr_CP & 0b00000010)>>1; PORTBbits.RB0 = (Chr_CP & 0b0
      +                          0000001);
  2179  06ED  0874               	movf	Lcd_Chr_CP@Chr_CP,w
  2180  06EE  00F2               	movwf	??_Lcd_Chr_CP
  2181  06EF  1003               	clrc
  2182  06F0  0C72               	rrf	??_Lcd_Chr_CP,w
  2183  06F1  3901               	andlw	1
  2184  06F2  00F3               	movwf	??_Lcd_Chr_CP+1
  2185  06F3  0DF3               	rlf	??_Lcd_Chr_CP+1,f
  2186  06F4  0806               	movf	6,w	;volatile
  2187  06F5  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2188  06F6  39FD               	andlw	-3
  2189  06F7  0673               	xorwf	??_Lcd_Chr_CP+1,w
  2190  06F8  0086               	movwf	6	;volatile
  2191  06F9  3001               	movlw	1
  2192  06FA  0574               	andwf	Lcd_Chr_CP@Chr_CP,w
  2193  06FB  00F2               	movwf	??_Lcd_Chr_CP
  2194  06FC  0806               	movf	6,w	;volatile
  2195  06FD  0672               	xorwf	??_Lcd_Chr_CP,w
  2196  06FE  39FE               	andlw	-2
  2197  06FF  0672               	xorwf	??_Lcd_Chr_CP,w
  2198  0700  0086               	movwf	6	;volatile
  2199                           
  2200                           ;HD44780.h: 169: _delay(10);
  2201  0701  3003               	movlw	3
  2202  0702  00F2               	movwf	??_Lcd_Chr_CP
  2203  0703                     u967:	
  2204  0703  0BF2               	decfsz	??_Lcd_Chr_CP,f
  2205  0704  2F03               	goto	u967
  2206                           
  2207                           ;HD44780.h: 170: PORTBbits.RB5 = 1; Delay_5us(); PORTBbits.RB5 = 0;
  2208  0705  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0706  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0707  1686               	bsf	6,5	;volatile
  2211  0708  120A  118A  229E   	fcall	_Delay_5us
      +       120A  118A         
  2212  070D  1283               	bcf	3,5	;RP0=0, select bank0
  2213  070E  1303               	bcf	3,6	;RP1=0, select bank0
  2214  070F  1286               	bcf	6,5	;volatile
  2215                           
  2216                           ;HD44780.h: 171: Delay_5us(); Delay_5500us();
  2217  0710  120A  118A  229E   	fcall	_Delay_5us
      +       120A  118A         
  2218  0715  120A  118A  22A7   	fcall	_Delay_5500us
  2219  0718  0008               	return
  2220  0719                     __end_of_Lcd_Chr_CP:	
  2221                           
  2222                           	psect	text10
  2223  029E                     __ptext10:	
  2224 ;; *************** function _Delay_5us *****************
  2225 ;; Defined at:
  2226 ;;		line 81 in file "HD44780.h"
  2227 ;; Parameters:    Size  Location     Type
  2228 ;;		None
  2229 ;; Auto vars:     Size  Location     Type
  2230 ;;		None
  2231 ;; Return value:  Size  Location     Type
  2232 ;;		None               void
  2233 ;; Registers used:
  2234 ;;		wreg
  2235 ;; Tracked objects:
  2236 ;;		On entry : 0/0
  2237 ;;		On exit  : 0/0
  2238 ;;		Unchanged: 0/0
  2239 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2240 ;;      Params:         0       0       0       0       0
  2241 ;;      Locals:         0       0       0       0       0
  2242 ;;      Temps:          1       0       0       0       0
  2243 ;;      Totals:         1       0       0       0       0
  2244 ;;Total ram usage:        1 bytes
  2245 ;; Hardware stack levels used:    1
  2246 ;; This function calls:
  2247 ;;		Nothing
  2248 ;; This function is called by:
  2249 ;;		_Lcd_Init
  2250 ;;		_Lcd_Chr_CP
  2251 ;;		_Lcd_Cmd
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _Delay_5us
  2257  029E                     _Delay_5us:	
  2258                           
  2259                           ;HD44780.h: 82: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _Delay_5us: [wreg]
  2263  029E  3003               	movlw	3
  2264  029F  00F0               	movwf	??_Delay_5us
  2265  02A0                     u977:	
  2266  02A0  0BF0               	decfsz	??_Delay_5us,f
  2267  02A1  2AA0               	goto	u977
  2268                           
  2269                           ;HD44780.h: 83: _delay((unsigned long)((5)*(8000000/4000000.0)));
  2270  02A2  3003               	movlw	3
  2271  02A3  00F0               	movwf	??_Delay_5us
  2272  02A4                     u987:	
  2273  02A4  0BF0               	decfsz	??_Delay_5us,f
  2274  02A5  2AA4               	goto	u987
  2275  02A6  0008               	return
  2276  02A7                     __end_of_Delay_5us:	
  2277                           
  2278                           	psect	text11
  2279  02A7                     __ptext11:	
  2280 ;; *************** function _Delay_5500us *****************
  2281 ;; Defined at:
  2282 ;;		line 86 in file "HD44780.h"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;		None               void
  2289 ;; Registers used:
  2290 ;;		wreg
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2296 ;;      Params:         0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0
  2298 ;;      Temps:          2       0       0       0       0
  2299 ;;      Totals:         2       0       0       0       0
  2300 ;;Total ram usage:        2 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; This function calls:
  2303 ;;		Nothing
  2304 ;; This function is called by:
  2305 ;;		_Lcd_Init
  2306 ;;		_Lcd_Chr_CP
  2307 ;;		_Lcd_Cmd
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _Delay_5500us
  2313  02A7                     _Delay_5500us:	
  2314                           
  2315                           ;HD44780.h: 87: _delay((unsigned long)((5500)*(8000000/4000000.0)));
  2316                           
  2317                           ;incstack = 0
  2318                           ; Regs used in _Delay_5500us: [wreg]
  2319  02A7  300F               	movlw	15
  2320  02A8  00F1               	movwf	??_Delay_5500us+1
  2321  02A9  3047               	movlw	71
  2322  02AA  00F0               	movwf	??_Delay_5500us
  2323  02AB                     u997:	
  2324  02AB  0BF0               	decfsz	??_Delay_5500us,f
  2325  02AC  2AAB               	goto	u997
  2326  02AD  0BF1               	decfsz	??_Delay_5500us+1,f
  2327  02AE  2AAB               	goto	u997
  2328  02AF  2AB0               	nop2
  2329  02B0  0008               	return
  2330  02B1                     __end_of_Delay_5500us:	
  2331                           
  2332                           	psect	text12
  2333  0369                     __ptext12:	
  2334 ;; *************** function _ow_read_byte *****************
  2335 ;; Defined at:
  2336 ;;		line 61 in file "ow.h"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  i               1    4[COMMON] unsigned char 
  2341 ;;  data            1    3[COMMON] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      unsigned char 
  2344 ;; Registers used:
  2345 ;;		wreg, status,2, status,0
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2351 ;;      Params:         0       0       0       0       0
  2352 ;;      Locals:         2       0       0       0       0
  2353 ;;      Temps:          3       0       0       0       0
  2354 ;;      Totals:         5       0       0       0       0
  2355 ;;Total ram usage:        5 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; This function calls:
  2358 ;;		Nothing
  2359 ;; This function is called by:
  2360 ;;		_ds_get_temp
  2361 ;; This function uses a non-reentrant model
  2362 ;;
  2363                           
  2364                           
  2365                           ;psect for function _ow_read_byte
  2366  0369                     _ow_read_byte:	
  2367                           
  2368                           ;ow.h: 63: char data=0;
  2369                           
  2370                           ;incstack = 0
  2371                           ; Regs used in _ow_read_byte: [wreg+status,2+status,0]
  2372  0369  01F3               	clrf	ow_read_byte@data
  2373                           
  2374                           ;ow.h: 64: char i;
  2375                           ;ow.h: 65: for (i=0;i<8;i++)
  2376  036A  01F4               	clrf	ow_read_byte@i
  2377  036B  3008               	movlw	8
  2378  036C  0274               	subwf	ow_read_byte@i,w
  2379  036D  1803               	btfsc	3,0
  2380  036E  2B9D               	goto	l1134
  2381  036F                     l84:	
  2382                           
  2383                           ;ow.h: 66: {
  2384                           ;ow.h: 68: TRISEbits.TRISE2=0;
  2385  036F  1683               	bsf	3,5	;RP0=1, select bank1
  2386  0370  1303               	bcf	3,6	;RP1=0, select bank1
  2387  0371  1109               	bcf	9,2	;volatile
  2388                           
  2389                           ;ow.h: 69: PORTEbits.RE2=0;
  2390  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2391  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2392  0374  1109               	bcf	9,2	;volatile
  2393                           
  2394                           ;ow.h: 70: _delay((unsigned long)((2)*(8000000/4000000.0)));
  2395  0375  2B76               	nop2	;2 cycle nop
  2396  0376  2B77               	nop2	;2 cycle nop
  2397                           
  2398                           ;ow.h: 72: PORTEbits.RE2=1;
  2399  0377  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0378  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0379  1509               	bsf	9,2	;volatile
  2402                           
  2403                           ;ow.h: 74: _delay((unsigned long)((8)*(8000000/4000000.0)));
  2404  037A  3005               	movlw	5
  2405  037B  00F0               	movwf	??_ow_read_byte
  2406  037C                     u1007:	
  2407  037C  0BF0               	decfsz	??_ow_read_byte,f
  2408  037D  2B7C               	goto	u1007
  2409                           
  2410                           ;ow.h: 76: data = (PORTEbits.RE2 << i) | data;
  2411  037E  1283               	bcf	3,5	;RP0=0, select bank0
  2412  037F  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0380  0C09               	rrf	9,w	;volatile
  2414  0381  00F0               	movwf	??_ow_read_byte
  2415  0382  0C70               	rrf	??_ow_read_byte,w
  2416  0383  3901               	andlw	1
  2417  0384  00F1               	movwf	??_ow_read_byte+1
  2418  0385  0A74               	incf	ow_read_byte@i,w
  2419  0386  2B89               	goto	u544
  2420  0387                     u545:	
  2421  0387  1003               	clrc
  2422  0388  0DF1               	rlf	??_ow_read_byte+1,f
  2423  0389                     u544:	
  2424  0389  3EFF               	addlw	-1
  2425  038A  1D03               	skipz
  2426  038B  2B87               	goto	u545
  2427  038C  0871               	movf	??_ow_read_byte+1,w
  2428  038D  0473               	iorwf	ow_read_byte@data,w
  2429  038E  00F2               	movwf	??_ow_read_byte+2
  2430  038F  0872               	movf	??_ow_read_byte+2,w
  2431  0390  00F3               	movwf	ow_read_byte@data
  2432                           
  2433                           ;ow.h: 78: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2434  0391  3021               	movlw	33
  2435  0392  00F0               	movwf	??_ow_read_byte
  2436  0393                     u1017:	
  2437  0393  0BF0               	decfsz	??_ow_read_byte,f
  2438  0394  2B93               	goto	u1017
  2439  0395  3001               	movlw	1
  2440  0396  00F0               	movwf	??_ow_read_byte
  2441  0397  0870               	movf	??_ow_read_byte,w
  2442  0398  07F4               	addwf	ow_read_byte@i,f
  2443  0399  3008               	movlw	8
  2444  039A  0274               	subwf	ow_read_byte@i,w
  2445  039B  1C03               	skipc
  2446  039C  2B6F               	goto	l84
  2447  039D                     l1134:	
  2448                           
  2449                           ;ow.h: 79: }
  2450                           ;ow.h: 80: return data;
  2451  039D  0873               	movf	ow_read_byte@data,w
  2452  039E  0008               	return
  2453  039F                     __end_of_ow_read_byte:	
  2454                           
  2455                           	psect	text13
  2456  0303                     __ptext13:	
  2457 ;; *************** function _ow_write_byte *****************
  2458 ;; Defined at:
  2459 ;;		line 39 in file "ow.h"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  data            1    wreg     unsigned char 
  2462 ;; Auto vars:     Size  Location     Type
  2463 ;;  data            1    2[COMMON] unsigned char 
  2464 ;;  i               1    3[COMMON] unsigned char 
  2465 ;; Return value:  Size  Location     Type
  2466 ;;		None               void
  2467 ;; Registers used:
  2468 ;;		wreg, status,2, status,0
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         2       0       0       0       0
  2476 ;;      Temps:          2       0       0       0       0
  2477 ;;      Totals:         4       0       0       0       0
  2478 ;;Total ram usage:        4 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		_ds_get_temp
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _ow_write_byte
  2489  0303                     _ow_write_byte:	
  2490                           
  2491                           ;incstack = 0
  2492                           ; Regs used in _ow_write_byte: [wreg+status,2+status,0]
  2493                           ;ow_write_byte@data stored from wreg
  2494  0303  00F2               	movwf	ow_write_byte@data
  2495                           
  2496                           ;ow.h: 41: char i;
  2497                           ;ow.h: 42: for (i=0;i<8;i++)
  2498  0304  01F3               	clrf	ow_write_byte@i
  2499  0305                     L7:	
  2500  0305  3008               	movlw	8
  2501  0306  0273               	subwf	ow_write_byte@i,w
  2502  0307  1803               	btfsc	3,0
  2503  0308  0008               	return
  2504                           
  2505                           ;ow.h: 43: {
  2506                           ;ow.h: 45: TRISEbits.TRISE2=0;
  2507  0309  1683               	bsf	3,5	;RP0=1, select bank1
  2508  030A  1303               	bcf	3,6	;RP1=0, select bank1
  2509  030B  1109               	bcf	9,2	;volatile
  2510                           
  2511                           ;ow.h: 46: PORTEbits.RE2=0;
  2512  030C  1283               	bcf	3,5	;RP0=0, select bank0
  2513  030D  1303               	bcf	3,6	;RP1=0, select bank0
  2514  030E  1109               	bcf	9,2	;volatile
  2515                           
  2516                           ;ow.h: 48: _delay((unsigned long)((10)*(8000000/4000000.0)));
  2517  030F  3006               	movlw	6
  2518  0310  00F0               	movwf	??_ow_write_byte
  2519  0311                     u1027:	
  2520  0311  0BF0               	decfsz	??_ow_write_byte,f
  2521  0312  2B11               	goto	u1027
  2522  0313  0000               	nop
  2523                           
  2524                           ;ow.h: 51: PORTEbits.RE2 = data & 0x01;
  2525  0314  0872               	movf	ow_write_byte@data,w
  2526  0315  3901               	andlw	1
  2527  0316  00F0               	movwf	??_ow_write_byte
  2528  0317  0DF0               	rlf	??_ow_write_byte,f
  2529  0318  0DF0               	rlf	??_ow_write_byte,f
  2530  0319  1283               	bcf	3,5	;RP0=0, select bank0
  2531  031A  1303               	bcf	3,6	;RP1=0, select bank0
  2532  031B  0809               	movf	9,w	;volatile
  2533  031C  0670               	xorwf	??_ow_write_byte,w
  2534  031D  39FB               	andlw	-5
  2535  031E  0670               	xorwf	??_ow_write_byte,w
  2536  031F  0089               	movwf	9	;volatile
  2537                           
  2538                           ;ow.h: 52: _delay((unsigned long)((50)*(8000000/4000000.0)));
  2539  0320  3021               	movlw	33
  2540  0321  00F0               	movwf	??_ow_write_byte
  2541  0322                     u1037:	
  2542  0322  0BF0               	decfsz	??_ow_write_byte,f
  2543  0323  2B22               	goto	u1037
  2544                           
  2545                           ;ow.h: 54: PORTEbits.RE2=1;
  2546  0324  1283               	bcf	3,5	;RP0=0, select bank0
  2547  0325  1303               	bcf	3,6	;RP1=0, select bank0
  2548  0326  1509               	bsf	9,2	;volatile
  2549                           
  2550                           ;ow.h: 56: _delay((unsigned long)((2)*(8000000/4000000.0)));
  2551  0327  2B28               	nop2	;2 cycle nop
  2552  0328  2B29               	nop2	;2 cycle nop
  2553                           
  2554                           ;ow.h: 57: data =data >>1;
  2555  0329  0872               	movf	ow_write_byte@data,w
  2556  032A  00F0               	movwf	??_ow_write_byte
  2557  032B  1003               	clrc
  2558  032C  0C70               	rrf	??_ow_write_byte,w
  2559  032D  00F1               	movwf	??_ow_write_byte+1
  2560  032E  0871               	movf	??_ow_write_byte+1,w
  2561  032F  00F2               	movwf	ow_write_byte@data
  2562  0330  3001               	movlw	1
  2563  0331  00F0               	movwf	??_ow_write_byte
  2564  0332  0870               	movf	??_ow_write_byte,w
  2565  0333  07F3               	addwf	ow_write_byte@i,f
  2566  0334  2B05               	goto	L7
  2567  0335                     __end_of_ow_write_byte:	
  2568                           
  2569                           	psect	text14
  2570  02B1                     __ptext14:	
  2571 ;; *************** function _ow_reset *****************
  2572 ;; Defined at:
  2573 ;;		line 20 in file "ow.h"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;  device_found    2    2[COMMON] short 
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      unsigned char 
  2580 ;; Registers used:
  2581 ;;		wreg, status,2, status,0
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2587 ;;      Params:         0       0       0       0       0
  2588 ;;      Locals:         2       0       0       0       0
  2589 ;;      Temps:          2       0       0       0       0
  2590 ;;      Totals:         4       0       0       0       0
  2591 ;;Total ram usage:        4 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; This function calls:
  2594 ;;		Nothing
  2595 ;; This function is called by:
  2596 ;;		_ds_get_temp
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           
  2602                           ;psect for function _ow_reset
  2603  02B1                     _ow_reset:	
  2604                           
  2605                           ;ow.h: 22: short device_found=0;
  2606                           
  2607                           ;incstack = 0
  2608                           ; Regs used in _ow_reset: [wreg+status,2+status,0]
  2609  02B1  01F2               	clrf	ow_reset@device_found
  2610  02B2  01F3               	clrf	ow_reset@device_found+1
  2611                           
  2612                           ;ow.h: 24: PORTEbits.RE2=1;
  2613  02B3  1283               	bcf	3,5	;RP0=0, select bank0
  2614  02B4  1303               	bcf	3,6	;RP1=0, select bank0
  2615  02B5  1509               	bsf	9,2	;volatile
  2616                           
  2617                           ;ow.h: 26: TRISEbits.TRISE2=0;
  2618  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2619  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2620  02B8  1109               	bcf	9,2	;volatile
  2621                           
  2622                           ;ow.h: 27: PORTEbits.RE2=0;
  2623  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  2624  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  2625  02BB  1109               	bcf	9,2	;volatile
  2626                           
  2627                           ;ow.h: 29: _delay((unsigned long)((480)*(8000000/4000000.0)));
  2628  02BC  3089               	movlw	137
  2629  02BD  00F0               	movwf	??_ow_reset
  2630  02BE                     u1047:	
  2631  02BE  2ABF               	nop2
  2632  02BF  2AC0               	nop2
  2633  02C0  0BF0               	decfsz	??_ow_reset,f
  2634  02C1  2ABE               	goto	u1047
  2635                           
  2636                           ;ow.h: 31: PORTEbits.RE2=1;
  2637  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  2638  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  2639  02C4  1509               	bsf	9,2	;volatile
  2640                           
  2641                           ;ow.h: 33: _delay((unsigned long)((60)*(8000000/4000000.0)));
  2642  02C5  3027               	movlw	39
  2643  02C6  00F0               	movwf	??_ow_reset
  2644  02C7                     u1057:	
  2645  02C7  0BF0               	decfsz	??_ow_reset,f
  2646  02C8  2AC7               	goto	u1057
  2647  02C9  2ACA               	nop2	;nop
  2648                           
  2649                           ;ow.h: 35: device_found = !PORTEbits.RE2;
  2650  02CA  1003               	clrc
  2651  02CB  1283               	bcf	3,5	;RP0=0, select bank0
  2652  02CC  1303               	bcf	3,6	;RP1=0, select bank0
  2653  02CD  1D09               	btfss	9,2	;volatile
  2654  02CE  1403               	setc
  2655  02CF  3000               	movlw	0
  2656  02D0  1803               	skipnc
  2657  02D1  3001               	movlw	1
  2658  02D2  00F0               	movwf	??_ow_reset
  2659  02D3  01F1               	clrf	??_ow_reset+1
  2660  02D4  0870               	movf	??_ow_reset,w
  2661  02D5  00F2               	movwf	ow_reset@device_found
  2662  02D6  0871               	movf	??_ow_reset+1,w
  2663  02D7  00F3               	movwf	ow_reset@device_found+1
  2664  02D8  0008               	return
  2665  02D9                     __end_of_ow_reset:	
  2666                           ;ow.h: 36: return device_found;
  2667                           ;	Return value of _ow_reset is never used
  2668                           
  2669  007E                     btemp	set	126	;btemp
  2670  007E                     wtemp	set	126
  2671  007E                     wtemp0	set	126
  2672  0080                     wtemp1	set	128
  2673  0082                     wtemp2	set	130
  2674  0084                     wtemp3	set	132
  2675  0086                     wtemp4	set	134
  2676  0088                     wtemp5	set	136
  2677  007F                     wtemp6	set	127
  2678  007E                     ttemp	set	126
  2679  007E                     ttemp0	set	126
  2680  0081                     ttemp1	set	129
  2681  0084                     ttemp2	set	132
  2682  0087                     ttemp3	set	135
  2683  007F                     ttemp4	set	127
  2684  007E                     ltemp	set	126
  2685  007E                     ltemp0	set	126
  2686  0082                     ltemp1	set	130
  2687  0086                     ltemp2	set	134
  2688  0080                     ltemp3	set	128


Data Sizes:
    Strings     20
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 10
		 -> currentTemp(BANK0[10]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S200$_cp	PTR const unsigned char  size(1) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(1) Largest target is 0

    Lcd_Out@buffer	PTR const unsigned char  size(2) Largest target is 17
		 -> currentTemp(BANK0[10]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _Lcd_Out->_Lcd_Chr_CP
    _Lcd_Out->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Chr->_Lcd_Chr_CP
    _Lcd_Chr->_Lcd_Cmd
    _Lcd_Cmd->_Delay_5500us
    _Lcd_Chr_CP->_Delay_5500us

Critical Paths under _main in BANK0

    _main->_ds_get_temp
    _ds_get_temp->_sprintf

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3537
                                             23 BANK0      2     2      0
                            _Lcd_Chr
                            _Lcd_Cmd
                           _Lcd_Init
                            _Lcd_Out
                        _ds_get_temp
                           _ow_reset
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             15    12      3    1156
                                              0 BANK0     15    12      3
                            ___lwdiv
                            ___lwmod
                       _ow_read_byte (ARG)
                           _ow_reset (ARG)
                      _ow_write_byte (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     287
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     290
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _ds_get_temp                                          8     6      2     328
                                             15 BANK0      8     6      2
                       _ow_read_byte
                           _ow_reset
                      _ow_write_byte
                            _sprintf (ARG)
 ---------------------------------------------------------------------------------
 (1) _Lcd_Out                                              6     3      3     789
                                              5 COMMON     6     3      3
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0     314
                                              5 COMMON     2     2      0
                       _Delay_5500us
                          _Delay_5us
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Chr                                              5     3      2     766
                                              5 COMMON     5     3      2
                         _Lcd_Chr_CP
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0     176
                                              2 COMMON     3     3      0
                       _Delay_5500us
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (2) _Lcd_Chr_CP                                           3     3      0     176
                                              2 COMMON     3     3      0
                       _Delay_5500us
                          _Delay_5us
 ---------------------------------------------------------------------------------
 (3) _Delay_5us                                            1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _Delay_5500us                                         2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _ow_read_byte                                         5     5      0     114
                                              0 COMMON     5     5      0
 ---------------------------------------------------------------------------------
 (2) _ow_write_byte                                        4     4      0      91
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _ow_reset                                             4     4      0       8
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Chr
     _Lcd_Chr_CP
       _Delay_5500us
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
       _Delay_5us
   _Lcd_Cmd
     _Delay_5500us
     _Delay_5us
   _Lcd_Init
     _Delay_5500us
     _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
       _Delay_5us
   _Lcd_Out
     _Lcd_Chr_CP
       _Delay_5500us
       _Delay_5us
     _Lcd_Cmd
       _Delay_5500us
       _Delay_5us
   _ds_get_temp
     _ow_read_byte
     _ow_reset
     _ow_write_byte
     _sprintf (ARG)
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
       _ow_read_byte (ARG)
       _ow_reset (ARG)
       _ow_write_byte (ARG)
   _ow_reset
   _sprintf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _ow_read_byte (ARG)
     _ow_reset (ARG)
     _ow_write_byte (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      31       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     19      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      31      12        0.0%


Microchip Technology PIC Macro Assembler V1.30 build 55553 
Symbol Table                                                                                   Tue Apr 15 03:19:49 2014

                      pc 0002              __CFG_CP$OFF 0000                       l30 0583  
                     l29 055B                       l84 036F                       fsr 0004  
         ?_ow_write_byte 0070             __CFG_CPD$OFF 0000                      u605 0358  
                    u455 03AA                      u544 0389                      u545 0387  
                    u705 069B                      u625 05D0                      u715 06AC  
                    u635 05E3                      u475 03B6                      u725 06CB  
                    u645 05F5                      u485 03C2                      u735 06DE  
                    u655 0606                      u495 03CC                      u575 033E  
                    u665 0625                      u675 0638                      u907 04D8  
                    u595 034F                      u685 0676                      u917 04E5  
                    u695 0689                      u927 04F2                      u775 078A  
                    u937 0615                      u857 04A4                      u947 065D  
                    u867 04B1                      u957 06BB                      u877 04BE  
                    u967 0703                      u887 04C5                      u977 02A0  
                    u897 04CC                      u987 02A4                      u997 02AB  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
           __CFG_LVP$OFF 0000                     l1134 039D                     l1310 07A3  
                   l1400 0402                     l1072 03CB                     l1064 03A7  
                   l1152 0357                     l1304 0794                     l1320 0720  
                   l1410 02E4                     l1066 03B5                     l1146 033B  
                   l1322 07ED                     l1404 02DB                     l1076 03D6  
                   l1148 0349                     l1156 0362                     l1406 02DE  
                   l1414 02EA                     l1318 07A7                     l1408 02E1  
                   l1416 02F8                     l1432 0468                     l1282 0756  
                   l1292 076D                     l1276 0740                     l1382 03DF  
                   l1384 03E2                     l1392 03EE                     l1296 0773  
                   l1386 03E5                     l1394 03FC                     l1388 03E8  
                   STR_1 001D                     STR_2 002E                     u1007 037C  
                   u1017 0393                     u1027 0311                     u1037 0322  
                   u1047 02BE                     u1057 02C7             __CFG_WRT$OFF 0000  
                   _main 0425                     btemp 007E                     ltemp 007E  
                   start 0000                     ttemp 007E                     wtemp 007E  
        __end_of_Lcd_Cmd 066E          __end_of_Lcd_Chr 0303          __end_of_Lcd_Out 0425  
             _Lcd_Chr_CP 066E                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _CMCON 009C          __end_of___lwdiv 03DD          __end_of___lwmod 0369  
        __end_of_dpowers 001D   ds_get_temp@temperature 0035           __CFG_BOREN$OFF 0000  
                  pclath 000A                    ltemp0 007E                    ltemp1 0082  
                  ltemp2 0086                    ltemp3 0080                    ttemp0 007E  
                  ttemp1 0081                    ttemp2 0084                    ttemp3 0087  
                  ttemp4 007F                    status 0003                    wtemp0 007E  
                  wtemp1 0080                    wtemp2 0082                    wtemp3 0084  
                  wtemp4 0086                    wtemp5 0088                    wtemp6 007F  
        __end_of_sprintf 07F2         __end_of_Lcd_Init 05C8          __initialization 07F2  
  __size_of_Delay_5500us 000A             __end_of_main 0497       __size_of_Delay_5us 0009  
        ??_ow_write_byte 0070                   ??_main 0037                   _ADCON1 009F  
   ow_reset@device_found 0072                ??_Lcd_Cmd 0072                ??_Lcd_Chr 0077  
           _Delay_5500us 02A7                ??_Lcd_Out 0078           __CFG_PWRTE$OFF 0000  
   __size_of_ds_get_temp 0090              ?_Lcd_Chr_CP 0070                ??___lwdiv 0074  
              ??___lwmod 007C         __end_of_ow_reset 02D9                ??_sprintf 0023  
      __end_of_Delay_5us 02A7  __end_of__initialization 07FC      ds_get_temp@temp_low 0033  
         __pcstackCOMMON 0070                ?_Lcd_Init 0070      __size_of_Lcd_Chr_CP 00AB  
             __pbssBANK0 0039         Lcd_Chr_CP@Chr_CP 0074               __pmaintext 0425  
             ??_Lcd_Init 0075           ow_write_byte@i 0073               __stringtab 0003  
                _Lcd_Cmd 05C8                  _Lcd_Chr 02D9                  _Lcd_Out 03DD  
       ow_read_byte@data 0073                ?_ow_reset 0070                  ___lwdiv 039F  
                ___lwmod 0335                  __ptext1 0719                  __ptext2 0335  
                __ptext3 039F                  __ptext4 0497                  __ptext5 03DD  
                __ptext6 0527                  __ptext7 02D9                  __ptext8 05C8  
                __ptext9 066E                  _dpowers 0013                  _sprintf 0719  
   end_of_initialization 07FC            ?_ow_read_byte 0070             ??_Lcd_Chr_CP 0072  
             ??_ow_reset 0070                _PORTBbits 0006                _PORTEbits 0009  
  __end_of_ow_write_byte 0335                _TRISBbits 0086                _TRISEbits 0089  
         ??_ow_read_byte 0070       __end_of_Lcd_Chr_CP 0719            ??_ds_get_temp 0031  
   ds_get_temp@temp_high 0034                _Delay_5us 029E      start_initialization 07F2  
          Lcd_Out@buffer 0076        __size_of_Lcd_Init 00A1               ?_Delay_5us 0070  
    __end_of_ds_get_temp 0527                ___latbits 0002            __pcstackBANK0 0020  
    __end_of__stringdata 0031                 ?_Lcd_Cmd 0070                 ?_Lcd_Chr 0075  
            sprintf@_val 0029              sprintf@flag 0027                 ?_Lcd_Out 0075  
            sprintf@prec 0028         ___lwdiv@dividend 0072                 ?___lwdiv 0070  
               ?___lwmod 0078     __end_of_ow_read_byte 039F        __size_of_ow_reset 0028  
              __pstrings 0003         ___lwdiv@quotient 0075                 ?_sprintf 0020  
          ?_Delay_5500us 0070              _ds_get_temp 0497              ??_Delay_5us 0070  
               Lcd_Chr@x 0075                 Lcd_Chr@y 0078                 Lcd_Out@x 0075  
               Lcd_Out@y 0079             Lcd_Init@data 0076              __stringbase 0012  
            __stringdata 001D                 _Lcd_Init 0527           ??_Delay_5500us 0070  
       __size_of_Lcd_Cmd 00A6         __size_of_Lcd_Chr 002A         __size_of_Lcd_Out 0048  
       __size_of___lwdiv 003E         __size_of___lwmod 0034       __end_of__stringtab 0013  
            _currentTemp 0039          ___lwdiv@divisor 0070          ___lwdiv@counter 0077  
               __ptext10 029E                 __ptext11 02A7                 __ptext12 0369  
               __ptext13 0303                 __ptext14 02B1         __size_of_sprintf 00D9  
            Lcd_Chr@data 0079            __size_of_main 0072   __size_of_ow_write_byte 0032  
  __size_of_ow_read_byte 0036                 _ow_reset 02B1              Lcd_Out@data 007A  
              sprintf@ap 0026                sprintf@sp 002D             _ow_read_byte 0369  
       ___lwmod@dividend 007A               Lcd_Cmd@Cmd 0074            ow_read_byte@i 0074  
             Lcd_Chr@Chr 0076                stringcode 000D     __end_of_Delay_5500us 02B1  
               sprintf@c 002E                 sprintf@f 0020            _ow_write_byte 0303  
        ___lwmod@divisor 0078          ___lwmod@counter 007D                 stringdir 000D  
               stringtab 0003             ?_ds_get_temp 002F        ow_write_byte@data 0072  
